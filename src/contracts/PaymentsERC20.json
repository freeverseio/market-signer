{
  "contractName": "PaymentsERC20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "currencyDescriptor",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyerRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feesCollector",
          "type": "address"
        }
      ],
      "name": "DefaultFeesCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "DefaultOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "NewSeller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "Payin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "PaymentWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feesCollector",
          "type": "address"
        }
      ],
      "name": "UniverseFeesCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "UniverseOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "defaultFeesCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        }
      ],
      "name": "removeUniverseFeesCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        }
      ],
      "name": "removeUniverseOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feesCollector",
          "type": "address"
        }
      ],
      "name": "setDefaultFeesCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "setDefaultOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feesCollector",
          "type": "address"
        }
      ],
      "name": "setUniverseFeesCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "setUniverseOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        }
      ],
      "name": "universeFeesCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        }
      ],
      "name": "universeOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct EIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "setPaymentWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isRequired",
          "type": "bool"
        }
      ],
      "name": "setIsSellerRegistrationRequired",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct EIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "buyerSignature",
          "type": "bytes"
        }
      ],
      "name": "relayedPay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct EIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "assetTransferSuccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "assetTransferFailed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refundAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSellerRegistrationRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isRegisteredSeller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "erc20BalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum PaymentsERC20.States",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feesCollector",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct PaymentsERC20.Payment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentState",
      "outputs": [
        {
          "internalType": "enum PaymentsERC20.States",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptedCurrency",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "enoughFundsAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "maxFundsAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "splitFundingSources",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "externalFunds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "localFunds",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct EIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        }
      ],
      "name": "checkPaymentInputs",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeBPS",
          "type": "uint256"
        }
      ],
      "name": "computeFeeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"currencyDescriptor\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyerRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"DefaultFeesCollector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"DefaultOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"NewSeller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"Payin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"PaymentWindow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"UniverseFeesCollector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"UniverseOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedCurrency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"assetTransferFailed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"assetTransferSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct EIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"}],\"name\":\"checkPaymentInputs\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBPS\",\"type\":\"uint256\"}],\"name\":\"computeFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFeesCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"enoughFundsAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"erc20BalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isRegisteredSeller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSellerRegistrationRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"maxFundsAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct EIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"enum PaymentsERC20.States\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct PaymentsERC20.Payment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentState\",\"outputs\":[{\"internalType\":\"enum PaymentsERC20.States\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refundAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct EIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"buyerSignature\",\"type\":\"bytes\"}],\"name\":\"relayedPay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"}],\"name\":\"removeUniverseFeesCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"}],\"name\":\"removeUniverseOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"setDefaultFeesCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"setDefaultOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isRequired\",\"type\":\"bool\"}],\"name\":\"setIsSellerRegistrationRequired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"setPaymentWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"setUniverseFeesCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"setUniverseOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"splitFundingSources\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"externalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"localFunds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"}],\"name\":\"universeFeesCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"}],\"name\":\"universeOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct EIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptedCurrency()\":{\"returns\":{\"_0\":\"the string describing the currency\"}},\"allowance(address)\":{\"params\":{\"buyer\":\"the address of the buyer\"},\"returns\":{\"_0\":\"the amount allowed by buyer\"}},\"assetTransferFailed(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"assetTransferSuccess(bytes32)\":{\"details\":\"Moves payment to PAID state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"balanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the local balance\"}},\"computeFeeAmount(uint256,uint256)\":{\"returns\":{\"_0\":\"the fee amount\"}},\"enoughFundsAvailable(address,uint256)\":{\"returns\":{\"_0\":\"a bool, true is enough available\"}},\"erc20BalanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the balance in the external ERC20 contract\"}},\"isRegisteredSeller(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"isRegistered as seller\"}},\"maxFundsAvailable(address)\":{\"returns\":{\"_0\":\"the max funds available\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"inp\":\"The struct containing all required payment data\",\"operatorSignature\":\"The signature of 'inp' by the operator\"}},\"paymentInfo(bytes32)\":{\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the struct stored for the payment\"}},\"paymentState(bytes32)\":{\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the struct stored for the payment\"}},\"paymentWindow()\":{\"returns\":{\"_0\":\"the payment window\"}},\"refund(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"refundAndWithdraw(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"buyerSignature\":\"The signature of 'inp' by the buyer\",\"inp\":\"The struct containing all required payment data\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setIsSellerRegistrationRequired(bool)\":{\"params\":{\"isRequired\":\"(bool) if true, registration is required.\"}},\"setPaymentWindow(uint256)\":{\"params\":{\"window\":\"The amount of time available, in seconds.\"}},\"splitFundingSources(address,uint256)\":{\"returns\":{\"externalFunds\":\"- the amount of ERC20 required from the external ERC20 contract.\",\"localFunds\":\"- the amount of ERC20 local funds required. \"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptedCurrency()\":{\"notice\":\"Returns a descriptor about the currency that this contract accepts\"},\"allowance(address)\":{\"notice\":\"Returns the allowance that the buyer has approved  directly in the ERC20 contract in favour of this contract.\"},\"assetTransferFailed(bytes32)\":{\"notice\":\"Confirms the failure of asset transfer and refunds buyer.  Needs to be executed by the operator.  Buyer's balance is updated, allowing explicit withdrawal.  It resets all data related to this payment.\"},\"assetTransferSuccess(bytes32)\":{\"notice\":\"Confirms the asset transfer.  Needs to be executed by the operator.  Updates balances of seller and feesCollector.\"},\"balanceOf(address)\":{\"notice\":\"Returns the local ERC20 balance of address that is stored in this  contract, and hence, available for withdrawal.\"},\"checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))\":{\"notice\":\"Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled.\"},\"computeFeeAmount(uint256,uint256)\":{\"notice\":\"Safe compute fee amount  Returns a values that is guaranteed to be less or equal to total provided amount  The safety check should be unnecessary, since only feeBPS < 10000 are accepted  when receiving a payment.\"},\"enoughFundsAvailable(address,uint256)\":{\"notice\":\"Returns true if the 'amount' required for a payment is available to this contract.  In more detail: returns true if the sum of the buyer's local balance in this contract,  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\"},\"erc20()\":{\"notice\":\"Returns the address of the ERC20 contract from which  tokens are accepted for payments\"},\"erc20BalanceOf(address)\":{\"notice\":\"Returns ERC20 balance of address in the ERC20 contract\"},\"isRegisteredSeller(address)\":{\"notice\":\"Returns true if the address provided is a registered seller\"},\"isSellerRegistrationRequired()\":{\"notice\":\"Returns true if sellers need to be registered to be able to accept payments\"},\"maxFundsAvailable(address)\":{\"notice\":\"Returns the maximum amount of funds available to a buyer  In more detail: returns the sum of the buyer's local balance in this contract,  plus the funds available and approved in the ERC20 contract.\"},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts Payment process directly by the buyer.  Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.\"},\"paymentInfo(bytes32)\":{\"notice\":\"Returns all data stored in a payment\"},\"paymentState(bytes32)\":{\"notice\":\"Returns the state of a payment.  It maps 1-to-1 with the stored variable, with the exeption of  an ASSET_TRANSFERRING that has gone beyond expirationTime.\"},\"paymentWindow()\":{\"notice\":\"Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator\"},\"refund(bytes32)\":{\"notice\":\"Moves buyer's provided funds to buyer's balance.  Anybody can call this function.  Requires current state == FAILED to proceed.  After updating buyer's balance, he/she can later withdraw.  It resets all data related to this payment.\"},\"refundAndWithdraw(bytes32)\":{\"notice\":\"Exectutes refund and withdraw in one transaction.  Needs to be called by buyer.  All of buyer's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId\"},\"registerAsSeller()\":{\"notice\":\"Registers msg.sender a seller so that he/she can accept payments.\"},\"relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts the Payment process via relay-by-operator.  Executed by an operator, who relays the MetaTX with the buyer's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.\"},\"setIsSellerRegistrationRequired(bool)\":{\"notice\":\"Sets whether sellers are required to register in this contract before being,  able to accept payments. \"},\"setPaymentWindow(uint256)\":{\"notice\":\"Sets the amount of time available to the operator, after the payment starts,  to confirm either the success of the failure of the asset transfer.   After this time, the payment moves to FAILED, allowing buyer to withdraw.\"},\"splitFundingSources(address,uint256)\":{\"notice\":\"Splits the funds required to pay 'amount' into two source:  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\"},\"withdraw()\":{\"notice\":\"Transfers ERC20 avaliable in this  contract's balanceOf[msg.sender] to msg.sender\"}},\"notice\":\"Payments Contract in ERC20. Upon transfer of ERC20 tokens to this contract, these remain locked until an Operator confirms the success of failure of the asset transfer required to fulfil this payment. If no confirmation is recevied from the operator during the PaymentWindow, all of buyer's received tokens are made available to the buyer for refund. To start a payment, the signatures of both the buyer and the Operator are required. - in the 'relayedPay' method, the Operator is the msg.sender, and the buyerSig is provided; - in the 'pay' method, the buyer is the msg.sender, and the operatorSig is provided. This contract maintains the balances of all users, it does not transfer them automatically. Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender] If a buyer has non-zero local balance at the moment of starting a new payment,  the contract reuses it, and only transfers the remainder required (if any)  from the external ERC20 contract.  Each payment has the following States Machine: - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay/relayedPay - ASSET_TRANSFERRING -> PAID, triggered by assetTransferSuccess - ASSET_TRANSFERRING -> FAILED, triggered implicitly by now > expirationTime - ASSET_TRANSFERRING -> NOT_STARTED, triggered by assetTransferFailure - FAILED -> NOT_STARTED, triggered by refund or refundAndWithdraw - FAILED -> ASSET_TRANSFERRING, triggered by new pay/relayedPay NOTE: To ensure that the a payment process proceeds as expected when the payment starts, upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime} is stored in the payment struct, and used throught the payment, regardless of any possible modifications to the contract's storage.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Payments/PaymentsERC20.sol\":\"PaymentsERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2b7a01bbc90040fd4a48bc143ac5a192da3b9bfc559ac08a78eaca40bf49e436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8a02af79b7d1c4eaa385d3b9d26509ac2619eab43bfbbc2ef9ef74508f8146\",\"dweb:/ipfs/QmWhEKw9ZmDjc9qfLmJcrxgopoCvbBNyFhUCJSewhSpzRi\"]},\"openzeppelin-solidity/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x75800223458de145e6088276ab661222e22557d7518459e1ffc57bb5b0496542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://504433dd10f0037339624055d52df67de43408a4d429eb546c6cb17e5c5a6ae6\",\"dweb:/ipfs/QmQfRTjvbsn9kCc7MNC2E7X4tzpYw4sEPPMpdyWVi5QQNj\"]},\"project:/contracts/Payments/EIP712Verifier.sol\":{\"keccak256\":\"0x8b1aa2975c1052fd886724b0212eced44741312de8fa4768e34e9df31aaa0698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b7b75f57b07eff034beb8286a3354028e16f46ff0ccf6357cea378d07c902e\",\"dweb:/ipfs/QmXu79Hm59h6b1NYzNrUtAoS22hXyQMuW5ojkuu9Vuv36H\"]},\"project:/contracts/Payments/FeesCollectors.sol\":{\"keccak256\":\"0xd6daf1723b8e9d16f4685453b146516390199fcc59c1e4f077bbd803f1455d87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3fdad1ae9ac7b06f337713d22e5ddbcd446f5092c1750a8a9cd16d3ce81e6c5\",\"dweb:/ipfs/QmQ4e7WNR2ews5zTCe76us2iok29j4ABkDxT92XyEyTx2C\"]},\"project:/contracts/Payments/Operators.sol\":{\"keccak256\":\"0x5c22ace248a78e2d125de7c40523a462ce4e6c53439cb744318052f2f1dfb6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07e1d416fc7d2ee78da7b5d4a699f3c8d5409676e6dfabb3032171bf3ea1f5d3\",\"dweb:/ipfs/QmZ7h7vaZqqyaiD8fLXKAaNvNAA4F9TZeVB85sAGP8ywL3\"]},\"project:/contracts/Payments/PaymentsERC20.sol\":{\"keccak256\":\"0xda9a2395104dfa3644d4cd12efa976ae6f7d8dc68fc13adb32a3833f84161c2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdc98afea3bbd6735d41cbe6c320301dffb415cad72c4ff931cd607ab8a116b5\",\"dweb:/ipfs/QmSCRLNtCwhhWzB9uMHuDVJKgV9HfK8GbojabDUNAPiihu\"]}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b5060405162002f7938038062002f798339810160408190526200003591620002e6565b604051806040016040528060128152602001714549503731322d46562d5061796d656e747360701b81525060405180604001604052806005815260200164302e302e3160d81b8152506000620000906200023c60201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b031916339081179091556040519081527fec71ba738f211337eaf29e2d87bdb1b0928316c20db0a3a1108aa43321583b509060200160405180910390a1600380546001600160a01b031916339081179091556040519081527fa60019696f11f9aa952db763c0de585f819d10fcafcfbd301a27d02e9caa41b09060200160405180910390a1815160209283012081519183019190912060c082815260e08290524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81890181905281830197909752606081019590955260808086019390935230858301528051808603909201825293909201909252805190840120905261010052600580546001600160a01b0319166001600160a01b03851617905581516200021f916006919084019062000240565b5050620d2f00600755506008805460ff1916600117905562000432565b3390565b8280546200024e90620003df565b90600052602060002090601f016020900481019282620002725760008555620002bd565b82601f106200028d57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bd578251825591602001919060010190620002a0565b50620002cb929150620002cf565b5090565b5b80821115620002cb5760008155600101620002d0565b60008060408385031215620002f9578182fd5b82516001600160a01b038116811462000310578283fd5b602084810151919350906001600160401b03808211156200032f578384fd5b818601915086601f83011262000343578384fd5b8151818111156200035857620003586200041c565b604051601f8201601f19908116603f011681019083821181831017156200038357620003836200041c565b8160405282815289868487010111156200039b578687fd5b8693505b82841015620003be57848401860151818501870152928501926200039f565b82841115620003cf57868684830101525b8096505050505050509250929050565b600281046001821680620003f457607f821691505b602082108114156200041657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160a05160c05160e05161010051612b0262000477600039600061235b015260006123aa0152600061238501526000612307015260006123300152612b026000f3fe608060405234801561001057600080fd5b506004361061023c5760003560e01c8063715018a61161013b5780639cfd495c116100b8578063dca721001161007c578063dca7210014610519578063dd115ab21461052c578063f2cc55ee1461054c578063f2fde38b1461055d578063fd577343146105705761023c565b80639cfd495c146104c5578063b2685a3e146104d8578063b3080298146104eb578063c67eb9e5146104fe578063cab55d56146105115761023c565b80637b018ab9116100ff5780637b018ab91461046a57806380ca11fc1461047d57806385a2910d1461048e5780638da5cb5b146104a1578063982ed326146104b25761023c565b8063715018a6146103eb5780637249fbb6146103f3578063785e9e861461040657806378e96fb51461042b5780637ac83f9b146104575761023c565b80632593308b116101c9578063317cb0181161018d578063317cb0181461035f57806334b778ed146103875780633ccfd60b146103a75780633e5beab9146103af57806370a08231146103c25761023c565b80632593308b146103005780632ab3433c146103135780632af41be4146103265780632ce10fcf1461033957806331784b6d1461034c5761023c565b8063128b853211610210578063128b8532146102a257806314e50a0b146102aa5780631a29b6ab146102cd5780631c6d7675146102e0578063221a832e146102f55761023c565b8062f3b6e81461024157806302519da31461025657806306968bd91461027c57806306a212ae1461028f575b600080fd5b61025461024f3660046126a2565b610583565b005b61026961026436600461260f565b6107cf565b6040519081526020015b60405180910390f35b61025461028a36600461268a565b610856565b61025461029d3660046126bd565b6108e9565b610254610d62565b6102bd6102b8366004612710565b610da4565b6040519015158152602001610273565b6102546102db366004612652565b610ed1565b6102e8610f0e565b604051610273919061282c565b60085460ff166102bd565b61025461030e36600461268a565b610fa1565b6102546103213660046126bd565b610ff9565b6102696103343660046127db565b611487565b61025461034736600461268a565b6114bd565b61025461035a36600461268a565b611546565b61037261036d366004612629565b6115d2565b60408051928352602083019190915201610273565b61039a61039536600461268a565b611620565b604051610273919061281e565b610254611680565b6102696103bd36600461260f565b61168a565b6102696103d036600461260f565b6001600160a01b03166000908152600b602052604090205490565b6102546116c3565b61025461040136600461268a565b611737565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610273565b6102bd61043936600461260f565b6001600160a01b031660009081526009602052604090205460ff1690565b6102546104653660046127b0565b61177e565b61041361047836600461268a565b61180f565b6001546001600160a01b0316610413565b61025461049c3660046127b0565b611847565b6000546001600160a01b0316610413565b6102546104c036600461268a565b6118d0565b6102bd6104d3366004612629565b61192f565b6102546104e636600461260f565b611944565b6102546104f936600461268a565b6119bc565b61026961050c36600461260f565b611bcc565b600754610269565b61041361052736600461268a565b611c9e565b61053f61053a36600461268a565b611cd5565b604051610273919061298f565b6003546001600160a01b0316610413565b61025461056b36600461260f565b611ddb565b61025461057e36600461260f565b611ec5565b6127106105966060830160408401612776565b61ffff1611156105fb5760405162461bcd60e51b815260206004820152602560248201527f6665652063616e6e6f74206265206c6172676572207468616e203130302070656044820152641c98d95b9d60da1b60648201526084015b60405180910390fd5b60006106078235611620565b600381111561062657634e487b7160e01b600052602160045260246000fd5b1461067d5760405162461bcd60e51b815260206004820152602160248201527f7061796d656e7420696e20696e636f727265637420637572656e7420737461746044820152606560f81b60648201526084016105f2565b80608001354211156106d15760405162461bcd60e51b815260206004820152601860248201527f7061796d656e7420646561646c696e652065787069726564000000000000000060448201526064016105f2565b60085460ff161561075157600960006106f060e0840160c0850161260f565b6001600160a01b0316815260208101919091526040016000205460ff166107515760405162461bcd60e51b81526020600482015260156024820152741cd95b1b195c881b9bdd081c9959da5cdd195c9959605a1b60448201526064016105f2565b61076e61076460c0830160a0840161260f565b826020013561192f565b6107cc5760405162461bcd60e51b815260206004820152602960248201527f6e6f7420656e6f7567682066756e647320617661696c61626c6520666f7220746044820152683434b990313abcb2b960b91b60648201526084016105f2565b50565b6005546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a08231906024015b60206040518083038186803b15801561081657600080fd5b505afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190612798565b90505b919050565b6000546001600160a01b031633146108805760405162461bcd60e51b81526004016105f2906128c2565b60008181526002602090815260409182902080546001600160a01b031916905560015482518481526001600160a01b03909116918101919091527f01ab5ff875fd8edb498772244b76ffd53ac3b59cb6397e3c6654194e411ede6b91015b60405180910390a150565b336108f7606085013561180f565b6001600160a01b0316146109615760405162461bcd60e51b815260206004820152602b60248201527f6f70657261746f72206e6f7420617574686f72697a656420666f72207468697360448201526a081d5b9a5d995c9cd9525960aa1b60648201526084016105f2565b600261096d8435611620565b600381111561098c57634e487b7160e01b600052602160045260246000fd5b141561099c5761099c8335611f3d565b6109a583610583565b6109bb8383836102b860c0840160a0850161260f565b610a075760405162461bcd60e51b815260206004820152601960248201527f696e636f7272656374206275796572207369676e61747572650000000000000060448201526064016105f2565b6040805161010081019091528060018152602001610a2b60c0860160a0870161260f565b6001600160a01b03168152602001610a4960e0860160c0870161260f565b6001600160a01b03168152336020820152604001610a6a6060860135611c9e565b6001600160a01b0316815260200160075442610a869190612a05565b8152602001610a9b6060860160408701612776565b61ffff1681526020858101359181019190915284356000908152600a9091526040902081518154829060ff19166001836003811115610aea57634e487b7160e01b600052602160045260246000fd5b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b03199283161790556060840151600284018054918416918316919091179055608084015160038401805491909316911617905560a080830151600483015560c08084015160058401805461ffff90921661ffff1990921691909117905560e0909301516006909201919091556000918291610bb891610bae9190880190880161260f565b86602001356115d2565b90925090508115610cae576005546001600160a01b03166323b872dd610be460c0880160a0890161260f565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b158015610c3257600080fd5b505af1158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a919061266e565b610cae5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105f2565b80600b6000610cc360c0890160a08a0161260f565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610cf29190612a5c565b90915550610d08905060e0860160c0870161260f565b6001600160a01b0316610d2160c0870160a0880161260f565b6001600160a01b031686600001357fe4a9c328b82280a42bddcf2971ded52a971269f3fa155694eec8e4c27f95e21860405160405180910390a45050505050565b33600081815260096020526040808220805460ff19166001179055517f258a7a0df6106f41c2e99c09f1b64931f5f284242bbc50272d5a752ac2f30dde9190a2565b600080610eb885858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610eb292507f842d0bb1548581afe96170983041b67db4fde58372c89ca13c8b104222d6cc46915050893560208b0135610e1d60608d0160408e01612776565b8c606001358d608001358e60a0016020810190610e3a919061260f565b8f60c0016020810190610e4d919061260f565b604080516020810199909952880196909652606087019490945261ffff909216608086015260a085015260c08401526001600160a01b0390811660e08401521661010082015261012001604051602081830303815290604052805190602001206120d2565b90612120565b6001600160a01b03848116911614915050949350505050565b6000546001600160a01b03163314610efb5760405162461bcd60e51b81526004016105f2906128c2565b6008805460ff1916911515919091179055565b606060068054610f1d90612a73565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4990612a73565b8015610f965780601f10610f6b57610100808354040283529160200191610f96565b820191906000526020600020905b815481529060010190602001808311610f7957829003601f168201915b505050505090505b90565b6002610fac82611620565b6003811115610fcb57634e487b7160e01b600052602160045260246000fd5b14610fe85760405162461bcd60e51b81526004016105f290612948565b610ff181611f3d565b6107cc6121d6565b61100960c0840160a0850161260f565b6001600160a01b0316336001600160a01b0316146110755760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792062757965722063616e206578656375746520746869732066756e636044820152633a34b7b760e11b60648201526084016105f2565b60026110818435611620565b60038111156110a057634e487b7160e01b600052602160045260246000fd5b14156110b0576110b08335611f3d565b6110b983610583565b60006110c8846060013561180f565b90506110d684848484610da4565b6111225760405162461bcd60e51b815260206004820152601c60248201527f696e636f7272656374206f70657261746f72207369676e61747572650000000060448201526064016105f2565b604080516101008101909152806001815260200161114660c0870160a0880161260f565b6001600160a01b0316815260200161116460e0870160c0880161260f565b6001600160a01b03168152602001826001600160a01b0316815260200161118e8660600135611c9e565b6001600160a01b03168152602001600754426111aa9190612a05565b81526020016111bf6060870160408801612776565b61ffff1681526020868101359181019190915285356000908152600a9091526040902081518154829060ff1916600183600381111561120e57634e487b7160e01b600052602160045260246000fd5b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b03199283161790556060840151600284018054918416918316919091179055608084015160038401805491909316911617905560a080830151600483015560c08084015160058401805461ffff90921661ffff1990921691909117905560e09093015160069092019190915560009182916112dc916112d29190890190890161260f565b87602001356115d2565b909250905081156113d2576005546001600160a01b03166323b872dd61130860c0890160a08a0161260f565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b15801561135657600080fd5b505af115801561136a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138e919061266e565b6113d25760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105f2565b80600b60006113e760c08a0160a08b0161260f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114169190612a5c565b9091555061142c905060e0870160c0880161260f565b6001600160a01b031661144560c0880160a0890161260f565b6001600160a01b031687600001357fe4a9c328b82280a42bddcf2971ded52a971269f3fa155694eec8e4c27f95e21860405160405180910390a4505050505050565b6000806127106114978486612a3d565b6114a19190612a1d565b9050838111156114b157836114b3565b805b9150505b92915050565b6000818152600a60205260409020600201546001600160a01b031633146114f65760405162461bcd60e51b81526004016105f29061287f565b6114ff81611620565b600381111561151e57634e487b7160e01b600052602160045260246000fd5b60011461153d5760405162461bcd60e51b81526004016105f2906128f7565b6107cc81611f3d565b6000546001600160a01b031633146115705760405162461bcd60e51b81526004016105f2906128c2565b60008181526004602090815260409182902080546001600160a01b031916905560035482518481526001600160a01b03909116918101919091527f34bf92bbf741b75e3289761f6b95459b088de5b3282274572caf118e9c2617dc91016108de565b6001600160a01b0382166000908152600b602052604081205481908084116115fa57836115fc565b805b915080841161160c576000611616565b6116168185612a5c565b9250509250929050565b6000818152600a602052604081205460ff16600181600381111561165457634e487b7160e01b600052602160045260246000fd5b14801561167157506000838152600a602052604090206004015442115b1561084e576002915050610851565b6116886121d6565b565b600554604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e906044016107fe565b6000546001600160a01b031633146116ed5760405162461bcd60e51b81526004016105f2906128c2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600261174282611620565b600381111561176157634e487b7160e01b600052602160045260246000fd5b1461153d5760405162461bcd60e51b81526004016105f290612948565b6000546001600160a01b031633146117a85760405162461bcd60e51b81526004016105f2906128c2565b60008281526002602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f01ab5ff875fd8edb498772244b76ffd53ac3b59cb6397e3c6654194e411ede6b91015b60405180910390a15050565b6000818152600260205260408120546001600160a01b031680156118335780611840565b6001546001600160a01b03165b9392505050565b6000546001600160a01b031633146118715760405162461bcd60e51b81526004016105f2906128c2565b60008281526004602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f34bf92bbf741b75e3289761f6b95459b088de5b3282274572caf118e9c2617dc9101611803565b6000546001600160a01b031633146118fa5760405162461bcd60e51b81526004016105f2906128c2565b60078190556040518181527fb8931bd4946b9278bba3ac02a56a37159384a2a02d4c3416706f635b853d44f4906020016108de565b60008161193b84611bcc565b10159392505050565b6000546001600160a01b0316331461196e5760405162461bcd60e51b81526004016105f2906128c2565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527fa60019696f11f9aa952db763c0de585f819d10fcafcfbd301a27d02e9caa41b0906020016108de565b6000818152600a6020526040808220815161010081019092528054829060ff1660038111156119fb57634e487b7160e01b600052602160045260246000fd5b6003811115611a1a57634e487b7160e01b600052602160045260246000fd5b8152815461010090046001600160a01b03908116602083015260018301548116604083015260028301548116606080840191909152600384015482166080840152600484015460a0840152600584015461ffff1660c084015260069093015460e09092019190915290820151919250163314611aa85760405162461bcd60e51b81526004016105f29061287f565b611ab182611620565b6003811115611ad057634e487b7160e01b600052602160045260246000fd5b600114611aef5760405162461bcd60e51b81526004016105f2906128f7565b6000828152600a60205260408120805460ff1916600317905560e082015160c0830151611b20919061ffff16611487565b9050808260e00151611b329190612a5c565b6040808401516001600160a01b03166000908152600b6020529081208054909190611b5e908490612a05565b909155505060808201516001600160a01b03166000908152600b602052604081208054839290611b8f908490612a05565b90915550506040518381527fe72fd4f49ae148a0d79f0e71ec9cae30076dbfde7b66f70cafd11416eae8dc629060200160405180910390a1505050565b600080611bd88361168a565b6005546040516370a0823160e01b81526001600160a01b038681166004830152929350600092909116906370a082319060240160206040518083038186803b158015611c2357600080fd5b505afa158015611c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5b9190612798565b90506000818310611c6c5781611c6e565b825b6001600160a01b0386166000908152600b6020526040902054909150611c95908290612a05565b95945050505050565b6000818152600460205260408120546001600160a01b03168015611cc25780611840565b50506003546001600160a01b0316919050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000828152600a602052604090819020815161010081019092528054829060ff166003811115611d5657634e487b7160e01b600052602160045260246000fd5b6003811115611d7557634e487b7160e01b600052602160045260246000fd5b8152815461010090046001600160a01b0390811660208301526001830154811660408301526002830154811660608301526003830154166080820152600482015460a0820152600582015461ffff1660c082015260069091015460e09091015292915050565b6000546001600160a01b03163314611e055760405162461bcd60e51b81526004016105f2906128c2565b6001600160a01b038116611e6a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611eef5760405162461bcd60e51b81526004016105f2906128c2565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fec71ba738f211337eaf29e2d87bdb1b0928316c20db0a3a1108aa43321583b50906020016108de565b6000818152600a6020526040808220815161010081019092528054829060ff166003811115611f7c57634e487b7160e01b600052602160045260246000fd5b6003811115611f9b57634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b03610100909104811660208084019190915260018401548216604080850191909152600285015483166060850152600385015483166080850152600485015460a0850152600585015461ffff1660c085015260069094015460e09384015291840151848301519091166000908152600b9092529181208054939450919261202e908490612a05565b90915550506000828152600a6020908152604080832080546001600160a81b03191681556001810180546001600160a01b03199081169091556002820180548216905560038201805490911690556004810184905560058101805461ffff191690556006018390559083015190516001600160a01b039091169184917f5ff61db57638246b4e385e22ef7613d9bb0c21cc207e863676e3c7a49e39a17f9190a35050565b600061084e6120df612303565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060008084516041141561214a5750505060208201516040830151606084015160001a6121c0565b8451604014156121785750505060408201516020830151906001600160ff1b0381169060ff1c601b016121c0565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f2565b6121cc868285856123fa565b9695505050505050565b336000908152600b6020526040902054806122335760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f60448201526064016105f2565b336000818152600b602052604080822091909155600554905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561229257600080fd5b505af11580156122a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ca919061266e565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250565b60007f000000000000000000000000000000000000000000000000000000000000000046141561235457507f0000000000000000000000000000000000000000000000000000000000000000610f9e565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c09092019092528051910120610f9e565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156124775760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f2565b8360ff16601b148061248c57508360ff16601c145b6124e35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105f2565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015612537573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611c955760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f2565b80356001600160a01b038116811461085157600080fd5b60008083601f8401126125c2578182fd5b50813567ffffffffffffffff8111156125d9578182fd5b6020830191508360208285010111156125f157600080fd5b9250929050565b600060e08284031215612609578081fd5b50919050565b600060208284031215612620578081fd5b6118408261259a565b6000806040838503121561263b578081fd5b6126448361259a565b946020939093013593505050565b600060208284031215612663578081fd5b81356114b181612abe565b60006020828403121561267f578081fd5b81516114b181612abe565b60006020828403121561269b578081fd5b5035919050565b600060e082840312156126b3578081fd5b61184083836125f8565b600080600061010084860312156126d2578081fd5b6126dc85856125f8565b925060e084013567ffffffffffffffff8111156126f7578182fd5b612703868287016125b1565b9497909650939450505050565b6000806000806101208587031215612726578081fd5b61273086866125f8565b935060e085013567ffffffffffffffff81111561274b578182fd5b612757878288016125b1565b909450925061276b9050610100860161259a565b905092959194509250565b600060208284031215612787578081fd5b813561ffff811681146114b1578182fd5b6000602082840312156127a9578081fd5b5051919050565b600080604083850312156127c2578182fd5b823591506127d26020840161259a565b90509250929050565b600080604083850312156127ed578182fd5b50508035926020909101359150565b6004811061281a57634e487b7160e01b600052602160045260246000fd5b9052565b602081016114b782846127fc565b6000602080835283518082850152825b818110156128585785810183015185820160400152820161283c565b818111156128695783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72696040820152621e995960ea1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207460408201527072616e7366657272696e6720737461746560781b606082015260800190565b60208082526027908201527f726566756e64207265717569726573207061796d656e7420696e206661696c656040820152666420737461746560c81b606082015260800190565b6000610100820190506129a38284516127fc565b602083015160018060a01b038082166020850152806040860151166040850152806060860151166060850152806080860151166080850152505060a083015160a083015261ffff60c08401511660c083015260e083015160e083015292915050565b60008219821115612a1857612a18612aa8565b500190565b600082612a3857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612a5757612a57612aa8565b500290565b600082821015612a6e57612a6e612aa8565b500390565b600281046001821680612a8757607f821691505b6020821081141561260957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80151581146107cc57600080fdfea2646970667358221220c8a849037430fff8647a81b31a845aaa2353c2fb8046b7fb7b70f6718825067164736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061023c5760003560e01c8063715018a61161013b5780639cfd495c116100b8578063dca721001161007c578063dca7210014610519578063dd115ab21461052c578063f2cc55ee1461054c578063f2fde38b1461055d578063fd577343146105705761023c565b80639cfd495c146104c5578063b2685a3e146104d8578063b3080298146104eb578063c67eb9e5146104fe578063cab55d56146105115761023c565b80637b018ab9116100ff5780637b018ab91461046a57806380ca11fc1461047d57806385a2910d1461048e5780638da5cb5b146104a1578063982ed326146104b25761023c565b8063715018a6146103eb5780637249fbb6146103f3578063785e9e861461040657806378e96fb51461042b5780637ac83f9b146104575761023c565b80632593308b116101c9578063317cb0181161018d578063317cb0181461035f57806334b778ed146103875780633ccfd60b146103a75780633e5beab9146103af57806370a08231146103c25761023c565b80632593308b146103005780632ab3433c146103135780632af41be4146103265780632ce10fcf1461033957806331784b6d1461034c5761023c565b8063128b853211610210578063128b8532146102a257806314e50a0b146102aa5780631a29b6ab146102cd5780631c6d7675146102e0578063221a832e146102f55761023c565b8062f3b6e81461024157806302519da31461025657806306968bd91461027c57806306a212ae1461028f575b600080fd5b61025461024f3660046126a2565b610583565b005b61026961026436600461260f565b6107cf565b6040519081526020015b60405180910390f35b61025461028a36600461268a565b610856565b61025461029d3660046126bd565b6108e9565b610254610d62565b6102bd6102b8366004612710565b610da4565b6040519015158152602001610273565b6102546102db366004612652565b610ed1565b6102e8610f0e565b604051610273919061282c565b60085460ff166102bd565b61025461030e36600461268a565b610fa1565b6102546103213660046126bd565b610ff9565b6102696103343660046127db565b611487565b61025461034736600461268a565b6114bd565b61025461035a36600461268a565b611546565b61037261036d366004612629565b6115d2565b60408051928352602083019190915201610273565b61039a61039536600461268a565b611620565b604051610273919061281e565b610254611680565b6102696103bd36600461260f565b61168a565b6102696103d036600461260f565b6001600160a01b03166000908152600b602052604090205490565b6102546116c3565b61025461040136600461268a565b611737565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610273565b6102bd61043936600461260f565b6001600160a01b031660009081526009602052604090205460ff1690565b6102546104653660046127b0565b61177e565b61041361047836600461268a565b61180f565b6001546001600160a01b0316610413565b61025461049c3660046127b0565b611847565b6000546001600160a01b0316610413565b6102546104c036600461268a565b6118d0565b6102bd6104d3366004612629565b61192f565b6102546104e636600461260f565b611944565b6102546104f936600461268a565b6119bc565b61026961050c36600461260f565b611bcc565b600754610269565b61041361052736600461268a565b611c9e565b61053f61053a36600461268a565b611cd5565b604051610273919061298f565b6003546001600160a01b0316610413565b61025461056b36600461260f565b611ddb565b61025461057e36600461260f565b611ec5565b6127106105966060830160408401612776565b61ffff1611156105fb5760405162461bcd60e51b815260206004820152602560248201527f6665652063616e6e6f74206265206c6172676572207468616e203130302070656044820152641c98d95b9d60da1b60648201526084015b60405180910390fd5b60006106078235611620565b600381111561062657634e487b7160e01b600052602160045260246000fd5b1461067d5760405162461bcd60e51b815260206004820152602160248201527f7061796d656e7420696e20696e636f727265637420637572656e7420737461746044820152606560f81b60648201526084016105f2565b80608001354211156106d15760405162461bcd60e51b815260206004820152601860248201527f7061796d656e7420646561646c696e652065787069726564000000000000000060448201526064016105f2565b60085460ff161561075157600960006106f060e0840160c0850161260f565b6001600160a01b0316815260208101919091526040016000205460ff166107515760405162461bcd60e51b81526020600482015260156024820152741cd95b1b195c881b9bdd081c9959da5cdd195c9959605a1b60448201526064016105f2565b61076e61076460c0830160a0840161260f565b826020013561192f565b6107cc5760405162461bcd60e51b815260206004820152602960248201527f6e6f7420656e6f7567682066756e647320617661696c61626c6520666f7220746044820152683434b990313abcb2b960b91b60648201526084016105f2565b50565b6005546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a08231906024015b60206040518083038186803b15801561081657600080fd5b505afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190612798565b90505b919050565b6000546001600160a01b031633146108805760405162461bcd60e51b81526004016105f2906128c2565b60008181526002602090815260409182902080546001600160a01b031916905560015482518481526001600160a01b03909116918101919091527f01ab5ff875fd8edb498772244b76ffd53ac3b59cb6397e3c6654194e411ede6b91015b60405180910390a150565b336108f7606085013561180f565b6001600160a01b0316146109615760405162461bcd60e51b815260206004820152602b60248201527f6f70657261746f72206e6f7420617574686f72697a656420666f72207468697360448201526a081d5b9a5d995c9cd9525960aa1b60648201526084016105f2565b600261096d8435611620565b600381111561098c57634e487b7160e01b600052602160045260246000fd5b141561099c5761099c8335611f3d565b6109a583610583565b6109bb8383836102b860c0840160a0850161260f565b610a075760405162461bcd60e51b815260206004820152601960248201527f696e636f7272656374206275796572207369676e61747572650000000000000060448201526064016105f2565b6040805161010081019091528060018152602001610a2b60c0860160a0870161260f565b6001600160a01b03168152602001610a4960e0860160c0870161260f565b6001600160a01b03168152336020820152604001610a6a6060860135611c9e565b6001600160a01b0316815260200160075442610a869190612a05565b8152602001610a9b6060860160408701612776565b61ffff1681526020858101359181019190915284356000908152600a9091526040902081518154829060ff19166001836003811115610aea57634e487b7160e01b600052602160045260246000fd5b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b03199283161790556060840151600284018054918416918316919091179055608084015160038401805491909316911617905560a080830151600483015560c08084015160058401805461ffff90921661ffff1990921691909117905560e0909301516006909201919091556000918291610bb891610bae9190880190880161260f565b86602001356115d2565b90925090508115610cae576005546001600160a01b03166323b872dd610be460c0880160a0890161260f565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b158015610c3257600080fd5b505af1158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a919061266e565b610cae5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105f2565b80600b6000610cc360c0890160a08a0161260f565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610cf29190612a5c565b90915550610d08905060e0860160c0870161260f565b6001600160a01b0316610d2160c0870160a0880161260f565b6001600160a01b031686600001357fe4a9c328b82280a42bddcf2971ded52a971269f3fa155694eec8e4c27f95e21860405160405180910390a45050505050565b33600081815260096020526040808220805460ff19166001179055517f258a7a0df6106f41c2e99c09f1b64931f5f284242bbc50272d5a752ac2f30dde9190a2565b600080610eb885858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610eb292507f842d0bb1548581afe96170983041b67db4fde58372c89ca13c8b104222d6cc46915050893560208b0135610e1d60608d0160408e01612776565b8c606001358d608001358e60a0016020810190610e3a919061260f565b8f60c0016020810190610e4d919061260f565b604080516020810199909952880196909652606087019490945261ffff909216608086015260a085015260c08401526001600160a01b0390811660e08401521661010082015261012001604051602081830303815290604052805190602001206120d2565b90612120565b6001600160a01b03848116911614915050949350505050565b6000546001600160a01b03163314610efb5760405162461bcd60e51b81526004016105f2906128c2565b6008805460ff1916911515919091179055565b606060068054610f1d90612a73565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4990612a73565b8015610f965780601f10610f6b57610100808354040283529160200191610f96565b820191906000526020600020905b815481529060010190602001808311610f7957829003601f168201915b505050505090505b90565b6002610fac82611620565b6003811115610fcb57634e487b7160e01b600052602160045260246000fd5b14610fe85760405162461bcd60e51b81526004016105f290612948565b610ff181611f3d565b6107cc6121d6565b61100960c0840160a0850161260f565b6001600160a01b0316336001600160a01b0316146110755760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792062757965722063616e206578656375746520746869732066756e636044820152633a34b7b760e11b60648201526084016105f2565b60026110818435611620565b60038111156110a057634e487b7160e01b600052602160045260246000fd5b14156110b0576110b08335611f3d565b6110b983610583565b60006110c8846060013561180f565b90506110d684848484610da4565b6111225760405162461bcd60e51b815260206004820152601c60248201527f696e636f7272656374206f70657261746f72207369676e61747572650000000060448201526064016105f2565b604080516101008101909152806001815260200161114660c0870160a0880161260f565b6001600160a01b0316815260200161116460e0870160c0880161260f565b6001600160a01b03168152602001826001600160a01b0316815260200161118e8660600135611c9e565b6001600160a01b03168152602001600754426111aa9190612a05565b81526020016111bf6060870160408801612776565b61ffff1681526020868101359181019190915285356000908152600a9091526040902081518154829060ff1916600183600381111561120e57634e487b7160e01b600052602160045260246000fd5b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b03199283161790556060840151600284018054918416918316919091179055608084015160038401805491909316911617905560a080830151600483015560c08084015160058401805461ffff90921661ffff1990921691909117905560e09093015160069092019190915560009182916112dc916112d29190890190890161260f565b87602001356115d2565b909250905081156113d2576005546001600160a01b03166323b872dd61130860c0890160a08a0161260f565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b15801561135657600080fd5b505af115801561136a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138e919061266e565b6113d25760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105f2565b80600b60006113e760c08a0160a08b0161260f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546114169190612a5c565b9091555061142c905060e0870160c0880161260f565b6001600160a01b031661144560c0880160a0890161260f565b6001600160a01b031687600001357fe4a9c328b82280a42bddcf2971ded52a971269f3fa155694eec8e4c27f95e21860405160405180910390a4505050505050565b6000806127106114978486612a3d565b6114a19190612a1d565b9050838111156114b157836114b3565b805b9150505b92915050565b6000818152600a60205260409020600201546001600160a01b031633146114f65760405162461bcd60e51b81526004016105f29061287f565b6114ff81611620565b600381111561151e57634e487b7160e01b600052602160045260246000fd5b60011461153d5760405162461bcd60e51b81526004016105f2906128f7565b6107cc81611f3d565b6000546001600160a01b031633146115705760405162461bcd60e51b81526004016105f2906128c2565b60008181526004602090815260409182902080546001600160a01b031916905560035482518481526001600160a01b03909116918101919091527f34bf92bbf741b75e3289761f6b95459b088de5b3282274572caf118e9c2617dc91016108de565b6001600160a01b0382166000908152600b602052604081205481908084116115fa57836115fc565b805b915080841161160c576000611616565b6116168185612a5c565b9250509250929050565b6000818152600a602052604081205460ff16600181600381111561165457634e487b7160e01b600052602160045260246000fd5b14801561167157506000838152600a602052604090206004015442115b1561084e576002915050610851565b6116886121d6565b565b600554604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e906044016107fe565b6000546001600160a01b031633146116ed5760405162461bcd60e51b81526004016105f2906128c2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600261174282611620565b600381111561176157634e487b7160e01b600052602160045260246000fd5b1461153d5760405162461bcd60e51b81526004016105f290612948565b6000546001600160a01b031633146117a85760405162461bcd60e51b81526004016105f2906128c2565b60008281526002602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f01ab5ff875fd8edb498772244b76ffd53ac3b59cb6397e3c6654194e411ede6b91015b60405180910390a15050565b6000818152600260205260408120546001600160a01b031680156118335780611840565b6001546001600160a01b03165b9392505050565b6000546001600160a01b031633146118715760405162461bcd60e51b81526004016105f2906128c2565b60008281526004602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f34bf92bbf741b75e3289761f6b95459b088de5b3282274572caf118e9c2617dc9101611803565b6000546001600160a01b031633146118fa5760405162461bcd60e51b81526004016105f2906128c2565b60078190556040518181527fb8931bd4946b9278bba3ac02a56a37159384a2a02d4c3416706f635b853d44f4906020016108de565b60008161193b84611bcc565b10159392505050565b6000546001600160a01b0316331461196e5760405162461bcd60e51b81526004016105f2906128c2565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527fa60019696f11f9aa952db763c0de585f819d10fcafcfbd301a27d02e9caa41b0906020016108de565b6000818152600a6020526040808220815161010081019092528054829060ff1660038111156119fb57634e487b7160e01b600052602160045260246000fd5b6003811115611a1a57634e487b7160e01b600052602160045260246000fd5b8152815461010090046001600160a01b03908116602083015260018301548116604083015260028301548116606080840191909152600384015482166080840152600484015460a0840152600584015461ffff1660c084015260069093015460e09092019190915290820151919250163314611aa85760405162461bcd60e51b81526004016105f29061287f565b611ab182611620565b6003811115611ad057634e487b7160e01b600052602160045260246000fd5b600114611aef5760405162461bcd60e51b81526004016105f2906128f7565b6000828152600a60205260408120805460ff1916600317905560e082015160c0830151611b20919061ffff16611487565b9050808260e00151611b329190612a5c565b6040808401516001600160a01b03166000908152600b6020529081208054909190611b5e908490612a05565b909155505060808201516001600160a01b03166000908152600b602052604081208054839290611b8f908490612a05565b90915550506040518381527fe72fd4f49ae148a0d79f0e71ec9cae30076dbfde7b66f70cafd11416eae8dc629060200160405180910390a1505050565b600080611bd88361168a565b6005546040516370a0823160e01b81526001600160a01b038681166004830152929350600092909116906370a082319060240160206040518083038186803b158015611c2357600080fd5b505afa158015611c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5b9190612798565b90506000818310611c6c5781611c6e565b825b6001600160a01b0386166000908152600b6020526040902054909150611c95908290612a05565b95945050505050565b6000818152600460205260408120546001600160a01b03168015611cc25780611840565b50506003546001600160a01b0316919050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000828152600a602052604090819020815161010081019092528054829060ff166003811115611d5657634e487b7160e01b600052602160045260246000fd5b6003811115611d7557634e487b7160e01b600052602160045260246000fd5b8152815461010090046001600160a01b0390811660208301526001830154811660408301526002830154811660608301526003830154166080820152600482015460a0820152600582015461ffff1660c082015260069091015460e09091015292915050565b6000546001600160a01b03163314611e055760405162461bcd60e51b81526004016105f2906128c2565b6001600160a01b038116611e6a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611eef5760405162461bcd60e51b81526004016105f2906128c2565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fec71ba738f211337eaf29e2d87bdb1b0928316c20db0a3a1108aa43321583b50906020016108de565b6000818152600a6020526040808220815161010081019092528054829060ff166003811115611f7c57634e487b7160e01b600052602160045260246000fd5b6003811115611f9b57634e487b7160e01b600052602160045260246000fd5b815281546001600160a01b03610100909104811660208084019190915260018401548216604080850191909152600285015483166060850152600385015483166080850152600485015460a0850152600585015461ffff1660c085015260069094015460e09384015291840151848301519091166000908152600b9092529181208054939450919261202e908490612a05565b90915550506000828152600a6020908152604080832080546001600160a81b03191681556001810180546001600160a01b03199081169091556002820180548216905560038201805490911690556004810184905560058101805461ffff191690556006018390559083015190516001600160a01b039091169184917f5ff61db57638246b4e385e22ef7613d9bb0c21cc207e863676e3c7a49e39a17f9190a35050565b600061084e6120df612303565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060008084516041141561214a5750505060208201516040830151606084015160001a6121c0565b8451604014156121785750505060408201516020830151906001600160ff1b0381169060ff1c601b016121c0565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f2565b6121cc868285856123fa565b9695505050505050565b336000908152600b6020526040902054806122335760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f60448201526064016105f2565b336000818152600b602052604080822091909155600554905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561229257600080fd5b505af11580156122a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ca919061266e565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250565b60007f000000000000000000000000000000000000000000000000000000000000000046141561235457507f0000000000000000000000000000000000000000000000000000000000000000610f9e565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c09092019092528051910120610f9e565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156124775760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f2565b8360ff16601b148061248c57508360ff16601c145b6124e35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105f2565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015612537573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611c955760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f2565b80356001600160a01b038116811461085157600080fd5b60008083601f8401126125c2578182fd5b50813567ffffffffffffffff8111156125d9578182fd5b6020830191508360208285010111156125f157600080fd5b9250929050565b600060e08284031215612609578081fd5b50919050565b600060208284031215612620578081fd5b6118408261259a565b6000806040838503121561263b578081fd5b6126448361259a565b946020939093013593505050565b600060208284031215612663578081fd5b81356114b181612abe565b60006020828403121561267f578081fd5b81516114b181612abe565b60006020828403121561269b578081fd5b5035919050565b600060e082840312156126b3578081fd5b61184083836125f8565b600080600061010084860312156126d2578081fd5b6126dc85856125f8565b925060e084013567ffffffffffffffff8111156126f7578182fd5b612703868287016125b1565b9497909650939450505050565b6000806000806101208587031215612726578081fd5b61273086866125f8565b935060e085013567ffffffffffffffff81111561274b578182fd5b612757878288016125b1565b909450925061276b9050610100860161259a565b905092959194509250565b600060208284031215612787578081fd5b813561ffff811681146114b1578182fd5b6000602082840312156127a9578081fd5b5051919050565b600080604083850312156127c2578182fd5b823591506127d26020840161259a565b90509250929050565b600080604083850312156127ed578182fd5b50508035926020909101359150565b6004811061281a57634e487b7160e01b600052602160045260246000fd5b9052565b602081016114b782846127fc565b6000602080835283518082850152825b818110156128585785810183015185820160400152820161283c565b818111156128695783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72696040820152621e995960ea1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207460408201527072616e7366657272696e6720737461746560781b606082015260800190565b60208082526027908201527f726566756e64207265717569726573207061796d656e7420696e206661696c656040820152666420737461746560c81b606082015260800190565b6000610100820190506129a38284516127fc565b602083015160018060a01b038082166020850152806040860151166040850152806060860151166060850152806080860151166080850152505060a083015160a083015261ffff60c08401511660c083015260e083015160e083015292915050565b60008219821115612a1857612a18612aa8565b500190565b600082612a3857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612a5757612a57612aa8565b500290565b600082821015612a6e57612a6e612aa8565b500390565b600281046001821680612a8757607f821691505b6020821081141561260957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80151581146107cc57600080fdfea2646970667358221220c8a849037430fff8647a81b31a845aaa2353c2fb8046b7fb7b70f6718825067164736f6c63430008020033",
  "immutableReferences": {
    "360": [
      {
        "length": 32,
        "start": 9008
      }
    ],
    "362": [
      {
        "length": 32,
        "start": 8967
      }
    ],
    "364": [
      {
        "length": 32,
        "start": 9093
      }
    ],
    "366": [
      {
        "length": 32,
        "start": 9130
      }
    ],
    "368": [
      {
        "length": 32,
        "start": 9051
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2549:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "122:1206:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "168:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "177:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "185:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "170:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "170:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "170:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "143:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "152:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "139:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "139:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "164:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "135:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "135:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "132:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "203:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "222:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "216:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "216:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "207:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "295:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "304:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "312:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "297:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "297:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "297:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "254:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "265:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "280:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "285:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "276:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "276:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "289:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "272:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "272:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "261:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "261:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "251:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "251:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "244:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "244:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "241:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "330:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "340:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "330:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "354:12:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "364:2:9",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "358:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "375:39:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "399:9:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "410:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "395:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "395:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "389:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "389:25:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "379:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "423:28:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "441:2:9",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "445:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "437:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "437:10:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "449:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "433:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "433:18:9"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "427:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "478:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "487:6:9"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "495:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "480:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "480:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "480:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "466:6:9"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "474:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "463:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:14:9"
                  },
                  "nodeType": "YulIf",
                  "src": "460:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "513:32:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "527:9:9"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "538:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "523:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:22:9"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "517:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "593:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "602:6:9"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "610:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "595:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "595:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "595:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "572:2:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "576:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "568:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "568:13:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "583:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "564:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "564:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "557:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "554:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "628:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "644:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "638:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "638:9:9"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "632:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "670:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "672:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "672:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "672:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "662:2:9"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "666:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "659:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "659:10:9"
                  },
                  "nodeType": "YulIf",
                  "src": "656:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "701:17:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "715:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "711:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "711:7:9"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "705:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "727:23:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "741:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "741:9:9"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "731:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "759:71:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "781:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "805:2:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "809:4:9",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "801:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "801:13:9"
                                  },
                                  {
                                    "name": "_5",
                                    "nodeType": "YulIdentifier",
                                    "src": "816:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "797:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "797:22:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "821:2:9",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "793:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "793:31:9"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "826:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:40:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "777:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "777:53:9"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "763:10:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "889:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "891:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "891:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "891:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "848:10:9"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "860:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "845:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "845:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "868:10:9"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "880:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "865:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "865:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "842:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:46:9"
                  },
                  "nodeType": "YulIf",
                  "src": "839:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "927:2:9",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "931:10:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "920:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "920:22:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "958:6:9"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "966:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:18:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "951:18:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1015:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1024:6:9"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1032:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1017:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1017:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1017:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "992:2:9"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "996:2:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "988:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "988:11:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1001:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:20:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1006:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "981:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "981:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "978:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1050:15:9",
                  "value": {
                    "name": "value1",
                    "nodeType": "YulIdentifier",
                    "src": "1059:6:9"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1054:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1120:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1149:6:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1157:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1145:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1145:14:9"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1161:2:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1141:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1141:23:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1180:2:9"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1184:1:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1176:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1176:10:9"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1188:2:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1172:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1172:19:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1166:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1166:26:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1134:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1134:59:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1134:59:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1085:1:9"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1088:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1082:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1082:9:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1092:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1094:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1103:1:9"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1106:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1099:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1099:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1094:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1078:3:9",
                    "statements": []
                  },
                  "src": "1074:129:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1233:64:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1262:6:9"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1270:2:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1258:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1258:15:9"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1275:2:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1254:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1254:24:9"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1280:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1247:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1247:40:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1247:40:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1218:1:9"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1221:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1215:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1215:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1212:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1306:16:9",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1316:6:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1306:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "80:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "91:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "103:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "111:6:9",
                "type": ""
              }
            ],
            "src": "14:1314:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1434:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1444:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1456:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1467:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1452:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1444:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1486:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1501:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1517:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1522:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1513:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1513:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1526:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1509:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1509:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1479:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1479:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1403:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1414:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1425:4:9",
                "type": ""
              }
            ],
            "src": "1333:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1754:276:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1764:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1776:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1787:3:9",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1772:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1764:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1807:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1818:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1800:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1800:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1845:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1856:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1841:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1841:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1861:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1834:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1834:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1834:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1888:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1899:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1884:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1884:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1904:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1877:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1877:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1877:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1931:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1942:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1927:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1927:18:9"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1947:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1920:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1920:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1920:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1974:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1985:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1970:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1970:19:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "1995:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2011:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2016:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2007:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2007:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2020:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2003:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2003:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1991:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1991:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1963:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:61:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1963:61:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1691:9:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1702:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1710:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1718:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1726:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1734:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1745:4:9",
                "type": ""
              }
            ],
            "src": "1541:489:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2090:325:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2100:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2114:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2120:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2110:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2110:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2100:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2131:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2161:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2167:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2157:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2157:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2135:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2208:31:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2210:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2224:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2232:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2220:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2220:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2210:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2188:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2181:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2181:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2178:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2298:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2319:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2326:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2331:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2322:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2322:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2312:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2312:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2312:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2363:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2366:4:9",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2356:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2356:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2356:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2391:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2394:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2384:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2384:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2384:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2254:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2277:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2285:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2274:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2274:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2251:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2251:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2248:2:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2070:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2079:6:9",
                "type": ""
              }
            ],
            "src": "2035:380:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2452:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2469:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2476:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2481:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2472:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2472:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2462:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2462:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2462:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2509:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2512:4:9",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2502:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2502:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2533:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2536:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2526:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2526:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2526:15:9"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2420:127:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value1, value1) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value1)\n        }\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:19787:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:9"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:9",
                "type": ""
              }
            ],
            "src": "14:173:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:303:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "313:30:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "322:8:9"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "332:8:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "315:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "315:26:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "315:26:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "292:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "300:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "288:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "288:17:9"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "307:3:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "284:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "284:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "277:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "352:30:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "375:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "362:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "352:6:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:30:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "434:8:9"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "444:8:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "427:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:26:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:26:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "397:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "394:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "394:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "391:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "464:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "480:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "476:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:17:9"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "464:8:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "545:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "554:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "557:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "547:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "547:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "547:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "516:6:9"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "524:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "512:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "512:19:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "533:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "508:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "508:30:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "540:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "505:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "505:39:9"
                  },
                  "nodeType": "YulIf",
                  "src": "502:2:9"
                }
              ]
            },
            "name": "abi_decode_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "227:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "235:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "243:8:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "253:6:9",
                "type": ""
              }
            ],
            "src": "192:375:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "647:94:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "687:24:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "696:5:9"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "703:5:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "689:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "689:20:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "689:20:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "668:3:9"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "673:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "664:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "664:16:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "682:3:9",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "660:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "657:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "720:15:9",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "729:6:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "720:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_struct_PaymentInput_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "621:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "629:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "637:5:9",
                "type": ""
              }
            ],
            "src": "572:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "816:126:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "862:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "871:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "879:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "864:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "864:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "864:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "837:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "846:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "858:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "829:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "829:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "826:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "897:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "926:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "907:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "897:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "782:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "793:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "805:6:9",
                "type": ""
              }
            ],
            "src": "746:196:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1034:177:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1080:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1089:6:9"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1097:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1082:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1082:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1082:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1055:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1064:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1051:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1051:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1076:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1047:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1047:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1044:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1115:39:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1144:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1125:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:29:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1115:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1163:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1190:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1201:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1186:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1186:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1173:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1163:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "992:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1003:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1015:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1023:6:9",
                "type": ""
              }
            ],
            "src": "947:264:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1283:184:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1329:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1338:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1346:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1331:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1331:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1331:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1304:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1313:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1300:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1300:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1325:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1296:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1296:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1293:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1364:36:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1390:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1377:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1377:23:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1368:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1431:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1409:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1409:28:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1409:28:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1446:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1456:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1446:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1249:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1260:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1272:6:9",
                "type": ""
              }
            ],
            "src": "1216:251:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1550:177:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1596:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1605:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1613:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1598:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1598:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1598:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1571:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1580:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1567:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1567:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1563:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1560:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1631:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1650:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1644:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1635:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1691:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1669:21:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1669:28:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1669:28:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1706:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1716:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1706:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1516:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1527:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1539:6:9",
                "type": ""
              }
            ],
            "src": "1472:255:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1802:120:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1848:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1857:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1865:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1850:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1850:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1850:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1823:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1832:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1819:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1819:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1844:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1815:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1812:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1883:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1906:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1893:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1883:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1768:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1779:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1791:6:9",
                "type": ""
              }
            ],
            "src": "1732:190:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2028:157:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2075:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2084:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2092:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2077:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2077:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2077:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2049:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2058:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2045:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2045:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2070:3:9",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2041:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2041:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2038:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2110:69:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2160:9:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2171:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_PaymentInput_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2120:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2120:59:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2110:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_PaymentInput_$522_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1994:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2005:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2017:6:9",
                "type": ""
              }
            ],
            "src": "1927:258:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2327:429:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2374:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2383:6:9"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2391:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2376:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2376:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2376:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2348:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2357:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2344:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2344:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2369:3:9",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2340:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2337:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2409:69:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2459:9:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2470:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_PaymentInput_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2419:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2419:59:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2409:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2487:47:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2518:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2529:3:9",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2514:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2514:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2501:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2501:33:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2491:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2577:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2586:6:9"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2594:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2579:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2579:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2579:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2549:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2557:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2546:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2543:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2612:84:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2668:9:9"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2679:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2664:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2664:22:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2688:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2638:25:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2638:58:9"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2616:8:9",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "2626:8:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2705:18:9",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2715:8:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2705:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2732:18:9",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2742:8:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2732:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_PaymentInput_$522_calldata_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2277:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2288:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2300:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2308:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2316:6:9",
                "type": ""
              }
            ],
            "src": "2190:566:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2915:487:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2962:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2971:6:9"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "2979:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2964:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2964:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2964:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2936:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2945:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2932:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2932:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2957:3:9",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2928:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2928:33:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2925:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2997:69:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3047:9:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3058:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_PaymentInput_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3007:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3007:59:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2997:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3075:47:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3106:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3117:3:9",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3102:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3102:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3089:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3089:33:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3079:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3165:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "3174:6:9"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "3182:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3167:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3167:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3167:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3137:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3145:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3134:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3134:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3131:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3200:84:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3256:9:9"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3267:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3252:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3252:22:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3276:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3226:25:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3226:58:9"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "3204:8:9",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "3214:8:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3293:18:9",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "3303:8:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3293:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3320:18:9",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "3330:8:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3320:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3347:49:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3380:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3391:3:9",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3376:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3357:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3357:39:9"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3347:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_PaymentInput_$522_calldata_ptrt_bytes_calldata_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2857:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2868:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2880:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2888:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2896:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2904:6:9",
                "type": ""
              }
            ],
            "src": "2761:641:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3476:223:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3522:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3531:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3539:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3524:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3524:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3524:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3497:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3506:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3493:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3493:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3518:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3489:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3489:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3486:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3557:36:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3583:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3570:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:23:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3561:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3643:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3652:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3660:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3645:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3645:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3645:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3615:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3626:5:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3633:6:9",
                                "type": "",
                                "value": "0xffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3622:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3622:18:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3612:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3612:29:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3605:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3605:37:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3602:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3678:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3688:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3678:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3442:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3453:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3465:6:9",
                "type": ""
              }
            ],
            "src": "3407:292:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3774:120:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3820:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3829:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3837:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3822:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3822:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3822:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3795:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3804:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3791:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3791:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3816:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3787:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3787:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3784:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3855:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3878:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3865:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3865:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3855:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3740:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3751:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3763:6:9",
                "type": ""
              }
            ],
            "src": "3704:190:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3980:113:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4026:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4035:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4043:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4028:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4028:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4028:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4001:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4010:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3997:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3997:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4022:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3993:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3993:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3990:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4061:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4077:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4071:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4071:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4061:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3946:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3957:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3969:6:9",
                "type": ""
              }
            ],
            "src": "3899:194:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4185:177:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4231:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4240:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4248:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4233:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4233:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4233:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4206:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4215:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4202:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4202:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4227:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4198:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4198:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4195:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4266:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4289:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4276:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4276:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4266:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4308:48:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4341:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4352:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4337:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4318:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4318:38:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4308:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4143:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4154:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4166:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4174:6:9",
                "type": ""
              }
            ],
            "src": "4098:264:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4454:171:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4500:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4509:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4517:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4502:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4502:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4502:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4475:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4484:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4471:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4471:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4496:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4467:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4467:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4464:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4535:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4558:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4545:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4545:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4535:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4577:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4604:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4615:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4600:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4600:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4587:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4587:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4577:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4412:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4423:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4435:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4443:6:9",
                "type": ""
              }
            ],
            "src": "4367:258:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4678:186:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4720:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4741:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4748:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4753:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4744:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4744:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4734:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4734:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4734:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4785:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4788:4:9",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4778:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4778:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4778:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4813:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4816:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4806:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4806:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4806:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4701:5:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4708:1:9",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4698:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4698:12:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4691:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4691:20:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4688:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4847:3:9"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4852:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4840:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4840:18:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4840:18:9"
                }
              ]
            },
            "name": "abi_encode_enum_States",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4662:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4669:3:9",
                "type": ""
              }
            ],
            "src": "4630:234:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5117:144:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5134:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5143:3:9",
                            "type": "",
                            "value": "240"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5148:4:9",
                            "type": "",
                            "value": "6401"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5139:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5139:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5127:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5127:27:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5127:27:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5174:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5179:1:9",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5170:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5170:11:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5183:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5163:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5163:27:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5163:27:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5210:3:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5215:2:9",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5206:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5206:12:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5220:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5199:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5199:28:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5199:28:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5236:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5247:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5252:2:9",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5243:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5243:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5236:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5085:3:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5090:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5098:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5109:3:9",
                "type": ""
              }
            ],
            "src": "4869:392:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5367:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5377:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5389:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5400:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5385:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5385:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5377:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5419:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5434:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5450:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5455:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5446:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5446:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5459:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5442:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5442:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5430:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5430:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5412:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5412:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5412:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5336:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5347:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5358:4:9",
                "type": ""
              }
            ],
            "src": "5266:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5603:175:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5613:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5625:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5636:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5621:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5621:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5613:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5648:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5666:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5671:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5662:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5662:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5675:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5658:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5658:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5652:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5693:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5708:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5716:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5704:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5704:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5686:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5686:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5686:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5740:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5751:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5736:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5736:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5760:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5768:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5756:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5756:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5729:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5729:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5729:43:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5564:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5575:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5583:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5594:4:9",
                "type": ""
              }
            ],
            "src": "5474:304:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5940:218:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5950:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5962:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5973:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5958:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5958:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5950:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5985:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6003:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6008:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5999:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5999:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6012:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5995:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5995:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5989:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6030:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6045:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6053:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6041:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6041:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6023:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6023:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6023:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6077:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6088:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6073:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6073:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6097:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6105:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6093:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6093:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6066:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6066:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6066:43:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6129:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6140:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6125:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6125:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6145:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6118:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6118:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6118:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5893:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5904:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5912:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5920:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5931:4:9",
                "type": ""
              }
            ],
            "src": "5783:375:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6292:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6302:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6314:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6325:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6310:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6310:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6302:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6344:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6359:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6375:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6380:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6371:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6371:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6384:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6367:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6367:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6355:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6355:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6337:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6337:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6337:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6408:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6419:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6404:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6404:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6424:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6397:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6397:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6397:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6253:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6264:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6272:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6283:4:9",
                "type": ""
              }
            ],
            "src": "6163:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6537:92:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6547:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6559:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6570:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6555:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6555:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6547:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6589:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6614:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6607:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6607:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6600:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6600:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6582:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6582:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6582:41:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6506:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6517:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6528:4:9",
                "type": ""
              }
            ],
            "src": "6442:187:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6735:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6745:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6757:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6768:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6753:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6753:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6745:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6787:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6798:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6780:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6780:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6780:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6704:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6715:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6726:4:9",
                "type": ""
              }
            ],
            "src": "6634:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7029:276:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7039:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7051:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7062:3:9",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7047:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7047:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7039:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7082:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7093:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7075:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7075:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7075:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7120:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7131:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7116:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7116:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7136:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7109:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7109:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7109:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7163:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7174:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7159:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7159:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7179:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7152:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7152:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7152:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7206:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7217:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7202:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7202:18:9"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7222:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7195:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7195:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7195:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7249:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7260:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7245:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7245:19:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "7270:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7286:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7291:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "7282:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7282:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7295:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "7278:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7278:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7266:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7266:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7238:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7238:61:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7238:61:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6966:9:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6977:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6985:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6993:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7001:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7009:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7020:4:9",
                "type": ""
              }
            ],
            "src": "6816:489:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7605:451:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7615:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7627:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7638:3:9",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7623:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7623:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7615:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7658:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7669:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7651:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7651:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7651:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7696:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7707:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7692:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7692:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7712:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7685:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7685:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7685:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7739:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7750:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7735:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7735:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7755:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7728:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7728:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7728:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7782:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7793:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7778:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7778:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7802:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7810:6:9",
                            "type": "",
                            "value": "0xffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7798:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7798:19:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7771:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7771:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7771:47:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7838:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7849:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7834:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7834:19:9"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7855:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7827:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7827:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7827:35:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7882:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7893:3:9",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7878:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7878:19:9"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "7899:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7871:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7871:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7871:35:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7915:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7933:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7938:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7929:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7929:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7942:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7925:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7925:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7919:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7964:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7975:3:9",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7960:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7960:19:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "7985:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7993:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7981:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7981:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7953:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7953:44:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7953:44:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8017:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8028:3:9",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8013:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8013:19:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value7",
                            "nodeType": "YulIdentifier",
                            "src": "8038:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8046:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8034:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8034:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8006:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8006:44:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8006:44:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_uint16_t_uint256_t_uint256_t_address_t_address__to_t_bytes32_t_bytes32_t_uint256_t_uint16_t_uint256_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7518:9:9",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "7529:6:9",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "7537:6:9",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7545:6:9",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7553:6:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7561:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7569:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7577:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7585:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7596:4:9",
                "type": ""
              }
            ],
            "src": "7310:746:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8242:217:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8252:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8264:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8275:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8260:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8260:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8252:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8295:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8306:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8288:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8288:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8288:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8333:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8344:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8329:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8329:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8353:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8361:4:9",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8349:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8349:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8322:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8322:45:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8322:45:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8387:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8398:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8383:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8383:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8403:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8376:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8376:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8376:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8430:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8441:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8426:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8426:18:9"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8446:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8419:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8419:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8419:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8187:9:9",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8198:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8206:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8214:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8222:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8233:4:9",
                "type": ""
              }
            ],
            "src": "8061:398:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8573:92:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8583:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8595:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8606:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8591:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8591:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8583:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8641:6:9"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8649:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_States",
                      "nodeType": "YulIdentifier",
                      "src": "8618:22:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8618:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8618:41:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_States_$892__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8542:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8553:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8564:4:9",
                "type": ""
              }
            ],
            "src": "8464:201:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8791:482:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8801:12:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8811:2:9",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8805:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8829:9:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8840:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8822:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8822:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8822:21:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8852:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8872:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8866:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8866:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8856:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8899:9:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8910:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8895:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8895:18:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8915:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8888:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8888:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8888:34:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8931:13:9",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "8940:4:9"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "8935:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9003:90:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9032:9:9"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9043:1:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9028:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9028:17:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9047:2:9",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9024:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9024:26:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "9066:6:9"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "9074:1:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "9062:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9062:14:9"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "9078:2:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9058:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9058:23:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9052:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9052:30:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9017:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9017:66:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9017:66:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "8964:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8967:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8961:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8961:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8975:19:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8977:15:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "8986:1:9"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "8989:2:9"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8982:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8982:10:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "8977:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8957:3:9",
                    "statements": []
                  },
                  "src": "8953:140:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9127:69:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "9156:9:9"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "9167:6:9"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9152:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9152:22:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9176:2:9",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9148:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9148:31:9"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9181:4:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9141:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9141:45:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9141:45:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9108:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9111:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9105:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9105:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "9102:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9205:62:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9221:9:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9240:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9248:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9236:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9236:15:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9257:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9253:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9253:7:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9232:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9232:29:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9217:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9217:45:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9264:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9213:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9213:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9205:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8760:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8771:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8782:4:9",
                "type": ""
              }
            ],
            "src": "8670:603:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9452:174:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9469:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9480:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9462:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9462:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9462:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9503:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9514:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9499:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9499:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9519:2:9",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9492:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9492:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9492:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9542:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9553:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9538:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9538:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9558:26:9",
                        "type": "",
                        "value": "ECDSA: invalid signature"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9531:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9531:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9531:54:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9594:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9606:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9617:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9602:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9602:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9594:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9429:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9443:4:9",
                "type": ""
              }
            ],
            "src": "9278:348:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9805:174:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9822:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9833:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9815:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9815:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9815:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9856:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9867:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9852:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9852:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9872:2:9",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9845:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9845:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9845:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9895:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9906:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9891:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9891:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9911:26:9",
                        "type": "",
                        "value": "payment deadline expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9884:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9884:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9884:54:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9947:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9959:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9970:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9955:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9955:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9947:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9782:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9796:4:9",
                "type": ""
              }
            ],
            "src": "9631:348:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10158:171:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10175:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10186:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10168:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10168:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10168:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10209:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10220:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10205:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10205:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10225:2:9",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10198:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10198:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10198:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10248:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10259:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10244:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10244:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10264:23:9",
                        "type": "",
                        "value": "ERC20 transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10237:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10237:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10237:51:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10297:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10309:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10320:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10305:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10305:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10297:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10135:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10149:4:9",
                "type": ""
              }
            ],
            "src": "9984:345:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10508:181:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10525:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10536:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10518:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10518:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10518:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10559:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10570:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10555:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10555:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10575:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10548:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10548:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10548:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10598:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10609:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10594:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10594:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10614:33:9",
                        "type": "",
                        "value": "ECDSA: invalid signature length"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10587:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10587:61:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10587:61:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10657:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10669:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10680:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10665:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10665:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10657:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10485:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10499:4:9",
                "type": ""
              }
            ],
            "src": "10334:355:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10868:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10885:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10896:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10878:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10878:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10878:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10919:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10930:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10915:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10915:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10935:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10908:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10908:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10908:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10958:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10969:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10954:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10954:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10974:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10947:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10947:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10947:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11029:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11040:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11025:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11025:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11045:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11018:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11018:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11018:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11063:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11075:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11086:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11071:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11071:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11063:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10845:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10859:4:9",
                "type": ""
              }
            ],
            "src": "10694:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11275:233:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11292:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11303:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11285:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11285:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11285:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11326:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11337:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11322:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11322:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11342:2:9",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11315:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11315:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11315:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11365:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11376:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11361:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11361:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11381:34:9",
                        "type": "",
                        "value": "operator not authorized for this"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11354:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11354:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11354:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11436:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11447:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11432:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11432:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11452:13:9",
                        "type": "",
                        "value": " universeId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11425:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11425:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11425:41:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11475:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11487:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11498:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11483:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11483:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11475:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11252:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11266:4:9",
                "type": ""
              }
            ],
            "src": "11101:407:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11687:225:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11704:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11715:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11697:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11697:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11697:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11738:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11749:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11734:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11734:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11754:2:9",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11727:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11727:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11727:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11777:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11788:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11773:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11773:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11793:34:9",
                        "type": "",
                        "value": "only payment operator is authori"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11766:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11766:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11766:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11848:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11859:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11844:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11844:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11864:5:9",
                        "type": "",
                        "value": "zed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11837:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11837:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11837:33:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11879:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11891:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11902:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11887:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11887:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11879:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11664:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11678:4:9",
                "type": ""
              }
            ],
            "src": "11513:399:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12091:224:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12108:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12119:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12101:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12101:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12101:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12142:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12153:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12138:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12138:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12158:2:9",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12131:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12131:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12131:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12181:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12192:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12177:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12177:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12197:34:9",
                        "type": "",
                        "value": "ECDSA: invalid signature 's' val"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12170:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12170:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12170:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12252:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12263:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12248:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12248:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12268:4:9",
                        "type": "",
                        "value": "ue"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12241:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12241:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12241:32:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12282:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12294:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12305:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12290:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12290:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12282:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12068:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12082:4:9",
                "type": ""
              }
            ],
            "src": "11917:398:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12494:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12511:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12522:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12504:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12504:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12504:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12545:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12556:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12541:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12541:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12561:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12534:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12534:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12534:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12584:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12595:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12580:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12580:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12600:34:9",
                        "type": "",
                        "value": "cannot withdraw: balance is zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12573:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12573:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12573:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12644:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12656:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12667:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12652:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12652:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12644:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12471:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12485:4:9",
                "type": ""
              }
            ],
            "src": "12320:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12855:178:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12872:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12883:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12865:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12865:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12865:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12906:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12917:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12902:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12902:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12922:2:9",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12895:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12895:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12895:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12945:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12956:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12941:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12941:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12961:30:9",
                        "type": "",
                        "value": "incorrect operator signature"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12934:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12934:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12934:58:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13001:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13013:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13024:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13009:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13009:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13001:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12832:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12846:4:9",
                "type": ""
              }
            ],
            "src": "12681:352:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13212:171:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13229:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13240:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13222:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13222:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13222:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13263:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13274:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13259:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13259:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13279:2:9",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13252:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13252:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13252:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13302:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13313:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13298:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13298:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13318:23:9",
                        "type": "",
                        "value": "seller not registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13291:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13291:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13291:51:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13351:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13363:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13374:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13359:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13359:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13351:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13189:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13203:4:9",
                "type": ""
              }
            ],
            "src": "13038:345:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13562:224:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13579:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13590:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13572:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13572:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13572:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13613:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13624:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13609:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13609:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13629:2:9",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13602:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13602:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13602:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13652:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13663:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13648:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13648:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13668:34:9",
                        "type": "",
                        "value": "ECDSA: invalid signature 'v' val"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13641:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13641:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13641:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13723:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13734:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13719:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13719:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13739:4:9",
                        "type": "",
                        "value": "ue"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13712:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13712:32:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13712:32:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13753:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13765:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13776:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13761:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13761:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13753:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13539:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13553:4:9",
                "type": ""
              }
            ],
            "src": "13388:398:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13965:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13982:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13993:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13975:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13975:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13975:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14016:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14027:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14012:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14012:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14032:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14005:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14005:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14005:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14055:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14066:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14051:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14051:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14071:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14044:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14044:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14044:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14115:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14127:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14138:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14123:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14123:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14115:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13942:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13956:4:9",
                "type": ""
              }
            ],
            "src": "13791:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14326:223:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14343:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14354:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14336:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14336:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14336:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14377:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14388:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14373:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14373:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14393:2:9",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14366:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14366:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14366:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14416:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14427:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14412:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14412:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14432:34:9",
                        "type": "",
                        "value": "payment in incorrect curent stat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14405:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14405:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14405:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14487:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14498:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14483:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14483:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14503:3:9",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14476:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14476:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14476:31:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14516:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14528:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14539:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14524:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14524:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14516:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14303:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14317:4:9",
                "type": ""
              }
            ],
            "src": "14152:397:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14728:239:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14745:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14756:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14738:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14738:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14738:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14779:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14790:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14775:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14775:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14795:2:9",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14768:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14768:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14768:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14818:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14829:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14814:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14814:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14834:34:9",
                        "type": "",
                        "value": "payment not initially in asset t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14807:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14807:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14807:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14889:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14900:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14885:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14885:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14905:19:9",
                        "type": "",
                        "value": "ransferring state"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14878:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14878:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14878:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14934:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14946:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14957:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14942:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14942:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14934:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14705:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14719:4:9",
                "type": ""
              }
            ],
            "src": "14554:413:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15146:231:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15163:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15174:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15156:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15156:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15156:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15197:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15208:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15193:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15193:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15213:2:9",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15186:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15186:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15186:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15236:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15247:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15232:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15232:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15252:34:9",
                        "type": "",
                        "value": "not enough funds available for t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15225:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15225:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15225:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15307:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15318:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15303:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15303:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15323:11:9",
                        "type": "",
                        "value": "his buyer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15296:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15296:39:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15296:39:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15344:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15356:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15367:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15352:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15352:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15344:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15123:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15137:4:9",
                "type": ""
              }
            ],
            "src": "14972:405:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15556:175:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15573:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15584:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15566:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15566:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15566:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15607:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15618:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15603:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15603:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15623:2:9",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15596:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15596:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15596:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15646:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15657:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15642:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15642:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15662:27:9",
                        "type": "",
                        "value": "incorrect buyer signature"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15635:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15635:55:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15635:55:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15699:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15711:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15722:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15707:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15707:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15699:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15533:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15547:4:9",
                "type": ""
              }
            ],
            "src": "15382:349:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15910:226:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15927:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15938:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15920:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15920:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15920:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15961:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15972:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15957:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15957:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15977:2:9",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15950:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15950:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15950:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16000:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16011:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15996:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15996:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16016:34:9",
                        "type": "",
                        "value": "only buyer can execute this func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15989:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15989:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15989:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16071:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16082:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16067:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16067:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16087:6:9",
                        "type": "",
                        "value": "tion"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16060:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16060:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16060:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16103:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16115:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16126:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16111:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16111:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16103:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15887:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15901:4:9",
                "type": ""
              }
            ],
            "src": "15736:400:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16315:227:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16332:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16343:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16325:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16325:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16325:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16366:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16377:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16362:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16362:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16382:2:9",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16355:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16355:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16355:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16405:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16416:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16401:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16401:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16421:34:9",
                        "type": "",
                        "value": "fee cannot be larger than 100 pe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16394:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16394:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16394:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16476:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16487:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16472:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16472:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16492:7:9",
                        "type": "",
                        "value": "rcent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16465:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16465:35:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16465:35:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16509:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16521:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16532:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16517:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16517:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16509:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16292:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16306:4:9",
                "type": ""
              }
            ],
            "src": "16141:401:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16721:229:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16738:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16749:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16731:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16731:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16731:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16772:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16783:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16768:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16768:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16788:2:9",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16761:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16761:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16761:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16811:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16822:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16807:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16807:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16827:34:9",
                        "type": "",
                        "value": "refund requires payment in faile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16800:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16800:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16800:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16882:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16893:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16878:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16878:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16898:9:9",
                        "type": "",
                        "value": "d state"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16871:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16871:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16871:37:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16917:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16929:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16940:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16925:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16925:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16917:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16698:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16712:4:9",
                "type": ""
              }
            ],
            "src": "16547:403:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17104:669:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17114:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17126:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17137:3:9",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17122:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17122:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17114:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17179:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "17173:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17173:13:9"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17188:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_States",
                      "nodeType": "YulIdentifier",
                      "src": "17150:22:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17150:48:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17150:48:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17207:44:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17237:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17245:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17233:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17233:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17227:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17227:24:9"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "17211:12:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17260:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17278:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17283:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "17274:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17274:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17287:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17270:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17270:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "17264:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17309:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17320:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17305:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17305:20:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "17331:12:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17345:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17327:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17327:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17298:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17298:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17298:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17369:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17380:4:9",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17365:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17365:20:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17401:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17409:4:9",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17397:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17397:17:9"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "17391:5:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17391:24:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17417:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17387:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17387:33:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17358:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17358:63:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17358:63:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17441:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17452:4:9",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17437:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17437:20:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17473:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17481:4:9",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17469:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17469:17:9"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "17463:5:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17463:24:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17489:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17459:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17459:33:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17430:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17430:63:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17430:63:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17513:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17524:4:9",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17509:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17509:20:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17545:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17553:4:9",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17541:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17541:17:9"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "17535:5:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17535:24:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "17561:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17531:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17531:33:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17502:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17502:63:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17502:63:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17585:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17596:4:9",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17581:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17581:20:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17613:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17621:4:9",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17609:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17609:17:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "17603:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17603:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17574:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17574:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17574:54:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17648:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17659:4:9",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17644:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17644:20:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17680:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17688:4:9",
                                    "type": "",
                                    "value": "0xc0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17676:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17676:17:9"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "17670:5:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17670:24:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17696:6:9",
                            "type": "",
                            "value": "0xffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17666:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17666:37:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17637:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17637:67:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17637:67:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17724:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17735:4:9",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17720:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17720:20:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17752:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17760:4:9",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17748:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17748:17:9"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "17742:5:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17742:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17713:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17713:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17713:54:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Payment_$910_memory_ptr__to_t_struct$_Payment_$910_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17073:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17084:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17095:4:9",
                "type": ""
              }
            ],
            "src": "16955:818:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17879:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17889:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17901:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17912:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17897:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17897:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17889:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17931:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17942:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17924:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17924:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17924:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17848:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17859:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17870:4:9",
                "type": ""
              }
            ],
            "src": "17778:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18089:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18099:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18111:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18122:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18107:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18107:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18099:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18141:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18152:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18134:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18134:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18134:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18179:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18190:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18175:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18175:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18199:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18215:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18220:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "18211:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18211:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18224:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "18207:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18207:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18195:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18195:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18168:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18168:60:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18168:60:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18050:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18061:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18069:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18080:4:9",
                "type": ""
              }
            ],
            "src": "17960:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18368:119:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18378:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18390:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18401:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18386:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18386:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18378:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18420:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18431:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18413:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18413:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18413:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18458:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18469:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18454:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18454:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18474:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18447:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18447:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18447:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18329:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18340:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18348:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18359:4:9",
                "type": ""
              }
            ],
            "src": "18239:248:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18540:80:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18567:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18569:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18569:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18569:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18556:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18563:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "18559:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18559:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "18553:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18553:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "18550:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18598:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18609:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18612:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18605:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18605:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "18598:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18523:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18526:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "18532:3:9",
                "type": ""
              }
            ],
            "src": "18492:128:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18671:171:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18702:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "18723:1:9"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18730:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "18735:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "18726:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18726:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18716:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18716:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18716:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18767:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18770:4:9",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "18760:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18760:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18760:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "18795:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18798:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18788:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18788:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18788:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18691:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18684:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18684:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "18681:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18822:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18831:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18834:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "18827:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18827:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "18822:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18656:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18659:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "18665:1:9",
                "type": ""
              }
            ],
            "src": "18625:217:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18899:116:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18958:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18960:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18960:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18960:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "18930:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "18923:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18923:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "18916:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18916:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18938:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18949:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "18945:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18945:6:9"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "18953:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "18941:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18941:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "18935:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18935:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18912:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18912:45:9"
                  },
                  "nodeType": "YulIf",
                  "src": "18909:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18989:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19004:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19007:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "19000:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19000:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "18989:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18878:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18881:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "18887:7:9",
                "type": ""
              }
            ],
            "src": "18847:168:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19069:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19091:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19093:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19093:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19093:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19085:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19088:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "19082:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19082:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19079:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19122:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19134:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19137:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "19130:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19130:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "19122:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19051:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19054:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "19060:4:9",
                "type": ""
              }
            ],
            "src": "19020:125:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19205:325:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19215:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "19229:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19235:1:9",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "19225:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19225:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "19215:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "19246:38:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "19276:4:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19282:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "19272:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19272:12:9"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "19250:18:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19323:31:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "19325:27:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "19339:6:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19347:4:9",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "19335:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19335:17:9"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "19325:6:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "19303:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19296:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19296:26:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19293:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19413:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19434:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19441:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19446:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "19437:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19437:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19427:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19427:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19427:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19478:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19481:4:9",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19471:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19471:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19471:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19506:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19509:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19499:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19499:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19499:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "19369:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "19392:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19400:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "19389:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19389:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "19366:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19366:38:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19363:2:9"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "19185:4:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "19194:6:9",
                "type": ""
              }
            ],
            "src": "19150:380:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19567:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19584:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19591:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19596:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "19587:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19587:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19577:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19577:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19577:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19624:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19627:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19617:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19617:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19617:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19648:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19651:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "19641:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19641:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19641:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "19535:127:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19709:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19763:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19772:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19775:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19765:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19765:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19765:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "19732:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "19753:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "19746:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19746:13:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "19739:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19739:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "19729:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19729:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19722:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19722:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "19719:2:9"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "19698:5:9",
                "type": ""
              }
            ],
            "src": "19667:118:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_struct_PaymentInput_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 224) { revert(value, value) }\n        value := offset\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_struct$_PaymentInput_$522_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value0, value0) }\n        value0 := abi_decode_struct_PaymentInput_calldata(headStart, dataEnd)\n    }\n    function abi_decode_tuple_t_struct$_PaymentInput_$522_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(value2, value2) }\n        value0 := abi_decode_struct_PaymentInput_calldata(headStart, dataEnd)\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_struct$_PaymentInput_$522_calldata_ptrt_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(value3, value3) }\n        value0 := abi_decode_struct_PaymentInput_calldata(headStart, dataEnd)\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, 0xffffffffffffffff) { revert(value3, value3) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        value3 := abi_decode_address(add(headStart, 256))\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_enum_States(value, pos)\n    {\n        if iszero(lt(value, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_uint16_t_uint256_t_uint256_t_address_t_address__to_t_bytes32_t_bytes32_t_uint256_t_uint16_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffff))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), and(value7, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_enum$_States_$892__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_States(value0, headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"payment deadline expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20 transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"operator not authorized for this\")\n        mstore(add(headStart, 96), \" universeId\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"only payment operator is authori\")\n        mstore(add(headStart, 96), \"zed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"cannot withdraw: balance is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"incorrect operator signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"seller not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 'v' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"payment in incorrect curent stat\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"payment not initially in asset t\")\n        mstore(add(headStart, 96), \"ransferring state\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"not enough funds available for t\")\n        mstore(add(headStart, 96), \"his buyer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"incorrect buyer signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"only buyer can execute this func\")\n        mstore(add(headStart, 96), \"tion\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"fee cannot be larger than 100 pe\")\n        mstore(add(headStart, 96), \"rcent\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"refund requires payment in faile\")\n        mstore(add(headStart, 96), \"d state\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_Payment_$910_memory_ptr__to_t_struct$_Payment_$910_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_enum_States(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 0x20), and(memberValue0, _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), _1))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), and(mload(add(value0, 0xc0)), 0xffff))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "2059:17300:8:-:0;;;3371:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2339:542:4;;;;;;;;;;;;;-1:-1:-1;;;2339:542:4;;;;;;;;;;;;;;;;-1:-1:-1;;;2339:542:4;;;867:17:0;887:12;:10;;;:12;;:::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:0;-1:-1:-1;;;;;909:18:0;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:0;942:43;;909:6;;942:43;-1:-1:-1;910:16:7;:29;;-1:-1:-1;;;;;;910:29:7;929:10;910:29;;;;;;954:27;;1479:51:9;;;954:27:7;;1467:2:9;1452:18;954:27:7;;;;;;;873:21:6;:34;;-1:-1:-1;;;;;;873:34:6;897:10;873:34;;;;;;922:32;;1479:51:9;;;922:32:6;;1467:2:9;1452:18;922:32:6;;;;;;;2425:22:4;;;;;;;2481:25;;;;;;;;;2640;;;;2675:31;;;;2735:13;2716:32;;;;-1:-1:-1;3399:159:4;;2535:95;3399:159;;;1800:25:9;;;1841:18;;;1834:34;;;;1884:18;;;1877:34;;;;1927:18;;;;1920:34;;;;3539:4:4;1970:19:9;;;1963:61;3399:159:4;;;;;;;;;;1772:19:9;;;;3399:159:4;;;3376:192;;;;;;2758:85;;2853:21;;3449:6:8;:21;;-1:-1:-1;;;;;;3449:21:8;-1:-1:-1;;;;;3449:21:8;;;;;3480:38;;;;:17;;:38;;;;;:::i;:::-;-1:-1:-1;;3545:7:8;3528:14;:24;-1:-1:-1;3562:29:8;:36;;-1:-1:-1;;3562:36:8;3594:4;3562:36;;;2059:17300;;586:96:2;665:10;586:96;:::o;2059:17300:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2059:17300:8;;;-1:-1:-1;2059:17300:8;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1314:9;;;164:2;152:9;143:7;139:23;135:32;132:2;;;185:6;177;170:22;132:2;216:16;;-1:-1:-1;;;;;261:31:9;;251:42;;241:2;;312:6;304;297:22;241:2;364;395:18;;;389:25;340:5;;-1:-1:-1;364:2:9;-1:-1:-1;;;;;463:14:9;;;460:2;;;495:6;487;480:22;460:2;538:6;527:9;523:22;513:32;;583:7;576:4;572:2;568:13;564:27;554:2;;610:6;602;595:22;554:2;644;638:9;666:2;662;659:10;656:2;;;672:18;;:::i;:::-;747:2;741:9;715:2;801:13;;-1:-1:-1;;797:22:9;;;821:2;793:31;789:40;777:53;;;845:18;;;865:22;;;842:46;839:2;;;891:18;;:::i;:::-;931:10;927:2;920:22;966:2;958:6;951:18;1006:7;1001:2;996;992;988:11;984:20;981:33;978:2;;;1032:6;1024;1017:22;978:2;1059:6;1050:15;;1074:129;1088:2;1085:1;1082:9;1074:129;;;1176:10;;;1172:19;;1166:26;1145:14;;;1141:23;;1134:59;1099:10;;;;1074:129;;;1221:2;1218:1;1215:9;1212:2;;;1280:6;1275:2;1270;1262:6;1258:15;1254:24;1247:40;1212:2;1316:6;1306:16;;;;;;;;122:1206;;;;;:::o;2035:380::-;2120:1;2110:12;;2167:1;2157:12;;;2178:2;;2232:4;2224:6;2220:17;2210:27;;2178:2;2285;2277:6;2274:14;2254:18;2251:38;2248:2;;;2331:10;2326:3;2322:20;2319:1;2312:31;2366:4;2363:1;2356:15;2394:4;2391:1;2384:15;2248:2;;2090:325;;;:::o;2420:127::-;2481:10;2476:3;2472:20;2469:1;2462:31;2512:4;2509:1;2502:15;2536:4;2533:1;2526:15;2452:95;2059:17300:8;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "2059:17300:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18162:634;;;;;;:::i;:::-;;:::i;:::-;;13945:124;;;;;;:::i;:::-;;:::i;:::-;;;6780:25:9;;;6768:2;6753:18;13945:124:8;;;;;;;;1372:186:7;;;;;;:::i;:::-;;:::i;5381:1242:8:-;;;;;;:::i;:::-;;:::i;4552:128::-;;;:::i;967:620:5:-;;;;;;:::i;:::-;;:::i;:::-;;;6607:14:9;;6600:22;6582:41;;6570:2;6555:18;967:620:5;6537:92:9;4293:156:8;;;;;;:::i;:::-;;:::i;15896:107::-;;;:::i;:::-;;;;;;;:::i;12767:122::-;12853:29;;;;12767:122;;11269:247;;;;;;:::i;:::-;;:::i;7327:1263::-;;;;;;:::i;:::-;;:::i;19120:237::-;;;;;;:::i;:::-;;:::i;9886:384::-;;;;;;:::i;:::-;;:::i;1405:226:6:-;;;;;;:::i;:::-;;:::i;17652:356:8:-;;;;;;:::i;:::-;;:::i;:::-;;;;18413:25:9;;;18469:2;18454:18;;18447:34;;;;18386:18;17652:356:8;18368:119:9;15108:310:8;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11642:57::-;;;:::i;14311:134::-;;;;;;:::i;:::-;;:::i;13643:105::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13725:16:8;13699:7;13725:16;;;:10;:16;;;;;;;13643:105;1700:145:0;;;:::i;10683:215:8:-;;;;;;:::i;:::-;;:::i;13326:79::-;13392:6;;-1:-1:-1;;;;;13392:6:8;13326:79;;;-1:-1:-1;;;;;5430:32:9;;;5412:51;;5400:2;5385:18;13326:79:8;5367:102:9;13075:120:8;;;;;;:::i;:::-;-1:-1:-1;;;;;13163:25:8;13140:4;13163:25;;;:19;:25;;;;;;;;;13075:120;1149:217:7;;;;;;:::i;:::-;;:::i;1669:257::-;;;;;;:::i;:::-;;:::i;1564:99::-;1640:16;;-1:-1:-1;;;;;1640:16:7;1564:99;;1152:247:6;;;;;;:::i;:::-;;:::i;1068:85:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;;3941:137:8;;;;;;:::i;:::-;;:::i;16365:174::-;;;;;;:::i;:::-;;:::i;967:179:6:-;;;;;;:::i;:::-;;:::i;8864:648:8:-;;;;;;:::i;:::-;;:::i;16828:355::-;;;;;;:::i;:::-;;:::i;15647:95::-;15721:14;;15647:95;;1752:331:6;;;;;;:::i;:::-;;:::i;14635:151:8:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1637:109:6:-;1718:21;;-1:-1:-1;;;;;1718:21:6;1637:109;;1994:240:0;;;;;;:::i;:::-;;:::i;994:149:7:-;;;;;;:::i;:::-;;:::i;18162:634:8:-;18261:5;18247:10;;;;;;;;:::i;:::-;:19;;;;18239:69;;;;-1:-1:-1;;;18239:69:8;;16343:2:9;18239:69:8;;;16325:21:9;16382:2;16362:18;;;16355:30;16421:34;16401:18;;;16394:62;-1:-1:-1;;;16472:18:9;;;16465:35;16517:19;;18239:69:8;;;;;;;;;18370:17;18339:27;18352:13;;18339:12;:27::i;:::-;:48;;;;;;-1:-1:-1;;;18339:48:8;;;;;;;;;;18318:128;;;;-1:-1:-1;;;18318:128:8;;14354:2:9;18318:128:8;;;14336:21:9;14393:2;14373:18;;;14366:30;14432:34;14412:18;;;14405:62;-1:-1:-1;;;14483:18:9;;;14476:31;14524:19;;18318:128:8;14326:223:9;18318:128:8;18483:3;:14;;;18464:15;:33;;18456:70;;;;-1:-1:-1;;;18456:70:8;;9833:2:9;18456:70:8;;;9815:21:9;9872:2;9852:18;;;9845:30;9911:26;9891:18;;;9884:54;9955:18;;18456:70:8;9805:174:9;18456:70:8;18540:29;;;;18536:112;;;18591:19;:31;18611:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18591:31:8;;;;;;;;;;;;-1:-1:-1;18591:31:8;;;;18583:65;;;;-1:-1:-1;;;18583:65:8;;13240:2:9;18583:65:8;;;13222:21:9;13279:2;13259:18;;;13252:30;-1:-1:-1;;;13298:18:9;;;13291:51;13359:18;;18583:65:8;13212:171:9;18583:65:8;18679:43;18700:9;;;;;;;;:::i;:::-;18711:3;:10;;;18679:20;:43::i;:::-;18658:131;;;;-1:-1:-1;;;18658:131:8;;15174:2:9;18658:131:8;;;15156:21:9;15213:2;15193:18;;;15186:30;15252:34;15232:18;;;15225:62;-1:-1:-1;;;15303:18:9;;;15296:39;15352:19;;18658:131:8;15146:231:9;18658:131:8;18162:634;:::o;13945:124::-;14039:6;;14032:30;;-1:-1:-1;;;14032:30:8;;-1:-1:-1;;;;;5430:32:9;;;14032:30:8;;;5412:51:9;14006:7:8;;14039:6;;14032:24;;5385:18:9;;14032:30:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14025:37;;13945:124;;;;:::o;1372:186:7:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1460:30:7::1;::::0;;;:18:::1;:30;::::0;;;;;;;;1453:37;;-1:-1:-1;;;;;;1453:37:7::1;::::0;;-1:-1:-1;1534:16:7;1505:46;;18134:25:9;;;-1:-1:-1;;;;;1534:16:7;;::::1;18175:18:9::0;;;18168:60;;;;1505:46:7::1;::::0;18107:18:9;1505:46:7::1;;;;;;;;1372:186:::0;:::o;5381:1242:8:-;5557:10;5521:32;5538:14;;;;5521:16;:32::i;:::-;-1:-1:-1;;;;;5521:46:8;;5500:136;;;;-1:-1:-1;;;5500:136:8;;11303:2:9;5500:136:8;;;11285:21:9;11342:2;11322:18;;;11315:30;11381:34;11361:18;;;11354:62;-1:-1:-1;;;11432:18:9;;;11425:41;11483:19;;5500:136:8;11275:233:9;5500:136:8;5681:13;5650:27;5663:13;;5650:12;:27::i;:::-;:44;;;;;;-1:-1:-1;;;5650:44:8;;;;;;;;;;5646:84;;;5708:22;5716:13;;5708:7;:22::i;:::-;5740:23;5759:3;5740:18;:23::i;:::-;5794:38;5801:3;5806:14;;5822:9;;;;;;;;:::i;5794:38::-;5773:110;;;;-1:-1:-1;;;5773:110:8;;15584:2:9;5773:110:8;;;15566:21:9;15623:2;15603:18;;;15596:30;15662:27;15642:18;;;15635:55;15707:18;;5773:110:8;15556:175:9;5773:110:8;5920:271;;;;;;;;;;5941:24;5920:271;;;;5979:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5920:271:8;;;;;6002:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5920:271:8;;;6026:10;5920:271;;;;;;6050:37;6072:14;;;;6050:21;:37::i;:::-;-1:-1:-1;;;;;5920:271:8;;;;;6119:14;;6101:15;:32;;;;:::i;:::-;5920:271;;;;6147:10;;;;;;;;:::i;:::-;5920:271;;;;;6171:10;;;;5920:271;;;;;;;5903:13;;-1:-1:-1;5893:24:8;;;:9;:24;;;;;;:298;;;;:24;;-1:-1:-1;;5893:298:8;;;;;;;;;-1:-1:-1;;;5893:298:8;;;;;;;;;;;;;-1:-1:-1;5893:298:8;;;;;;-1:-1:-1;;;;;5893:298:8;;;;;-1:-1:-1;;;;;;5893:298:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5893:298:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5893:298:8;;;;;;;;;;;;;;;;;;;;;;;;;;6242:76;;6275:9;;;;;;;;;:::i;:::-;6298:3;:10;;;6242:19;:76::i;:::-;6201:117;;-1:-1:-1;6201:117:8;-1:-1:-1;6332:12:8;;6328:186;;6392:6;;-1:-1:-1;;;;;6392:6:8;6385:27;6413:9;;;;;;;;:::i;:::-;6385:63;;-1:-1:-1;;;;;;6385:63:8;;;;;;;-1:-1:-1;;;;;6041:15:9;;;6385:63:8;;;6023:34:9;6432:4:8;6073:18:9;;;6066:43;6125:18;;;6118:34;;;5958:18;;6385:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6360:143;;;;-1:-1:-1;;;6360:143:8;;10186:2:9;6360:143:8;;;10168:21:9;10225:2;10205:18;;;10198:30;-1:-1:-1;;;10244:18:9;;;10237:51;10305:18;;6360:143:8;10158:171:9;6360:143:8;6548:10;6523;:21;6534:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6523:21:8;-1:-1:-1;;;;;6523:21:8;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;6605:10:8;;-1:-1:-1;6605:10:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;6573:43:8;6594:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6573:43:8;6579:3;:13;;;6573:43;;;;;;;;;;5381:1242;;;;;:::o;4552:128::-;4619:10;4599:31;;;;:19;:31;;;;;;:38;;-1:-1:-1;;4599:38:8;4633:4;4599:38;;;4652:21;;;4599:31;4652:21;4552:128::o;967:620:5:-;1103:4;1119:23;1145:393;1528:9;;1145:393;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1145:374:5;;-1:-1:-1;528:162:5;;-1:-1:-1;;1265:13:5;;1300:10;;;;1332;;;;;;;;:::i;:::-;1364:3;:14;;;1400:3;:14;;;1436:3;:9;;;;;;;;;;:::i;:::-;1467:3;:10;;;;;;;;;;:::i;:::-;1202:293;;;;;;7651:25:9;;;;7692:18;;7685:34;;;;7735:18;;;7728:34;;;;7810:6;7798:19;;;7778:18;;;7771:47;7834:19;;;7827:35;7878:19;;;7871:35;-1:-1:-1;;;;;7981:15:9;;;7960:19;;;7953:44;8034:15;8013:19;;;8006:44;7623:19;;1202:293:5;;;;;;;;;;;;1175:334;;;;;;1145:16;:374::i;:::-;:382;;:393::i;:::-;-1:-1:-1;;;;;1555:25:5;;;;;;;-1:-1:-1;;967:620:5;;;;;;:::o;4293:156:8:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;4400:29:8::1;:42:::0;;-1:-1:-1;;4400:42:8::1;::::0;::::1;;::::0;;;::::1;::::0;;4293:156::o;15896:107::-;15947:13;15979:17;15972:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15896:107;;:::o;11269:247::-;11382:13;11355:23;11368:9;11355:12;:23::i;:::-;:40;;;;;;-1:-1:-1;;;11355:40:8;;;;;;;;;;11334:126;;;;-1:-1:-1;;;11334:126:8;;;;;;;:::i;:::-;11470:18;11478:9;11470:7;:18::i;:::-;11498:11;:9;:11::i;7327:1263::-;7467:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7453:23:8;:10;-1:-1:-1;;;;;7453:23:8;;7432:106;;;;-1:-1:-1;;;7432:106:8;;15938:2:9;7432:106:8;;;15920:21:9;15977:2;15957:18;;;15950:30;16016:34;15996:18;;;15989:62;-1:-1:-1;;;16067:18:9;;;16060:34;16111:19;;7432:106:8;15910:226:9;7432:106:8;7583:13;7552:27;7565:13;;7552:12;:27::i;:::-;:44;;;;;;-1:-1:-1;;;7552:44:8;;;;;;;;;;7548:84;;;7610:22;7618:13;;7610:7;:22::i;:::-;7642:23;7661:3;7642:18;:23::i;:::-;7675:16;7694:32;7711:3;:14;;;7694:16;:32::i;:::-;7675:51;;7757:40;7764:3;7769:17;;7788:8;7757:6;:40::i;:::-;7736:115;;;;-1:-1:-1;;;7736:115:8;;12883:2:9;7736:115:8;;;12865:21:9;12922:2;12902:18;;;12895:30;12961;12941:18;;;12934:58;13009:18;;7736:115:8;12855:178:9;7736:115:8;7889:269;;;;;;;;;;7910:24;7889:269;;;;7948:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7889:269:8;;;;;7971:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7889:269:8;;;;;7995:8;-1:-1:-1;;;;;7889:269:8;;;;;8017:37;8039:3;:14;;;8017:21;:37::i;:::-;-1:-1:-1;;;;;7889:269:8;;;;;8086:14;;8068:15;:32;;;;:::i;:::-;7889:269;;;;8114:10;;;;;;;;:::i;:::-;7889:269;;;;;8138:10;;;;7889:269;;;;;;;7872:13;;-1:-1:-1;7862:24:8;;;:9;:24;;;;;;:296;;;;:24;;-1:-1:-1;;7862:296:8;;;;;;;;;-1:-1:-1;;;7862:296:8;;;;;;;;;;;;;-1:-1:-1;7862:296:8;;;;;;-1:-1:-1;;;;;7862:296:8;;;;;-1:-1:-1;;;;;;7862:296:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7862:296:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7862:296:8;;;;;;;;;;;;;;;;;;;;;;;;;;8209:76;;8242:9;;;;;;;;;:::i;:::-;8265:3;:10;;;8209:19;:76::i;:::-;8168:117;;-1:-1:-1;8168:117:8;-1:-1:-1;8299:12:8;;8295:186;;8359:6;;-1:-1:-1;;;;;8359:6:8;8352:27;8380:9;;;;;;;;:::i;:::-;8352:63;;-1:-1:-1;;;;;;8352:63:8;;;;;;;-1:-1:-1;;;;;6041:15:9;;;8352:63:8;;;6023:34:9;8399:4:8;6073:18:9;;;6066:43;6125:18;;;6118:34;;;5958:18;;8352:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8327:143;;;;-1:-1:-1;;;8327:143:8;;10186:2:9;8327:143:8;;;10168:21:9;10225:2;10205:18;;;10198:30;-1:-1:-1;;;10244:18:9;;;10237:51;10305:18;;8327:143:8;10158:171:9;8327:143:8;8515:10;8490;:21;8501:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8490:21:8;-1:-1:-1;;;;;8490:21:8;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;8572:10:8;;-1:-1:-1;8572:10:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;8540:43:8;8561:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8540:43:8;8546:3;:13;;;8540:43;;;;;;;;;;7327:1263;;;;;;:::o;19120:237::-;19223:7;;19286:5;19267:15;19276:6;19267;:15;:::i;:::-;19266:25;;;;:::i;:::-;19246:45;;19322:6;19309:9;:19;;19308:42;;19344:6;19308:42;;;19332:9;19308:42;19301:49;;;19120:237;;;;;:::o;9886:384::-;9988:20;;;;:9;:20;;;;;:29;;;-1:-1:-1;;;;;9988:29:8;9974:10;:43;9953:125;;;;-1:-1:-1;;;9953:125:8;;;;;;;:::i;:::-;10137:23;10150:9;10137:12;:23::i;:::-;10109:51;;;;;;-1:-1:-1;;;10109:51:8;;;;;;;;;:24;:51;10088:147;;;;-1:-1:-1;;;10088:147:8;;;;;;;:::i;:::-;10245:18;10253:9;10245:7;:18::i;1405:226:6:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1518:35:6::1;::::0;;;:23:::1;:35;::::0;;;;;;;;1511:42;;-1:-1:-1;;;;;;1511:42:6::1;::::0;;1602:21:::1;::::0;1568:56;;18134:25:9;;;-1:-1:-1;;;;;1602:21:6;;::::1;18175:18:9::0;;;18168:60;;;;1568:56:6::1;::::0;18107:18:9;1568:56:6::1;18089:145:9::0;17652:356:8;-1:-1:-1;;;;;17837:17:8;;17757:21;17837:17;;;:10;:17;;;;;;17757:21;;17878;;;17877:47;;17918:6;17877:47;;;17903:12;17877:47;17864:60;;17960:12;17951:6;:21;17950:51;;18000:1;17950:51;;;17976:21;17985:12;17976:6;:21;:::i;:::-;17934:67;;17652:356;;;;;;:::o;15108:310::-;15170:6;15203:20;;;:9;:20;;;;;:26;;;;15256:5;:33;;;;;;-1:-1:-1;;;15256:33:8;;;;;;;;;;:102;;;;-1:-1:-1;15323:20:8;;;;:9;:20;;;;;:35;;;15305:15;:53;15256:102;15239:150;;;15376:13;15369:20;;;;;11642:57;11681:11;:9;:11::i;:::-;11642:57::o;14311:134::-;14399:6;;14392:46;;-1:-1:-1;;;14392:46:8;;-1:-1:-1;;;;;5704:15:9;;;14392:46:8;;;5686:34:9;14432:4:8;5736:18:9;;;5729:43;14366:7:8;;14399:6;;14392:24;;5621:18:9;;14392:46:8;5603:175:9;1700:145:0;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;10683:215:8:-;10785:13;10758:23;10771:9;10758:12;:23::i;:::-;:40;;;;;;-1:-1:-1;;;10758:40:8;;;;;;;;;;10737:126;;;;-1:-1:-1;;;10737:126:8;;;;;;;:::i;1149:217:7:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1265:30:7::1;::::0;;;:18:::1;:30;::::0;;;;;;;;:41;;-1:-1:-1;;;;;;1265:41:7::1;-1:-1:-1::0;;;;;1265:41:7;::::1;::::0;;::::1;::::0;;;1321:38;;18134:25:9;;;18175:18;;;18168:60;1321:38:7::1;::::0;18107:18:9;1321:38:7::1;;;;;;;;1149:217:::0;;:::o;1669:257::-;1760:7;1808:30;;;:18;:30;;;;;;-1:-1:-1;;;;;1808:30:7;1855:28;;:64;;1905:14;1855:64;;;1886:16;;-1:-1:-1;;;;;1886:16:7;1855:64;1848:71;1669:257;-1:-1:-1;;;1669:257:7:o;1152:247:6:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1278:35:6::1;::::0;;;:23:::1;:35;::::0;;;;;;;;:51;;-1:-1:-1;;;;;;1278:51:6::1;-1:-1:-1::0;;;;;1278:51:6;::::1;::::0;;::::1;::::0;;;1344:48;;18134:25:9;;;18175:18;;;18168:60;1344:48:6::1;::::0;18107:18:9;1344:48:6::1;18089:145:9::0;3941:137:8;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;4012:14:8::1;:23:::0;;;4050:21:::1;::::0;6780:25:9;;;4050:21:8::1;::::0;6768:2:9;6753:18;4050:21:8::1;6735:76:9::0;16365:174:8;16471:4;16526:6;16498:24;16516:5;16498:17;:24::i;:::-;:34;;;16365:174;-1:-1:-1;;;16365:174:8:o;967:179:6:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1052:21:6::1;:37:::0;;-1:-1:-1;;;;;;1052:37:6::1;-1:-1:-1::0;;;;;1052:37:6;::::1;::::0;;::::1;::::0;;;1104:35:::1;::::0;5412:51:9;;;1104:35:6::1;::::0;5400:2:9;5385:18;1104:35:6::1;5367:102:9::0;8864:648:8;8932:16;8951:20;;;:9;:20;;;;;;8932:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8932:39:8;;;;;;;;;;;;;;;-1:-1:-1;;;8932:39:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8932:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9016:10;;;;;;-1:-1:-1;9002:24:8;:10;:24;8981:106;;;;-1:-1:-1;;;8981:106:8;;;;;;;:::i;:::-;9146:23;9159:9;9146:12;:23::i;:::-;9118:51;;;;;;-1:-1:-1;;;9118:51:8;;;;;;;;;:24;:51;9097:147;;;;-1:-1:-1;;;9097:147:8;;;;;;;:::i;:::-;9254:20;;;;:9;:20;;;;;:40;;-1:-1:-1;;9254:40:8;9283:11;9254:40;;;9341:8;;;;9359;;;;9324:45;;9341:8;9351:17;;9324:16;:45::i;:::-;9304:65;;9415:9;9404:1;:8;;;:20;;;;:::i;:::-;9390:8;;;;;-1:-1:-1;;;;;9379:20:8;;;;;:10;:20;;;;;:46;;:20;;;:46;;;;;:::i;:::-;;;;-1:-1:-1;;9446:15:8;;;;-1:-1:-1;;;;;9435:27:8;;;;;:10;:27;;;;;:40;;9466:9;;9435:27;:40;;9466:9;;9435:40;:::i;:::-;;;;-1:-1:-1;;9490:15:8;;6780:25:9;;;9490:15:8;;6768:2:9;6753:18;9490:15:8;;;;;;;8864:648;;;:::o;16828:355::-;16891:7;16910:16;16929;16939:5;16929:9;:16::i;:::-;16985:6;;16978:31;;-1:-1:-1;;;16978:31:8;;-1:-1:-1;;;;;5430:32:9;;;16978:31:8;;;5412:51:9;16910:35:8;;-1:-1:-1;16955:20:8;;16985:6;;;;16978:24;;5385:18:9;;16978:31:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16955:54;;17019:25;17059:12;17048:8;:23;17047:75;;17110:12;17047:75;;;17087:8;17047:75;-1:-1:-1;;;;;17139:17:8;;;;;;:10;:17;;;;;;17019:103;;-1:-1:-1;17139:37:8;;17019:103;;17139:37;:::i;:::-;17132:44;16828:355;-1:-1:-1;;;;;16828:355:8:o;1752:331:6:-;1848:7;1901:35;;;:23;:35;;;;;;-1:-1:-1;;;;;1901:35:6;1965:33;;:111;;2057:19;1965:111;;;-1:-1:-1;;2017:21:6;;-1:-1:-1;;;;;2017:21:6;;1752:331;-1:-1:-1;1752:331:6:o;14635:151:8:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14759:20:8;;;;:9;:20;;;;;;;14752:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14752:27:8;;;;;;;;;;;;;;;-1:-1:-1;;;14752:27:8;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14752:27:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14635:151;-1:-1:-1;;14635:151:8:o;1994:240:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;10896:2:9;2074:73:0::1;::::0;::::1;10878:21:9::0;10935:2;10915:18;;;10908:30;10974:34;10954:18;;;10947:62;-1:-1:-1;;;11025:18:9;;;11018:36;11071:19;;2074:73:0::1;10868:228:9::0;2074:73:0::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;994:149:7:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1069:16:7::1;:27:::0;;-1:-1:-1;;;;;;1069:27:7::1;-1:-1:-1::0;;;;;1069:27:7;::::1;::::0;;::::1;::::0;;;1111:25:::1;::::0;5412:51:9;;;1111:25:7::1;::::0;5400:2:9;5385:18;1111:25:7::1;5367:102:9::0;11870:226:8;11924:16;11943:20;;;:9;:20;;;;;;11924:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11924:39:8;;;;;;;;;;;;;;;-1:-1:-1;;;11924:39:8;;;;;;;;;;;;;-1:-1:-1;;;;;11924:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11996:8;;;;11984:7;;;;11973:19;;;11924:39;11973:19;;;:10;:19;;;;;;:31;;11924:39;;-1:-1:-1;11996:8:8;;11973:31;;11996:8;;11973:31;:::i;:::-;;;;-1:-1:-1;;12021:20:8;;;;:9;:20;;;;;;;;12014:27;;-1:-1:-1;;;;;;12014:27:8;;;-1:-1:-1;12014:27:8;;;;-1:-1:-1;;;;;;12014:27:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12014:27:8;;;;;;;;12081:7;;;;12056:33;;-1:-1:-1;;;;;12056:33:8;;;;12021:20;;12056:33;;12021:20;12056:33;11870:226;;:::o;4200:165:4:-;4277:7;4303:55;4325:20;:18;:20::i;:::-;4347:10;5093:57:3;;-1:-1:-1;;;5093:57:3;;;5127:27:9;5170:11;;;5163:27;;;5206:12;;;5199:28;;;5057:7:3;;5243:12:9;;5093:57:3;;;;;;;;;;;;5083:68;;;;;;5076:75;;4964:194;;;;;1064:1459;1142:7;1217:9;1236;1255:7;1470:9;:16;1490:2;1470:22;1466:1011;;;-1:-1:-1;;;1752:4:3;1737:20;;1731:27;1801:4;1786:20;;1780:27;1858:4;1843:20;;1837:27;1834:1;1829:36;1708:171;;;1899:9;:16;1919:2;1899:22;1895:582;;;-1:-1:-1;;;2186:4:3;2171:20;;2165:27;2235:4;2220:20;;2214:27;;-1:-1:-1;;;;;2263:75:3;;;2368:3;2364:12;2378:2;2360:21;2137:258;;;2425:41;;-1:-1:-1;;;2425:41:3;;10536:2:9;2425:41:3;;;10518:21:9;10575:2;10555:18;;;10548:30;10614:33;10594:18;;;10587:61;10665:18;;2425:41:3;10508:181:9;1895:582:3;2494:22;2502:4;2508:1;2511;2514;2494:7;:22::i;:::-;2487:29;1064:1459;-1:-1:-1;;;;;;1064:1459:3:o;12338:282:8:-;12405:10;12377:14;12394:22;;;:10;:22;;;;;;12434:10;12426:55;;;;-1:-1:-1;;;12426:55:8;;12522:2:9;12426:55:8;;;12504:21:9;;;12541:18;;;12534:30;12600:34;12580:18;;;12573:62;12652:18;;12426:55:8;12494:182:9;12426:55:8;12502:10;12516:1;12491:22;;;:10;:22;;;;;;:26;;;;12534:6;;12527:43;;-1:-1:-1;;;12527:43:8;;;;;6337:51:9;;;;6404:18;;;6397:34;;;-1:-1:-1;;;;;12534:6:8;;12527:23;;6310:18:9;;12527:43:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12585:28:8;;6780:25:9;;;12594:10:8;;12585:28;;6768:2:9;6753:18;12585:28:8;;;;;;;12338:282;:::o;2967:275:4:-;3020:7;3060:16;3043:13;:33;3039:197;;;-1:-1:-1;3099:24:4;3092:31;;3039:197;-1:-1:-1;3399:159:4;;;3183:10;3399:159;;;;7075:25:9;;;;3195:12:4;7116:18:9;;;7109:34;3209:15:4;7159:18:9;;;7152:34;3500:13:4;7202:18:9;;;7195:34;3539:4:4;7245:19:9;;;;7238:61;;;;3399:159:4;;;;;;;;;;7047:19:9;;;;3399:159:4;;;3376:192;;;;;3154:71;;2656:1414:3;2741:7;3656:66;3642:80;;;3634:127;;;;-1:-1:-1;;;3634:127:3;;12119:2:9;3634:127:3;;;12101:21:9;12158:2;12138:18;;;12131:30;12197:34;12177:18;;;12170:62;-1:-1:-1;;;12248:18:9;;;12241:32;12290:19;;3634:127:3;12091:224:9;3634:127:3;3779:1;:7;;3784:2;3779:7;:18;;;;3790:1;:7;;3795:2;3790:7;3779:18;3771:65;;;;-1:-1:-1;;;3771:65:3;;13590:2:9;3771:65:3;;;13572:21:9;13629:2;13609:18;;;13602:30;13668:34;13648:18;;;13641:62;-1:-1:-1;;;13719:18:9;;;13712:32;13761:19;;3771:65:3;13562:224:9;3771:65:3;3948:24;;;3931:14;3948:24;;;;;;;;;8288:25:9;;;8361:4;8349:17;;8329:18;;;8322:45;;;;8383:18;;;8376:34;;;8426:18;;;8419:34;;;3948:24:3;;8260:19:9;;3948:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3948:24:3;;-1:-1:-1;;3948:24:3;;;-1:-1:-1;;;;;;;3990:20:3;;3982:57;;;;-1:-1:-1;;;3982:57:3;;9480:2:9;3982:57:3;;;9462:21:9;9519:2;9499:18;;;9492:30;9558:26;9538:18;;;9531:54;9602:18;;3982:57:3;9452:174:9;14:173;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;192:375;;;307:3;300:4;292:6;288:17;284:27;274:2;;332:8;322;315:26;274:2;-1:-1:-1;362:20:9;;405:18;394:30;;391:2;;;444:8;434;427:26;391:2;488:4;480:6;476:17;464:29;;540:3;533:4;524:6;516;512:19;508:30;505:39;502:2;;;557:1;554;547:12;502:2;264:303;;;;;:::o;572:169::-;;682:3;673:6;668:3;664:16;660:26;657:2;;;703:5;696;689:20;657:2;-1:-1:-1;729:6:9;647:94;-1:-1:-1;647:94:9:o;746:196::-;;858:2;846:9;837:7;833:23;829:32;826:2;;;879:6;871;864:22;826:2;907:29;926:9;907:29;:::i;947:264::-;;;1076:2;1064:9;1055:7;1051:23;1047:32;1044:2;;;1097:6;1089;1082:22;1044:2;1125:29;1144:9;1125:29;:::i;:::-;1115:39;1201:2;1186:18;;;;1173:32;;-1:-1:-1;;;1034:177:9:o;1216:251::-;;1325:2;1313:9;1304:7;1300:23;1296:32;1293:2;;;1346:6;1338;1331:22;1293:2;1390:9;1377:23;1409:28;1431:5;1409:28;:::i;1472:255::-;;1592:2;1580:9;1571:7;1567:23;1563:32;1560:2;;;1613:6;1605;1598:22;1560:2;1650:9;1644:16;1669:28;1691:5;1669:28;:::i;1732:190::-;;1844:2;1832:9;1823:7;1819:23;1815:32;1812:2;;;1865:6;1857;1850:22;1812:2;-1:-1:-1;1893:23:9;;1802:120;-1:-1:-1;1802:120:9:o;1927:258::-;;2070:3;2058:9;2049:7;2045:23;2041:33;2038:2;;;2092:6;2084;2077:22;2038:2;2120:59;2171:7;2160:9;2120:59;:::i;2190:566::-;;;;2369:3;2357:9;2348:7;2344:23;2340:33;2337:2;;;2391:6;2383;2376:22;2337:2;2419:59;2470:7;2459:9;2419:59;:::i;:::-;2409:69;;2529:3;2518:9;2514:19;2501:33;2557:18;2549:6;2546:30;2543:2;;;2594:6;2586;2579:22;2543:2;2638:58;2688:7;2679:6;2668:9;2664:22;2638:58;:::i;:::-;2327:429;;2715:8;;-1:-1:-1;2612:84:9;;-1:-1:-1;;;;2327:429:9:o;2761:641::-;;;;;2957:3;2945:9;2936:7;2932:23;2928:33;2925:2;;;2979:6;2971;2964:22;2925:2;3007:59;3058:7;3047:9;3007:59;:::i;:::-;2997:69;;3117:3;3106:9;3102:19;3089:33;3145:18;3137:6;3134:30;3131:2;;;3182:6;3174;3167:22;3131:2;3226:58;3276:7;3267:6;3256:9;3252:22;3226:58;:::i;:::-;3303:8;;-1:-1:-1;3200:84:9;-1:-1:-1;3357:39:9;;-1:-1:-1;3391:3:9;3376:19;;3357:39;:::i;:::-;3347:49;;2915:487;;;;;;;:::o;3407:292::-;;3518:2;3506:9;3497:7;3493:23;3489:32;3486:2;;;3539:6;3531;3524:22;3486:2;3583:9;3570:23;3633:6;3626:5;3622:18;3615:5;3612:29;3602:2;;3660:6;3652;3645:22;3899:194;;4022:2;4010:9;4001:7;3997:23;3993:32;3990:2;;;4043:6;4035;4028:22;3990:2;-1:-1:-1;4071:16:9;;3980:113;-1:-1:-1;3980:113:9:o;4098:264::-;;;4227:2;4215:9;4206:7;4202:23;4198:32;4195:2;;;4248:6;4240;4233:22;4195:2;4289:9;4276:23;4266:33;;4318:38;4352:2;4341:9;4337:18;4318:38;:::i;:::-;4308:48;;4185:177;;;;;:::o;4367:258::-;;;4496:2;4484:9;4475:7;4471:23;4467:32;4464:2;;;4517:6;4509;4502:22;4464:2;-1:-1:-1;;4545:23:9;;;4615:2;4600:18;;;4587:32;;-1:-1:-1;4454:171:9:o;4630:234::-;4708:1;4701:5;4698:12;4688:2;;4753:10;4748:3;4744:20;4741:1;4734:31;4788:4;4785:1;4778:15;4816:4;4813:1;4806:15;4688:2;4840:18;;4678:186::o;8464:201::-;8606:2;8591:18;;8618:41;8595:9;8641:6;8618:41;:::i;8670:603::-;;8811:2;8840;8829:9;8822:21;8872:6;8866:13;8915:6;8910:2;8899:9;8895:18;8888:34;8940:4;8953:140;8967:6;8964:1;8961:13;8953:140;;;9062:14;;;9058:23;;9052:30;9028:17;;;9047:2;9024:26;9017:66;8982:10;;8953:140;;;9111:6;9108:1;9105:13;9102:2;;;9181:4;9176:2;9167:6;9156:9;9152:22;9148:31;9141:45;9102:2;-1:-1:-1;9257:2:9;9236:15;-1:-1:-1;;9232:29:9;9217:45;;;;9264:2;9213:54;;8791:482;-1:-1:-1;;;8791:482:9:o;11513:399::-;11715:2;11697:21;;;11754:2;11734:18;;;11727:30;11793:34;11788:2;11773:18;;11766:62;-1:-1:-1;;;11859:2:9;11844:18;;11837:33;11902:3;11887:19;;11687:225::o;13791:356::-;13993:2;13975:21;;;14012:18;;;14005:30;14071:34;14066:2;14051:18;;14044:62;14138:2;14123:18;;13965:182::o;14554:413::-;14756:2;14738:21;;;14795:2;14775:18;;;14768:30;14834:34;14829:2;14814:18;;14807:62;-1:-1:-1;;;14900:2:9;14885:18;;14878:47;14957:3;14942:19;;14728:239::o;16547:403::-;16749:2;16731:21;;;16788:2;16768:18;;;16761:30;16827:34;16822:2;16807:18;;16800:62;-1:-1:-1;;;16893:2:9;16878:18;;16871:37;16940:3;16925:19;;16721:229::o;16955:818::-;;17137:3;17126:9;17122:19;17114:27;;17150:48;17188:9;17179:6;17173:13;17150:48;:::i;:::-;17245:4;17237:6;17233:17;17227:24;17287:1;17283;17278:3;17274:11;17270:19;17345:2;17331:12;17327:21;17320:4;17309:9;17305:20;17298:51;17417:2;17409:4;17401:6;17397:17;17391:24;17387:33;17380:4;17369:9;17365:20;17358:63;17489:2;17481:4;17473:6;17469:17;17463:24;17459:33;17452:4;17441:9;17437:20;17430:63;17561:2;17553:4;17545:6;17541:17;17535:24;17531:33;17524:4;17513:9;17509:20;17502:63;;;17621:4;17613:6;17609:17;17603:24;17596:4;17585:9;17581:20;17574:54;17696:6;17688:4;17680:6;17676:17;17670:24;17666:37;17659:4;17648:9;17644:20;17637:67;17760:4;17752:6;17748:17;17742:24;17735:4;17724:9;17720:20;17713:54;17104:669;;;;:::o;18492:128::-;;18563:1;18559:6;18556:1;18553:13;18550:2;;;18569:18;;:::i;:::-;-1:-1:-1;18605:9:9;;18540:80::o;18625:217::-;;18691:1;18681:2;;-1:-1:-1;;;18716:31:9;;18770:4;18767:1;18760:15;18798:4;18723:1;18788:15;18681:2;-1:-1:-1;18827:9:9;;18671:171::o;18847:168::-;;18953:1;18949;18945:6;18941:14;18938:1;18935:21;18930:1;18923:9;18916:17;18912:45;18909:2;;;18960:18;;:::i;:::-;-1:-1:-1;19000:9:9;;18899:116::o;19020:125::-;;19088:1;19085;19082:8;19079:2;;;19093:18;;:::i;:::-;-1:-1:-1;19130:9:9;;19069:76::o;19150:380::-;19235:1;19225:12;;19282:1;19272:12;;;19293:2;;19347:4;19339:6;19335:17;19325:27;;19293:2;19400;19392:6;19389:14;19369:18;19366:38;19363:2;;;19446:10;19441:3;19437:20;19434:1;19427:31;19481:4;19478:1;19471:15;19509:4;19506:1;19499:15;19535:127;19596:10;19591:3;19587:20;19584:1;19577:31;19627:4;19624:1;19617:15;19651:4;19648:1;19641:15;19667:118;19753:5;19746:13;19739:21;19732:5;19729:32;19719:2;;19775:1;19772;19765:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"./FeesCollectors.sol\";\nimport \"./EIP712Verifier.sol\";\n\n/**\n * @notice Payments Contract in ERC20.\n *\n * Upon transfer of ERC20 tokens to this contract, these remain\n * locked until an Operator confirms the success of failure of the\n * asset transfer required to fulfil this payment.\n *\n * If no confirmation is recevied from the operator during the PaymentWindow,\n * all of buyer's received tokens are made available to the buyer for refund.\n *\n * To start a payment, the signatures of both the buyer and the Operator are required.\n * - in the 'relayedPay' method, the Operator is the msg.sender, and the buyerSig is provided;\n * - in the 'pay' method, the buyer is the msg.sender, and the operatorSig is provided.\n *\n * This contract maintains the balances of all users, it does not transfer them automatically.\n * Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender]\n * If a buyer has non-zero local balance at the moment of starting a new payment, \n * the contract reuses it, and only transfers the remainder required (if any) \n * from the external ERC20 contract. \n *\n * Each payment has the following States Machine:\n * - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay/relayedPay\n * - ASSET_TRANSFERRING -> PAID, triggered by assetTransferSuccess\n * - ASSET_TRANSFERRING -> FAILED, triggered implicitly by now > expirationTime\n * - ASSET_TRANSFERRING -> NOT_STARTED, triggered by assetTransferFailure\n * - FAILED -> NOT_STARTED, triggered by refund or refundAndWithdraw\n * - FAILED -> ASSET_TRANSFERRING, triggered by new pay/relayedPay\n *\n * NOTE: To ensure that the a payment process proceeds as expected when the payment starts,\n * upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime}\n * is stored in the payment struct, and used throught the payment, regardless of\n * any possible modifications to the contract's storage.\n *\n */\n\ncontract PaymentsERC20 is FeesCollectors, EIP712Verifier {\n    event PaymentWindow(uint256 window);\n    event NewSeller(address indexed seller);\n    event BuyerRefunded(bytes32 indexed paymentId, address indexed buyer);\n    event Payin(\n        bytes32 indexed paymentId,\n        address indexed buyer,\n        address indexed seller\n    );\n    event Paid(bytes32 paymentId);\n    event Withdraw(address indexed user, uint256 amount);\n\n    address private _erc20;\n    string private _acceptedCurrency;\n    uint256 private _paymentWindow;\n    bool private _isSellerRegistrationRequired;\n    mapping(address => bool) private _isRegisteredSeller;\n    mapping(bytes32 => Payment) private _payments;\n    mapping(address => uint256) private _balanceOf;\n\n    enum States {\n        NotStarted,\n        AssetTransferring,\n        Failed,\n        Paid\n    }\n\n    /**\n     * @notice Main struct stored with every payment.\n     *  feeBPS is the percentage fee expressed in Basis Points (bps), typical in finance\n     *  Examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n     */\n    struct Payment {\n        States state;\n        address buyer;\n        address seller;\n        address operator;\n        address feesCollector;\n        uint256 expirationTime;\n        uint16 feeBPS;\n        uint256 amount;\n    }\n\n    constructor(address erc20Address, string memory currencyDescriptor) {\n        _erc20 = erc20Address;\n        _acceptedCurrency = currencyDescriptor;\n        _paymentWindow = 10 days;\n        _isSellerRegistrationRequired = true;\n    }\n\n    /**\n     * @notice Sets the amount of time available to the operator, after the payment starts,\n     *  to confirm either the success of the failure of the asset transfer. \n     *  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n     * @param window The amount of time available, in seconds.\n     */\n    function setPaymentWindow(uint256 window) external onlyOwner {\n        _paymentWindow = window;\n        emit PaymentWindow(window);\n    }\n\n    /**\n     * @notice Sets whether sellers are required to register in this contract before being,\n     *  able to accept payments. \n     * @param isRequired (bool) if true, registration is required.\n     */\n    function setIsSellerRegistrationRequired(bool isRequired)\n        external\n        onlyOwner\n    {\n        _isSellerRegistrationRequired = isRequired;\n    }\n\n    /**\n     * @notice Registers msg.sender a seller so that he/she can accept payments.\n     */\n    function registerAsSeller() external {\n        _isRegisteredSeller[msg.sender] = true;\n        emit NewSeller(msg.sender);\n    }\n\n    /**\n     * @notice Starts the Payment process via relay-by-operator.\n     *  Executed by an operator, who relays the MetaTX with the buyer's signature.\n     *  The buyer must have approved the amount to this contract before.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the ERC20\n     *  in this contract.\n     * @dev Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param buyerSignature The signature of 'inp' by the buyer\n     */\n    function relayedPay(\n        PaymentInput calldata inp,\n        bytes calldata buyerSignature\n    ) external {\n        require(\n            universeOperator(inp.universeId) == msg.sender,\n            \"operator not authorized for this universeId\"\n        );\n        if (paymentState(inp.paymentId) == States.Failed)\n            _refund(inp.paymentId);\n        checkPaymentInputs(inp);\n        require(\n            verify(inp, buyerSignature, inp.buyer),\n            \"incorrect buyer signature\"\n        );\n        _payments[inp.paymentId] = Payment(\n            States.AssetTransferring,\n            inp.buyer,\n            inp.seller,\n            msg.sender,\n            universeFeesCollector(inp.universeId),\n            block.timestamp + _paymentWindow,\n            inp.feeBPS,\n            inp.amount\n        );\n        (uint256 newFunds, uint256 localFunds) = splitFundingSources(\n            inp.buyer,\n            inp.amount\n        );\n        if (newFunds > 0) {\n            require(\n                IERC20(_erc20).transferFrom(inp.buyer, address(this), newFunds),\n                \"ERC20 transfer failed\"\n            );\n        }\n        _balanceOf[inp.buyer] -= localFunds;\n        emit Payin(inp.paymentId, inp.buyer, inp.seller);\n    }\n\n    /**\n     * @notice Starts Payment process directly by the buyer.\n     *  Executed by the buyer, who relays the MetaTX with the operator's signature.\n     *  The buyer must have approved the amount to this contract before.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the ERC20\n     *  in this contract.\n     * @dev Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param operatorSignature The signature of 'inp' by the operator\n     */\n    function pay(PaymentInput calldata inp, bytes calldata operatorSignature)\n        external\n    {\n        require(\n            msg.sender == inp.buyer,\n            \"only buyer can execute this function\"\n        );\n        if (paymentState(inp.paymentId) == States.Failed)\n            _refund(inp.paymentId);\n        checkPaymentInputs(inp);\n        address operator = universeOperator(inp.universeId);\n        require(\n            verify(inp, operatorSignature, operator),\n            \"incorrect operator signature\"\n        );\n\n        _payments[inp.paymentId] = Payment(\n            States.AssetTransferring,\n            inp.buyer,\n            inp.seller,\n            operator,\n            universeFeesCollector(inp.universeId),\n            block.timestamp + _paymentWindow,\n            inp.feeBPS,\n            inp.amount\n        );\n        (uint256 newFunds, uint256 localFunds) = splitFundingSources(\n            inp.buyer,\n            inp.amount\n        );\n        if (newFunds > 0) {\n            require(\n                IERC20(_erc20).transferFrom(inp.buyer, address(this), newFunds),\n                \"ERC20 transfer failed\"\n            );\n        }\n        _balanceOf[inp.buyer] -= localFunds;\n        emit Payin(inp.paymentId, inp.buyer, inp.seller);\n    }\n\n    /**\n     * @notice Confirms the asset transfer.\n     *  Needs to be executed by the operator.\n     *  Updates balances of seller and feesCollector.\n     * @dev Moves payment to PAID state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function assetTransferSuccess(bytes32 paymentId) external {\n        Payment memory p = _payments[paymentId];\n        require(\n            msg.sender == p.operator,\n            \"only payment operator is authorized\"\n        );\n        require(\n            States.AssetTransferring == paymentState(paymentId),\n            \"payment not initially in asset transferring state\"\n        );\n        _payments[paymentId].state = States.Paid;\n        uint256 feeAmount = computeFeeAmount(p.amount, uint256(p.feeBPS));\n        _balanceOf[p.seller] += (p.amount - feeAmount);\n        _balanceOf[p.feesCollector] += feeAmount;\n        emit Paid(paymentId);\n    }\n\n    /**\n     * @notice Confirms the failure of asset transfer and refunds buyer.\n     *  Needs to be executed by the operator.\n     *  Buyer's balance is updated, allowing explicit withdrawal.\n     *  It resets all data related to this payment.\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function assetTransferFailed(bytes32 paymentId) external {\n        require(\n            msg.sender == _payments[paymentId].operator,\n            \"only payment operator is authorized\"\n        );\n        require(\n            States.AssetTransferring == paymentState(paymentId),\n            \"payment not initially in asset transferring state\"\n        );\n        _refund(paymentId);\n    }\n\n    /**\n     * @notice Moves buyer's provided funds to buyer's balance.\n     *  Anybody can call this function.\n     *  Requires current state == FAILED to proceed.\n     *  After updating buyer's balance, he/she can later withdraw.\n     *  It resets all data related to this payment.\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refund(bytes32 paymentId) external {\n        require(\n            paymentState(paymentId) == States.Failed,\n            \"refund requires payment in failed state\"\n        );\n        _refund(paymentId);\n    }\n\n    /**\n     * @notice Exectutes refund and withdraw in one transaction.\n     *  Needs to be called by buyer.\n     *  All of buyer's balance in the contract is withdrawn,\n     *  not only the part that was locked in this particular paymentId\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refundAndWithdraw(bytes32 paymentId) external {\n        require(\n            paymentState(paymentId) == States.Failed,\n            \"refund requires payment in failed state\"\n        );\n        _refund(paymentId);\n        _withdraw();\n    }\n\n    /**\n     * @notice Transfers ERC20 avaliable in this\n     *  contract's balanceOf[msg.sender] to msg.sender\n     */\n    function withdraw() external {\n        _withdraw();\n    }\n\n    // PRIVATE FUNCTIONS\n\n    /**\n     * @dev Executes refund, moves to NOT_STARTED state\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function _refund(bytes32 paymentId) private {\n        Payment memory p = _payments[paymentId];\n        _balanceOf[p.buyer] += p.amount;\n        delete _payments[paymentId];\n        emit BuyerRefunded(paymentId, p.buyer);\n    }\n\n    /**\n     * @dev (private) Transfers ERC20 avaliable in this\n     *  contract's balanceOf[msg.sender] to msg.sender\n     *  Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     */\n    function _withdraw() private {\n        uint256 amount = _balanceOf[msg.sender];\n        require(amount > 0, \"cannot withdraw: balance is zero\");\n        _balanceOf[msg.sender] = 0;\n        IERC20(_erc20).transfer(msg.sender, amount);\n        emit Withdraw(msg.sender, amount);\n    }\n\n    // PUBLIC VIEW FUNCTIONS\n\n    /**\n     * @notice Returns true if sellers need to be registered to be able to accept payments\n     */    \n    function isSellerRegistrationRequired() external view returns (bool) {\n        return _isSellerRegistrationRequired;\n    }\n\n    /**\n     * @notice Returns true if the address provided is a registered seller\n     * @param addr the address that is queried\n     * @return isRegistered as seller\n     */    \n    function isRegisteredSeller(address addr) external view returns (bool) {\n        return _isRegisteredSeller[addr];\n    }\n\n    /**\n     * @notice Returns the address of the ERC20 contract from which\n     *  tokens are accepted for payments\n     */\n    function erc20() external view returns (address) {\n        return _erc20;\n    }\n\n    /**\n     * @notice Returns the local ERC20 balance of address that is stored in this\n     *  contract, and hence, available for withdrawal.\n     * @param addr the address that is queried\n     * @return the local balance\n     */\n    function balanceOf(address addr) external view returns (uint256) {\n        return _balanceOf[addr];\n    }\n\n    /**\n     * @notice Returns ERC20 balance of address in the ERC20 contract\n     * @param addr the address that is queried\n     * @return the balance in the external ERC20 contract\n     */\n    function erc20BalanceOf(address addr) external view returns (uint256) {\n        return IERC20(_erc20).balanceOf(addr);\n    }\n\n    /**\n     * @notice Returns the allowance that the buyer has approved\n     *  directly in the ERC20 contract in favour of this contract.\n     * @param buyer the address of the buyer\n     * @return the amount allowed by buyer\n     */\n    function allowance(address buyer) public view returns (uint256) {\n        return IERC20(_erc20).allowance(buyer, address(this));\n    }\n\n    /**\n     * @notice Returns all data stored in a payment\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the struct stored for the payment\n     */\n    function paymentInfo(bytes32 paymentId)\n        external\n        view\n        returns (Payment memory)\n    {\n        return _payments[paymentId];\n    }\n\n    /**\n     * @notice Returns the state of a payment.\n     *  It maps 1-to-1 with the stored variable, with the exeption of\n     *  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the struct stored for the payment\n     */\n    function paymentState(bytes32 paymentId) public view returns (States) {\n        States state = _payments[paymentId].state;\n        if (\n            state == States.AssetTransferring &&\n            block.timestamp > _payments[paymentId].expirationTime\n        ) return States.Failed;\n        return state;\n    }\n\n    /**\n     * @notice Returns the amount of seconds that a payment\n     *  can remain in ASSET_TRANSFERRING state without positive\n     *  or negative confirmation by the operator\n     * @return the payment window\n     */\n    function paymentWindow() external view returns (uint256) {\n        return _paymentWindow;\n    }\n\n    /**\n     * @notice Returns a descriptor about the currency that this contract accepts\n     * @return the string describing the currency\n     */\n    function acceptedCurrency() external view returns (string memory) {\n        return _acceptedCurrency;\n    }\n\n    /**\n     * @notice Returns true if the 'amount' required for a payment is available to this contract.\n     *  In more detail: returns true if the sum of the buyer's local balance in this contract,\n     *  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n     * @return a bool, true is enough available\n     */\n    function enoughFundsAvailable(address buyer, uint256 amount)\n        public\n        view\n        returns (bool)\n    {\n        return maxFundsAvailable(buyer) >= amount;\n    }\n\n    /**\n     * @notice Returns the maximum amount of funds available to a buyer\n     *  In more detail: returns the sum of the buyer's local balance in this contract,\n     *  plus the funds available and approved in the ERC20 contract.\n     * @return the max funds available\n     */\n    function maxFundsAvailable(address buyer) public view returns (uint256) {\n        uint256 approved = allowance(buyer);\n        uint256 erc20Balance = IERC20(_erc20).balanceOf(buyer);\n        uint256 externalAvailable = (approved < erc20Balance)\n            ? approved\n            : erc20Balance;\n        return _balanceOf[buyer] + externalAvailable;\n    }\n\n    /**\n     * @notice Splits the funds required to pay 'amount' into two source:\n     *  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n     *  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n     * @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n     * @return localFunds - the amount of ERC20 local funds required. \n     */\n    function splitFundingSources(address buyer, uint256 amount)\n        public\n        view\n        returns (uint256 externalFunds, uint256 localFunds)\n    {\n        uint256 localBalance = _balanceOf[buyer];\n        localFunds = (amount > localBalance) ? localBalance : amount;\n        externalFunds = (amount > localBalance) ? amount - localBalance : 0;\n    }\n\n    /**\n     * @notice Reverts unless the requirements for a PaymentInput that\n     *  are common to both pay and relayedPay are fulfilled.\n     */\n    function checkPaymentInputs(PaymentInput calldata inp) public view {\n        require(inp.feeBPS <= 10000, \"fee cannot be larger than 100 percent\");\n        require(\n            paymentState(inp.paymentId) == States.NotStarted,\n            \"payment in incorrect curent state\"\n        );\n        require(block.timestamp <= inp.validUntil, \"payment deadline expired\");\n        if (_isSellerRegistrationRequired)\n            require(_isRegisteredSeller[inp.seller], \"seller not registered\");\n        require(\n            enoughFundsAvailable(inp.buyer, inp.amount),\n            \"not enough funds available for this buyer\"\n        );\n    }\n\n    // PURE FUNCTIONS\n\n    /**\n     * @notice Safe compute fee amount\n     *  Returns a values that is guaranteed to be less or equal to total provided amount\n     *  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n     *  when receiving a payment.\n     * @return the fee amount\n     */\n    function computeFeeAmount(uint256 amount, uint256 feeBPS)\n        public\n        pure\n        returns (uint256)\n    {\n        uint256 feeAmount = (amount * feeBPS) / 10000;\n        return (feeAmount <= amount) ? feeAmount : amount;\n    }\n}\n",
  "sourcePath": "/Users/toni/gits/cryptoPayments/contracts/Payments/PaymentsERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/Payments/PaymentsERC20.sol",
    "exportedSymbols": {
      "Context": [
        210
      ],
      "ECDSA": [
        354
      ],
      "EIP712": [
        492
      ],
      "EIP712Verifier": [
        576
      ],
      "FeesCollectors": [
        700
      ],
      "IERC20": [
        187
      ],
      "Operators": [
        824
      ],
      "Ownable": [
        109
      ],
      "PaymentsERC20": [
        1797
      ]
    },
    "id": 1798,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 826,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 827,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1798,
        "sourceUnit": 188,
        "src": "58:64:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 828,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1798,
        "sourceUnit": 701,
        "src": "123:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 829,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1798,
        "sourceUnit": 577,
        "src": "154:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 831,
              "name": "FeesCollectors",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 700,
              "src": "2085:14:8"
            },
            "id": 832,
            "nodeType": "InheritanceSpecifier",
            "src": "2085:14:8"
          },
          {
            "baseName": {
              "id": 833,
              "name": "EIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 576,
              "src": "2101:14:8"
            },
            "id": 834,
            "nodeType": "InheritanceSpecifier",
            "src": "2101:14:8"
          }
        ],
        "contractDependencies": [
          109,
          210,
          492,
          576,
          700,
          824
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 830,
          "nodeType": "StructuredDocumentation",
          "src": "186:1871:8",
          "text": " @notice Payments Contract in ERC20.\n Upon transfer of ERC20 tokens to this contract, these remain\n locked until an Operator confirms the success of failure of the\n asset transfer required to fulfil this payment.\n If no confirmation is recevied from the operator during the PaymentWindow,\n all of buyer's received tokens are made available to the buyer for refund.\n To start a payment, the signatures of both the buyer and the Operator are required.\n - in the 'relayedPay' method, the Operator is the msg.sender, and the buyerSig is provided;\n - in the 'pay' method, the buyer is the msg.sender, and the operatorSig is provided.\n This contract maintains the balances of all users, it does not transfer them automatically.\n Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender]\n If a buyer has non-zero local balance at the moment of starting a new payment, \n the contract reuses it, and only transfers the remainder required (if any) \n from the external ERC20 contract. \n Each payment has the following States Machine:\n - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay/relayedPay\n - ASSET_TRANSFERRING -> PAID, triggered by assetTransferSuccess\n - ASSET_TRANSFERRING -> FAILED, triggered implicitly by now > expirationTime\n - ASSET_TRANSFERRING -> NOT_STARTED, triggered by assetTransferFailure\n - FAILED -> NOT_STARTED, triggered by refund or refundAndWithdraw\n - FAILED -> ASSET_TRANSFERRING, triggered by new pay/relayedPay\n NOTE: To ensure that the a payment process proceeds as expected when the payment starts,\n upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime}\n is stored in the payment struct, and used throught the payment, regardless of\n any possible modifications to the contract's storage."
        },
        "fullyImplemented": true,
        "id": 1797,
        "linearizedBaseContracts": [
          1797,
          576,
          492,
          700,
          824,
          109,
          210
        ],
        "name": "PaymentsERC20",
        "nameLocation": "2068:13:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 838,
            "name": "PaymentWindow",
            "nameLocation": "2128:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "2150:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "2142:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2141:16:8"
            },
            "src": "2122:36:8"
          },
          {
            "anonymous": false,
            "id": 842,
            "name": "NewSeller",
            "nameLocation": "2169:9:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2195:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "2179:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2178:24:8"
            },
            "src": "2163:40:8"
          },
          {
            "anonymous": false,
            "id": 848,
            "name": "BuyerRefunded",
            "nameLocation": "2214:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2244:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "2228:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2228:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2271:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "2255:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2227:50:8"
            },
            "src": "2208:70:8"
          },
          {
            "anonymous": false,
            "id": 856,
            "name": "Payin",
            "nameLocation": "2289:5:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2320:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "2304:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 852,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2355:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "2339:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 854,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2386:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "2370:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2294:104:8"
            },
            "src": "2283:116:8"
          },
          {
            "anonymous": false,
            "id": 860,
            "name": "Paid",
            "nameLocation": "2410:4:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2423:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "2415:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2415:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2414:19:8"
            },
            "src": "2404:30:8"
          },
          {
            "anonymous": false,
            "id": 866,
            "name": "Withdraw",
            "nameLocation": "2445:8:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2470:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "2454:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2484:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "2476:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2476:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:38:8"
            },
            "src": "2439:53:8"
          },
          {
            "constant": false,
            "id": 868,
            "mutability": "mutable",
            "name": "_erc20",
            "nameLocation": "2514:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2498:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 867,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2498:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 870,
            "mutability": "mutable",
            "name": "_acceptedCurrency",
            "nameLocation": "2541:17:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2526:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 869,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2526:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 872,
            "mutability": "mutable",
            "name": "_paymentWindow",
            "nameLocation": "2580:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2564:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 871,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2564:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 874,
            "mutability": "mutable",
            "name": "_isSellerRegistrationRequired",
            "nameLocation": "2613:29:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2600:42:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 873,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2600:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 878,
            "mutability": "mutable",
            "name": "_isRegisteredSeller",
            "nameLocation": "2681:19:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2648:52:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 877,
              "keyType": {
                "id": 875,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2656:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2648:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 876,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2667:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 883,
            "mutability": "mutable",
            "name": "_payments",
            "nameLocation": "2742:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2706:45:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
              "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment)"
            },
            "typeName": {
              "id": 882,
              "keyType": {
                "id": 879,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2714:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2706:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment)"
              },
              "valueType": {
                "id": 881,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 880,
                  "name": "Payment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 910,
                  "src": "2725:7:8"
                },
                "referencedDeclaration": 910,
                "src": "2725:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Payment_$910_storage_ptr",
                  "typeString": "struct PaymentsERC20.Payment"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 887,
            "mutability": "mutable",
            "name": "_balanceOf",
            "nameLocation": "2793:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2757:46:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 886,
              "keyType": {
                "id": 884,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2765:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2757:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 885,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2776:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "PaymentsERC20.States",
            "id": 892,
            "members": [
              {
                "id": 888,
                "name": "NotStarted",
                "nameLocation": "2832:10:8",
                "nodeType": "EnumValue",
                "src": "2832:10:8"
              },
              {
                "id": 889,
                "name": "AssetTransferring",
                "nameLocation": "2852:17:8",
                "nodeType": "EnumValue",
                "src": "2852:17:8"
              },
              {
                "id": 890,
                "name": "Failed",
                "nameLocation": "2879:6:8",
                "nodeType": "EnumValue",
                "src": "2879:6:8"
              },
              {
                "id": 891,
                "name": "Paid",
                "nameLocation": "2895:4:8",
                "nodeType": "EnumValue",
                "src": "2895:4:8"
              }
            ],
            "name": "States",
            "nameLocation": "2815:6:8",
            "nodeType": "EnumDefinition",
            "src": "2810:95:8"
          },
          {
            "canonicalName": "PaymentsERC20.Payment",
            "id": 910,
            "members": [
              {
                "constant": false,
                "id": 895,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "3170:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3163:12:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$892",
                  "typeString": "enum PaymentsERC20.States"
                },
                "typeName": {
                  "id": 894,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 893,
                    "name": "States",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 892,
                    "src": "3163:6:8"
                  },
                  "referencedDeclaration": 892,
                  "src": "3163:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$892",
                    "typeString": "enum PaymentsERC20.States"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 897,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "3193:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3185:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 896,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3185:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 899,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "3216:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3208:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 898,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3208:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 901,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "3240:8:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3232:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 900,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3232:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 903,
                "mutability": "mutable",
                "name": "feesCollector",
                "nameLocation": "3266:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3258:21:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 902,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3258:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 905,
                "mutability": "mutable",
                "name": "expirationTime",
                "nameLocation": "3297:14:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3289:22:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 904,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3289:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 907,
                "mutability": "mutable",
                "name": "feeBPS",
                "nameLocation": "3328:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3321:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 906,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "3321:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 909,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3352:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3344:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 908,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3344:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nameLocation": "3145:7:8",
            "nodeType": "StructDefinition",
            "scope": 1797,
            "src": "3138:227:8",
            "visibility": "public"
          },
          {
            "body": {
              "id": 933,
              "nodeType": "Block",
              "src": "3439:166:8",
              "statements": [
                {
                  "expression": {
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 917,
                      "name": "_erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 868,
                      "src": "3449:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 918,
                      "name": "erc20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 912,
                      "src": "3458:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3449:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:21:8"
                },
                {
                  "expression": {
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 921,
                      "name": "_acceptedCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "3480:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 922,
                      "name": "currencyDescriptor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "3500:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3480:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "3480:38:8"
                },
                {
                  "expression": {
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 925,
                      "name": "_paymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "3528:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3545:7:8",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_864000_by_1",
                        "typeString": "int_const 864000"
                      },
                      "value": "10"
                    },
                    "src": "3528:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:24:8"
                },
                {
                  "expression": {
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 929,
                      "name": "_isSellerRegistrationRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "3562:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3594:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3562:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:36:8"
                }
              ]
            },
            "id": 934,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "3391:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "3383:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3383:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "currencyDescriptor",
                  "nameLocation": "3419:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "3405:32:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3382:56:8"
            },
            "returnParameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3439:0:8"
            },
            "scope": 1797,
            "src": "3371:234:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 950,
              "nodeType": "Block",
              "src": "4002:76:8",
              "statements": [
                {
                  "expression": {
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 942,
                      "name": "_paymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "4012:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 943,
                      "name": "window",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "4029:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4012:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "4012:23:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 947,
                        "name": "window",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "4064:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 946,
                      "name": "PaymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "4050:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4050:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "EmitStatement",
                  "src": "4045:26:8"
                }
              ]
            },
            "documentation": {
              "id": 935,
              "nodeType": "StructuredDocumentation",
              "src": "3611:325:8",
              "text": " @notice Sets the amount of time available to the operator, after the payment starts,\n  to confirm either the success of the failure of the asset transfer. \n  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n @param window The amount of time available, in seconds."
            },
            "functionSelector": "982ed326",
            "id": 951,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 940,
                "modifierName": {
                  "id": 939,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "3992:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3992:9:8"
              }
            ],
            "name": "setPaymentWindow",
            "nameLocation": "3950:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "3975:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "3967:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3966:16:8"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:8"
            },
            "scope": 1797,
            "src": "3941:137:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "4390:59:8",
              "statements": [
                {
                  "expression": {
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 959,
                      "name": "_isSellerRegistrationRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "4400:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 960,
                      "name": "isRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "4432:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4400:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "4400:42:8"
                }
              ]
            },
            "documentation": {
              "id": 952,
              "nodeType": "StructuredDocumentation",
              "src": "4084:204:8",
              "text": " @notice Sets whether sellers are required to register in this contract before being,\n  able to accept payments. \n @param isRequired (bool) if true, registration is required."
            },
            "functionSelector": "1a29b6ab",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 957,
                "modifierName": {
                  "id": 956,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "4376:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4376:9:8"
              }
            ],
            "name": "setIsSellerRegistrationRequired",
            "nameLocation": "4302:31:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "isRequired",
                  "nameLocation": "4339:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "4334:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4333:17:8"
            },
            "returnParameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4390:0:8"
            },
            "scope": 1797,
            "src": "4293:156:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "4589:91:8",
              "statements": [
                {
                  "expression": {
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 968,
                        "name": "_isRegisteredSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "4599:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 971,
                      "indexExpression": {
                        "expression": {
                          "id": 969,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4619:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4619:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4599:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4633:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4599:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "4599:38:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 976,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4662:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4662:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 975,
                      "name": "NewSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "4652:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4652:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "EmitStatement",
                  "src": "4647:26:8"
                }
              ]
            },
            "documentation": {
              "id": 965,
              "nodeType": "StructuredDocumentation",
              "src": "4455:92:8",
              "text": " @notice Registers msg.sender a seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "4561:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4577:2:8"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4589:0:8"
            },
            "scope": 1797,
            "src": "4552:128:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "5490:1133:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 992,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "5538:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                  "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 515,
                              "src": "5538:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 991,
                            "name": "universeOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "5521:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5521:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 995,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5557:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5557:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5521:46:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f70657261746f72206e6f7420617574686f72697a656420666f72207468697320756e6976657273654964",
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5581:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8",
                          "typeString": "literal_string \"operator not authorized for this universeId\""
                        },
                        "value": "operator not authorized for this universeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8",
                          "typeString": "literal_string \"operator not authorized for this universeId\""
                        }
                      ],
                      "id": 990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5500:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5500:136:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:136:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1002,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5663:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 509,
                          "src": "5663:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1001,
                        "name": "paymentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "5650:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                          "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5650:27:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1005,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "5681:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                          "typeString": "type(enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 890,
                      "src": "5681:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "src": "5650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1013,
                  "nodeType": "IfStatement",
                  "src": "5646:84:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1009,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5716:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 509,
                          "src": "5716:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1008,
                        "name": "_refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "5708:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5708:22:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1012,
                    "nodeType": "ExpressionStatement",
                    "src": "5708:22:8"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1015,
                        "name": "inp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "5759:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                          "typeString": "struct EIP712Verifier.PaymentInput calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                          "typeString": "struct EIP712Verifier.PaymentInput calldata"
                        }
                      ],
                      "id": 1014,
                      "name": "checkPaymentInputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "5740:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$522_calldata_ptr_$returns$__$",
                        "typeString": "function (struct EIP712Verifier.PaymentInput calldata) view"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "5740:23:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1020,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5801:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          {
                            "id": 1021,
                            "name": "buyerSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 987,
                            "src": "5806:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 1022,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 985,
                              "src": "5822:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                "typeString": "struct EIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 519,
                            "src": "5822:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1019,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "5794:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$522_calldata_ptr_$_t_bytes_calldata_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct EIP712Verifier.PaymentInput calldata,bytes calldata,address) view returns (bool)"
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5794:38:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206275796572207369676e6174757265",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5846:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b",
                          "typeString": "literal_string \"incorrect buyer signature\""
                        },
                        "value": "incorrect buyer signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b",
                          "typeString": "literal_string \"incorrect buyer signature\""
                        }
                      ],
                      "id": 1018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5773:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5773:110:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "5773:110:8"
                },
                {
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1028,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "5893:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                          "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1031,
                      "indexExpression": {
                        "expression": {
                          "id": 1029,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "5903:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 509,
                        "src": "5903:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5893:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_storage",
                        "typeString": "struct PaymentsERC20.Payment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1033,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "5941:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "5941:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        {
                          "expression": {
                            "id": 1035,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5979:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 519,
                          "src": "5979:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1037,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6002:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 521,
                          "src": "6002:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1039,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6026:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6026:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1042,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "6072:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                  "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 515,
                              "src": "6072:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1041,
                            "name": "universeFeesCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "6050:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6050:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1045,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "6101:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6101:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1047,
                            "name": "_paymentWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "6119:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6101:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1049,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6147:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 513,
                          "src": "6147:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 1051,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6171:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 511,
                          "src": "6171:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1032,
                        "name": "Payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "5920:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Payment_$910_storage_ptr_$",
                          "typeString": "type(struct PaymentsERC20.Payment storage pointer)"
                        }
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5920:271:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                        "typeString": "struct PaymentsERC20.Payment memory"
                      }
                    },
                    "src": "5893:298:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:298:8"
                },
                {
                  "assignments": [
                    1057,
                    1059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1057,
                      "mutability": "mutable",
                      "name": "newFunds",
                      "nameLocation": "6210:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "6202:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1056,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6202:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1059,
                      "mutability": "mutable",
                      "name": "localFunds",
                      "nameLocation": "6228:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "6220:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6220:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1066,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1061,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6275:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "6275:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1063,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6298:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 511,
                        "src": "6298:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1060,
                      "name": "splitFundingSources",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1712,
                      "src": "6242:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6242:76:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6201:117:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1067,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "6332:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6343:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6332:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1087,
                  "nodeType": "IfStatement",
                  "src": "6328:186:8",
                  "trueBody": {
                    "id": 1086,
                    "nodeType": "Block",
                    "src": "6346:168:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1075,
                                    "name": "inp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 985,
                                    "src": "6413:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                      "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                    }
                                  },
                                  "id": 1076,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 519,
                                  "src": "6413:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1079,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "6432:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    ],
                                    "id": 1078,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6424:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1077,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6424:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6424:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1081,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1057,
                                  "src": "6439:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1072,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 868,
                                      "src": "6392:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1071,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "6385:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6385:14:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$187",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 168,
                                "src": "6385:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6385:63:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6466:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1070,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6360:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6360:143:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1085,
                        "nodeType": "ExpressionStatement",
                        "src": "6360:143:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1088,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "6523:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1091,
                      "indexExpression": {
                        "expression": {
                          "id": 1089,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6534:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "6534:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6523:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1092,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "6548:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6523:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "6523:35:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1096,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6579:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 509,
                        "src": "6579:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1098,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6594:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "6594:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1100,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6605:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "6605:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1095,
                      "name": "Payin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "6573:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6573:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "EmitStatement",
                  "src": "6568:48:8"
                }
              ]
            },
            "documentation": {
              "id": 982,
              "nodeType": "StructuredDocumentation",
              "src": "4686:690:8",
              "text": " @notice Starts the Payment process via relay-by-operator.\n  Executed by an operator, who relays the MetaTX with the buyer's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param buyerSignature The signature of 'inp' by the buyer"
            },
            "functionSelector": "06a212ae",
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "relayedPay",
            "nameLocation": "5390:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "5432:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "5410:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                    "typeString": "struct EIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 983,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 522,
                      "src": "5410:12:8"
                    },
                    "referencedDeclaration": 522,
                    "src": "5410:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$522_storage_ptr",
                      "typeString": "struct EIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "mutability": "mutable",
                  "name": "buyerSignature",
                  "nameLocation": "5460:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "5445:29:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5445:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5400:80:8"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5490:0:8"
            },
            "scope": 1797,
            "src": "5381:1242:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1231,
              "nodeType": "Block",
              "src": "7422:1168:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7453:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7453:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1117,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7467:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 519,
                          "src": "7467:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7453:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792062757965722063616e206578656375746520746869732066756e6374696f6e",
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7490:38:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3",
                          "typeString": "literal_string \"only buyer can execute this function\""
                        },
                        "value": "only buyer can execute this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3",
                          "typeString": "literal_string \"only buyer can execute this function\""
                        }
                      ],
                      "id": 1114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7432:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7432:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "7432:106:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1124,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7565:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 509,
                          "src": "7565:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1123,
                        "name": "paymentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "7552:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                          "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7552:27:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1127,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "7583:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                          "typeString": "type(enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 890,
                      "src": "7583:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "src": "7552:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1135,
                  "nodeType": "IfStatement",
                  "src": "7548:84:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1131,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7618:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 509,
                          "src": "7618:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1130,
                        "name": "_refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "7610:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7610:22:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1134,
                    "nodeType": "ExpressionStatement",
                    "src": "7610:22:8"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1137,
                        "name": "inp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "7661:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                          "typeString": "struct EIP712Verifier.PaymentInput calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                          "typeString": "struct EIP712Verifier.PaymentInput calldata"
                        }
                      ],
                      "id": 1136,
                      "name": "checkPaymentInputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "7642:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$522_calldata_ptr_$returns$__$",
                        "typeString": "function (struct EIP712Verifier.PaymentInput calldata) view"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7642:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "7642:23:8"
                },
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "7683:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "7675:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1140,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7675:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1146,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1143,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "7711:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "universeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 515,
                        "src": "7711:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1142,
                      "name": "universeOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 823,
                      "src": "7694:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7694:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7675:51:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1149,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7764:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          {
                            "id": 1150,
                            "name": "operatorSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "7769:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 1151,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "7788:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1148,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "7757:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$522_calldata_ptr_$_t_bytes_calldata_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct EIP712Verifier.PaymentInput calldata,bytes calldata,address) view returns (bool)"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7757:40:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206f70657261746f72207369676e6174757265",
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7811:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c",
                          "typeString": "literal_string \"incorrect operator signature\""
                        },
                        "value": "incorrect operator signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c",
                          "typeString": "literal_string \"incorrect operator signature\""
                        }
                      ],
                      "id": 1147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7736:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7736:115:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "7736:115:8"
                },
                {
                  "expression": {
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1156,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "7862:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                          "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1159,
                      "indexExpression": {
                        "expression": {
                          "id": 1157,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "7872:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 509,
                        "src": "7872:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7862:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_storage",
                        "typeString": "struct PaymentsERC20.Payment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1161,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "7910:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "7910:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        {
                          "expression": {
                            "id": 1163,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7948:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 519,
                          "src": "7948:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1165,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7971:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 521,
                          "src": "7971:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1167,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "7995:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1169,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1109,
                                "src": "8039:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                  "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 515,
                              "src": "8039:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1168,
                            "name": "universeFeesCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "8017:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8017:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1172,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "8068:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8068:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1174,
                            "name": "_paymentWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "8086:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8068:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1176,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "8114:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 513,
                          "src": "8114:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 1178,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "8138:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 511,
                          "src": "8138:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1160,
                        "name": "Payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "7889:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Payment_$910_storage_ptr_$",
                          "typeString": "type(struct PaymentsERC20.Payment storage pointer)"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7889:269:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                        "typeString": "struct PaymentsERC20.Payment memory"
                      }
                    },
                    "src": "7862:296:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "7862:296:8"
                },
                {
                  "assignments": [
                    1184,
                    1186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "newFunds",
                      "nameLocation": "8177:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "8169:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8169:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "localFunds",
                      "nameLocation": "8195:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "8187:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8187:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1193,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1188,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8242:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "8242:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1190,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8265:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 511,
                        "src": "8265:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1187,
                      "name": "splitFundingSources",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1712,
                      "src": "8209:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8209:76:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8168:117:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1194,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1184,
                      "src": "8299:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8310:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8299:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1214,
                  "nodeType": "IfStatement",
                  "src": "8295:186:8",
                  "trueBody": {
                    "id": 1213,
                    "nodeType": "Block",
                    "src": "8313:168:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1202,
                                    "name": "inp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1109,
                                    "src": "8380:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                      "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                    }
                                  },
                                  "id": 1203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 519,
                                  "src": "8380:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1206,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "8399:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    ],
                                    "id": 1205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8391:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1204,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8391:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8391:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1208,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1184,
                                  "src": "8406:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1199,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 868,
                                      "src": "8359:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1198,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "8352:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8352:14:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$187",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 168,
                                "src": "8352:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8352:63:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8433:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1197,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "8327:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8327:143:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1212,
                        "nodeType": "ExpressionStatement",
                        "src": "8327:143:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1215,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "8490:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1218,
                      "indexExpression": {
                        "expression": {
                          "id": 1216,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8501:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "8501:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8490:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1219,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1186,
                      "src": "8515:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8490:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1221,
                  "nodeType": "ExpressionStatement",
                  "src": "8490:35:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1223,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8546:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 509,
                        "src": "8546:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1225,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8561:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "8561:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1227,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8572:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "8572:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1222,
                      "name": "Payin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "8540:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8540:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "EmitStatement",
                  "src": "8535:48:8"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "6629:693:8",
              "text": " @notice Starts Payment process directly by the buyer.\n  Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 1232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "7336:3:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "7362:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "7340:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                    "typeString": "struct EIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1107,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 522,
                      "src": "7340:12:8"
                    },
                    "referencedDeclaration": 522,
                    "src": "7340:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$522_storage_ptr",
                      "typeString": "struct EIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "7382:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "7367:32:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7367:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7339:61:8"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7422:0:8"
            },
            "scope": 1797,
            "src": "7327:1263:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1306,
              "nodeType": "Block",
              "src": "8922:590:8",
              "statements": [
                {
                  "assignments": [
                    1240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1240,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "8947:1:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1306,
                      "src": "8932:16:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                        "typeString": "struct PaymentsERC20.Payment"
                      },
                      "typeName": {
                        "id": 1239,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1238,
                          "name": "Payment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 910,
                          "src": "8932:7:8"
                        },
                        "referencedDeclaration": 910,
                        "src": "8932:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$910_storage_ptr",
                          "typeString": "struct PaymentsERC20.Payment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1244,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1241,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "8951:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                        "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1243,
                    "indexExpression": {
                      "id": 1242,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "8961:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8951:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8932:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1246,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9002:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9002:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1248,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1240,
                            "src": "9016:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                              "typeString": "struct PaymentsERC20.Payment memory"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 901,
                          "src": "9016:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9002:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72697a6564",
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9040:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        },
                        "value": "only payment operator is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        }
                      ],
                      "id": 1245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8981:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8981:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "8981:106:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1255,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "9118:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "9118:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1258,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "9159:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1257,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "9146:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9146:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "9118:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207472616e7366657272696e67207374617465",
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9183:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        },
                        "value": "payment not initially in asset transferring state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        }
                      ],
                      "id": 1254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9097:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9097:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "9097:147:8"
                },
                {
                  "expression": {
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1264,
                          "name": "_payments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 883,
                          "src": "9254:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                            "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                          }
                        },
                        "id": 1266,
                        "indexExpression": {
                          "id": 1265,
                          "name": "paymentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1235,
                          "src": "9264:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9254:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$910_storage",
                          "typeString": "struct PaymentsERC20.Payment storage ref"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 895,
                      "src": "9254:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1268,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "9283:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                          "typeString": "type(enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Paid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 891,
                      "src": "9283:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "src": "9254:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "9254:40:8"
                },
                {
                  "assignments": [
                    1273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1273,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "9312:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1306,
                      "src": "9304:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9304:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1283,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1275,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "9341:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 909,
                        "src": "9341:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1279,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1240,
                              "src": "9359:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                                "typeString": "struct PaymentsERC20.Payment memory"
                              }
                            },
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeBPS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 907,
                            "src": "9359:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9351:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1277,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9351:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9351:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1274,
                      "name": "computeFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1796,
                      "src": "9324:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9324:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9304:65:8"
                },
                {
                  "expression": {
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1284,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "9379:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1287,
                      "indexExpression": {
                        "expression": {
                          "id": 1285,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "9390:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 899,
                        "src": "9390:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9379:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1288,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1240,
                              "src": "9404:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                                "typeString": "struct PaymentsERC20.Payment memory"
                              }
                            },
                            "id": 1289,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 909,
                            "src": "9404:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1290,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "9415:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9404:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1292,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9403:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9379:46:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "9379:46:8"
                },
                {
                  "expression": {
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1295,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "9435:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1298,
                      "indexExpression": {
                        "expression": {
                          "id": 1296,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "9446:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feesCollector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 903,
                        "src": "9446:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9435:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1299,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "9466:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9435:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "9435:40:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1303,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "9495:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1302,
                      "name": "Paid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "9490:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9490:15:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1305,
                  "nodeType": "EmitStatement",
                  "src": "9485:20:8"
                }
              ]
            },
            "documentation": {
              "id": 1233,
              "nodeType": "StructuredDocumentation",
              "src": "8596:263:8",
              "text": " @notice Confirms the asset transfer.\n  Needs to be executed by the operator.\n  Updates balances of seller and feesCollector.\n @dev Moves payment to PAID state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "b3080298",
            "id": 1307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferSuccess",
            "nameLocation": "8873:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "8902:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1307,
                  "src": "8894:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8894:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8893:19:8"
            },
            "returnParameters": {
              "id": 1237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8922:0:8"
            },
            "scope": 1797,
            "src": "8864:648:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1338,
              "nodeType": "Block",
              "src": "9943:327:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1314,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9974:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9974:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1316,
                              "name": "_payments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 883,
                              "src": "9988:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                                "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                              }
                            },
                            "id": 1318,
                            "indexExpression": {
                              "id": 1317,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "9998:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9988:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$910_storage",
                              "typeString": "struct PaymentsERC20.Payment storage ref"
                            }
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 901,
                          "src": "9988:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9974:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72697a6564",
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10031:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        },
                        "value": "only payment operator is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        }
                      ],
                      "id": 1313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9953:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9953:125:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "9953:125:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1325,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "10109:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "10109:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1328,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "10150:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1327,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "10137:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10137:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "10109:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207472616e7366657272696e67207374617465",
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10174:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        },
                        "value": "payment not initially in asset transferring state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10088:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10088:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "10088:147:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1335,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "10253:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1334,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "10245:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10245:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "10245:18:8"
                }
              ]
            },
            "documentation": {
              "id": 1308,
              "nodeType": "StructuredDocumentation",
              "src": "9518:363:8",
              "text": " @notice Confirms the failure of asset transfer and refunds buyer.\n  Needs to be executed by the operator.\n  Buyer's balance is updated, allowing explicit withdrawal.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2ce10fcf",
            "id": 1339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferFailed",
            "nameLocation": "9895:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9923:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "9915:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9915:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9914:19:8"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9943:0:8"
            },
            "scope": 1797,
            "src": "9886:384:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "10727:171:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1347,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1342,
                              "src": "10771:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1346,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "10758:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10758:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1349,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "10785:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Failed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 890,
                          "src": "10785:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "10758:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c6564207374617465",
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10812:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        },
                        "value": "refund requires payment in failed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        }
                      ],
                      "id": 1345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10737:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10737:126:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1354,
                  "nodeType": "ExpressionStatement",
                  "src": "10737:126:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1356,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1342,
                        "src": "10881:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1355,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "10873:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10873:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1358,
                  "nodeType": "ExpressionStatement",
                  "src": "10873:18:8"
                }
              ]
            },
            "documentation": {
              "id": 1340,
              "nodeType": "StructuredDocumentation",
              "src": "10276:402:8",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n  Anybody can call this function.\n  Requires current state == FAILED to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "10692:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "10707:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "10699:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10699:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10698:19:8"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10727:0:8"
            },
            "scope": 1797,
            "src": "10683:215:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1383,
              "nodeType": "Block",
              "src": "11324:192:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1368,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "11368:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1367,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "11355:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11355:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1370,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "11382:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Failed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 890,
                          "src": "11382:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "11355:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c6564207374617465",
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11409:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        },
                        "value": "refund requires payment in failed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        }
                      ],
                      "id": 1366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11334:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11334:126:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1375,
                  "nodeType": "ExpressionStatement",
                  "src": "11334:126:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1377,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "11478:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1376,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "11470:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11470:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1379,
                  "nodeType": "ExpressionStatement",
                  "src": "11470:18:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1380,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "11498:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11498:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1382,
                  "nodeType": "ExpressionStatement",
                  "src": "11498:11:8"
                }
              ]
            },
            "documentation": {
              "id": 1361,
              "nodeType": "StructuredDocumentation",
              "src": "10904:360:8",
              "text": " @notice Exectutes refund and withdraw in one transaction.\n  Needs to be called by buyer.\n  All of buyer's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 1384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "11278:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "11304:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1384,
                  "src": "11296:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11296:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11295:19:8"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11324:0:8"
            },
            "scope": 1797,
            "src": "11269:247:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1391,
              "nodeType": "Block",
              "src": "11671:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1388,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "11681:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11681:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1390,
                  "nodeType": "ExpressionStatement",
                  "src": "11681:11:8"
                }
              ]
            },
            "documentation": {
              "id": 1385,
              "nodeType": "StructuredDocumentation",
              "src": "11522:115:8",
              "text": " @notice Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 1392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "11651:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11659:2:8"
            },
            "returnParameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11671:0:8"
            },
            "scope": 1797,
            "src": "11642:57:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1424,
              "nodeType": "Block",
              "src": "11914:182:8",
              "statements": [
                {
                  "assignments": [
                    1400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1400,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "11939:1:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1424,
                      "src": "11924:16:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                        "typeString": "struct PaymentsERC20.Payment"
                      },
                      "typeName": {
                        "id": 1399,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1398,
                          "name": "Payment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 910,
                          "src": "11924:7:8"
                        },
                        "referencedDeclaration": 910,
                        "src": "11924:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$910_storage_ptr",
                          "typeString": "struct PaymentsERC20.Payment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1404,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1401,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "11943:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                        "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1403,
                    "indexExpression": {
                      "id": 1402,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "11953:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11943:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11924:39:8"
                },
                {
                  "expression": {
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1405,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "11973:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1408,
                      "indexExpression": {
                        "expression": {
                          "id": 1406,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1400,
                          "src": "11984:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1407,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 897,
                        "src": "11984:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11973:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1409,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1400,
                        "src": "11996:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                          "typeString": "struct PaymentsERC20.Payment memory"
                        }
                      },
                      "id": 1410,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 909,
                      "src": "11996:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11973:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "11973:31:8"
                },
                {
                  "expression": {
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "12014:27:8",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1413,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "12021:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                          "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1415,
                      "indexExpression": {
                        "id": 1414,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1395,
                        "src": "12031:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12021:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_storage",
                        "typeString": "struct PaymentsERC20.Payment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "12014:27:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1419,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1395,
                        "src": "12070:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1420,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1400,
                          "src": "12081:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 897,
                        "src": "12081:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1418,
                      "name": "BuyerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "12056:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12056:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1423,
                  "nodeType": "EmitStatement",
                  "src": "12051:38:8"
                }
              ]
            },
            "documentation": {
              "id": 1393,
              "nodeType": "StructuredDocumentation",
              "src": "11731:134:8",
              "text": " @dev Executes refund, moves to NOT_STARTED state\n @param paymentId The unique ID that identifies the payment."
            },
            "id": 1425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refund",
            "nameLocation": "11879:7:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "11895:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1425,
                  "src": "11887:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11887:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11886:19:8"
            },
            "returnParameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11914:0:8"
            },
            "scope": 1797,
            "src": "11870:226:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1465,
              "nodeType": "Block",
              "src": "12367:253:8",
              "statements": [
                {
                  "assignments": [
                    1430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1430,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "12385:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1465,
                      "src": "12377:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1429,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12377:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1435,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1431,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "12394:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1434,
                    "indexExpression": {
                      "expression": {
                        "id": 1432,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "12405:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "12405:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12394:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12377:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1437,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1430,
                          "src": "12434:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12443:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12434:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f",
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12446:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84",
                          "typeString": "literal_string \"cannot withdraw: balance is zero\""
                        },
                        "value": "cannot withdraw: balance is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84",
                          "typeString": "literal_string \"cannot withdraw: balance is zero\""
                        }
                      ],
                      "id": 1436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12426:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12426:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1442,
                  "nodeType": "ExpressionStatement",
                  "src": "12426:55:8"
                },
                {
                  "expression": {
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1443,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "12491:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1446,
                      "indexExpression": {
                        "expression": {
                          "id": 1444,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12502:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12502:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12491:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12516:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12491:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "12491:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12551:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12551:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1456,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1430,
                        "src": "12563:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1451,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "12534:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1450,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "12527:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12527:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 136,
                      "src": "12527:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12527:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "12527:43:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1460,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12594:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12594:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1462,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1430,
                        "src": "12606:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1459,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "12585:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12585:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1464,
                  "nodeType": "EmitStatement",
                  "src": "12580:33:8"
                }
              ]
            },
            "documentation": {
              "id": 1426,
              "nodeType": "StructuredDocumentation",
              "src": "12102:231:8",
              "text": " @dev (private) Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks."
            },
            "id": 1466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "12347:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12356:2:8"
            },
            "returnParameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12367:0:8"
            },
            "scope": 1797,
            "src": "12338:282:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "12836:53:8",
              "statements": [
                {
                  "expression": {
                    "id": 1472,
                    "name": "_isSellerRegistrationRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 874,
                    "src": "12853:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1471,
                  "id": 1473,
                  "nodeType": "Return",
                  "src": "12846:36:8"
                }
              ]
            },
            "documentation": {
              "id": 1467,
              "nodeType": "StructuredDocumentation",
              "src": "12656:102:8",
              "text": " @notice Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 1475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "12776:28:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12804:2:8"
            },
            "returnParameters": {
              "id": 1471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "12830:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12830:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12829:6:8"
            },
            "scope": 1797,
            "src": "12767:122:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1487,
              "nodeType": "Block",
              "src": "13146:49:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1483,
                      "name": "_isRegisteredSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "13163:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1485,
                    "indexExpression": {
                      "id": 1484,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "13183:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13163:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1482,
                  "id": 1486,
                  "nodeType": "Return",
                  "src": "13156:32:8"
                }
              ]
            },
            "documentation": {
              "id": 1476,
              "nodeType": "StructuredDocumentation",
              "src": "12895:171:8",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return isRegistered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 1488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "13084:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1478,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "13111:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1488,
                  "src": "13103:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13103:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13102:14:8"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1488,
                  "src": "13140:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13140:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13139:6:8"
            },
            "scope": 1797,
            "src": "13075:120:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "13375:30:8",
              "statements": [
                {
                  "expression": {
                    "id": 1494,
                    "name": "_erc20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 868,
                    "src": "13392:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1493,
                  "id": 1495,
                  "nodeType": "Return",
                  "src": "13385:13:8"
                }
              ]
            },
            "documentation": {
              "id": 1489,
              "nodeType": "StructuredDocumentation",
              "src": "13201:120:8",
              "text": " @notice Returns the address of the ERC20 contract from which\n  tokens are accepted for payments"
            },
            "functionSelector": "785e9e86",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "erc20",
            "nameLocation": "13335:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13340:2:8"
            },
            "returnParameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "13366:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13366:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13365:9:8"
            },
            "scope": 1797,
            "src": "13326:79:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1509,
              "nodeType": "Block",
              "src": "13708:40:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1505,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "13725:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1507,
                    "indexExpression": {
                      "id": 1506,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "13736:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13725:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1504,
                  "id": 1508,
                  "nodeType": "Return",
                  "src": "13718:23:8"
                }
              ]
            },
            "documentation": {
              "id": 1498,
              "nodeType": "StructuredDocumentation",
              "src": "13411:227:8",
              "text": " @notice Returns the local ERC20 balance of address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 1510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "13652:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1500,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "13670:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "13662:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13662:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13661:14:8"
            },
            "returnParameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "13699:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13699:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13698:9:8"
            },
            "scope": 1797,
            "src": "13643:105:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1525,
              "nodeType": "Block",
              "src": "14015:54:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1522,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "14057:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1519,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "14039:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1518,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "14032:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14032:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "14032:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14032:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1517,
                  "id": 1524,
                  "nodeType": "Return",
                  "src": "14025:37:8"
                }
              ]
            },
            "documentation": {
              "id": 1511,
              "nodeType": "StructuredDocumentation",
              "src": "13754:186:8",
              "text": " @notice Returns ERC20 balance of address in the ERC20 contract\n @param addr the address that is queried\n @return the balance in the external ERC20 contract"
            },
            "functionSelector": "02519da3",
            "id": 1526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "erc20BalanceOf",
            "nameLocation": "13954:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "13977:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "13969:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13969:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13968:14:8"
            },
            "returnParameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "14006:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14006:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14005:9:8"
            },
            "scope": 1797,
            "src": "13945:124:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1545,
              "nodeType": "Block",
              "src": "14375:70:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1538,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "14417:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1541,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "14432:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                              "typeString": "contract PaymentsERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                              "typeString": "contract PaymentsERC20"
                            }
                          ],
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14424:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1539,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14424:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14424:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1535,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "14399:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1534,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "14392:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14392:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 146,
                      "src": "14392:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14392:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1533,
                  "id": 1544,
                  "nodeType": "Return",
                  "src": "14385:53:8"
                }
              ]
            },
            "documentation": {
              "id": 1527,
              "nodeType": "StructuredDocumentation",
              "src": "14075:231:8",
              "text": " @notice Returns the allowance that the buyer has approved\n  directly in the ERC20 contract in favour of this contract.\n @param buyer the address of the buyer\n @return the amount allowed by buyer"
            },
            "functionSelector": "3e5beab9",
            "id": 1546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "14320:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "14338:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "14330:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14330:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14329:15:8"
            },
            "returnParameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "14366:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14366:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14365:9:8"
            },
            "scope": 1797,
            "src": "14311:134:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1559,
              "nodeType": "Block",
              "src": "14742:44:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1555,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "14759:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                        "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1557,
                    "indexExpression": {
                      "id": 1556,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1549,
                      "src": "14769:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14759:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "functionReturnParameters": 1554,
                  "id": 1558,
                  "nodeType": "Return",
                  "src": "14752:27:8"
                }
              ]
            },
            "documentation": {
              "id": 1547,
              "nodeType": "StructuredDocumentation",
              "src": "14451:179:8",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 1560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "14644:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1549,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "14664:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "14656:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14656:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14655:19:8"
            },
            "returnParameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "14722:14:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                    "typeString": "struct PaymentsERC20.Payment"
                  },
                  "typeName": {
                    "id": 1552,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1551,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 910,
                      "src": "14722:7:8"
                    },
                    "referencedDeclaration": 910,
                    "src": "14722:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage_ptr",
                      "typeString": "struct PaymentsERC20.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14721:16:8"
            },
            "scope": 1797,
            "src": "14635:151:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1595,
              "nodeType": "Block",
              "src": "15178:240:8",
              "statements": [
                {
                  "assignments": [
                    1571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1571,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "15195:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1595,
                      "src": "15188:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      },
                      "typeName": {
                        "id": 1570,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1569,
                          "name": "States",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 892,
                          "src": "15188:6:8"
                        },
                        "referencedDeclaration": 892,
                        "src": "15188:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1576,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1572,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "15203:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                          "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1574,
                      "indexExpression": {
                        "id": 1573,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1563,
                        "src": "15213:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15203:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_storage",
                        "typeString": "struct PaymentsERC20.Payment storage ref"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 895,
                    "src": "15203:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15188:41:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      },
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1577,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1571,
                        "src": "15256:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1578,
                          "name": "States",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "15265:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                            "typeString": "type(enum PaymentsERC20.States)"
                          }
                        },
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetTransferring",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 889,
                        "src": "15265:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        }
                      },
                      "src": "15256:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1581,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "15305:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "15305:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1583,
                            "name": "_payments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "15323:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                              "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                            }
                          },
                          "id": 1585,
                          "indexExpression": {
                            "id": 1584,
                            "name": "paymentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1563,
                            "src": "15333:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15323:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_storage",
                            "typeString": "struct PaymentsERC20.Payment storage ref"
                          }
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 905,
                        "src": "15323:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15305:53:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15256:102:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1592,
                  "nodeType": "IfStatement",
                  "src": "15239:150:8",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "id": 1589,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "15376:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                          "typeString": "type(enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 890,
                      "src": "15376:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "functionReturnParameters": 1568,
                    "id": 1591,
                    "nodeType": "Return",
                    "src": "15369:20:8"
                  }
                },
                {
                  "expression": {
                    "id": 1593,
                    "name": "state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1571,
                    "src": "15406:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    }
                  },
                  "functionReturnParameters": 1568,
                  "id": 1594,
                  "nodeType": "Return",
                  "src": "15399:12:8"
                }
              ]
            },
            "documentation": {
              "id": 1561,
              "nodeType": "StructuredDocumentation",
              "src": "14792:311:8",
              "text": " @notice Returns the state of a payment.\n  It maps 1-to-1 with the stored variable, with the exeption of\n  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "34b778ed",
            "id": 1596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "15117:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "15138:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "15130:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15130:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15129:19:8"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "15170:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$892",
                    "typeString": "enum PaymentsERC20.States"
                  },
                  "typeName": {
                    "id": 1566,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1565,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 892,
                      "src": "15170:6:8"
                    },
                    "referencedDeclaration": 892,
                    "src": "15170:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15169:8:8"
            },
            "scope": 1797,
            "src": "15108:310:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1604,
              "nodeType": "Block",
              "src": "15704:38:8",
              "statements": [
                {
                  "expression": {
                    "id": 1602,
                    "name": "_paymentWindow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 872,
                    "src": "15721:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1601,
                  "id": 1603,
                  "nodeType": "Return",
                  "src": "15714:21:8"
                }
              ]
            },
            "documentation": {
              "id": 1597,
              "nodeType": "StructuredDocumentation",
              "src": "15424:218:8",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window"
            },
            "functionSelector": "cab55d56",
            "id": 1605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "15656:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15669:2:8"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1605,
                  "src": "15695:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15695:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15694:9:8"
            },
            "scope": 1797,
            "src": "15647:95:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1613,
              "nodeType": "Block",
              "src": "15962:41:8",
              "statements": [
                {
                  "expression": {
                    "id": 1611,
                    "name": "_acceptedCurrency",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 870,
                    "src": "15979:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1610,
                  "id": 1612,
                  "nodeType": "Return",
                  "src": "15972:24:8"
                }
              ]
            },
            "documentation": {
              "id": 1606,
              "nodeType": "StructuredDocumentation",
              "src": "15748:143:8",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 1614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "15905:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15921:2:8"
            },
            "returnParameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "15947:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15947:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15946:15:8"
            },
            "scope": 1797,
            "src": "15896:107:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1630,
              "nodeType": "Block",
              "src": "16481:58:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1625,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1617,
                          "src": "16516:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1624,
                        "name": "maxFundsAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1671,
                        "src": "16498:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 1626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16498:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1627,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1619,
                      "src": "16526:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16498:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1623,
                  "id": 1629,
                  "nodeType": "Return",
                  "src": "16491:41:8"
                }
              ]
            },
            "documentation": {
              "id": 1615,
              "nodeType": "StructuredDocumentation",
              "src": "16009:351:8",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n  In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n @return a bool, true is enough available"
            },
            "functionSelector": "9cfd495c",
            "id": 1631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "16374:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1617,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "16403:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "16395:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16395:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1619,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16418:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "16410:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16410:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16394:31:8"
            },
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "16471:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16471:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16470:6:8"
            },
            "scope": 1797,
            "src": "16365:174:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1670,
              "nodeType": "Block",
              "src": "16900:283:8",
              "statements": [
                {
                  "assignments": [
                    1640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1640,
                      "mutability": "mutable",
                      "name": "approved",
                      "nameLocation": "16918:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "16910:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1639,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16910:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1644,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1642,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "16939:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1641,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "16929:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16929:16:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16910:35:8"
                },
                {
                  "assignments": [
                    1646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1646,
                      "mutability": "mutable",
                      "name": "erc20Balance",
                      "nameLocation": "16963:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "16955:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16955:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1653,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1651,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "17003:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1648,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "16985:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1647,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "16978:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16978:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "16978:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16978:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16955:54:8"
                },
                {
                  "assignments": [
                    1655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1655,
                      "mutability": "mutable",
                      "name": "externalAvailable",
                      "nameLocation": "17027:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "17019:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1654,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17019:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1663,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1656,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1640,
                            "src": "17048:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1657,
                            "name": "erc20Balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1646,
                            "src": "17059:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17048:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1659,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17047:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1661,
                      "name": "erc20Balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1646,
                      "src": "17110:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "17047:75:8",
                    "trueExpression": {
                      "id": 1660,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "17087:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17019:103:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1664,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "17139:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1666,
                      "indexExpression": {
                        "id": 1665,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "17150:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17139:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1667,
                      "name": "externalAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "17159:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17139:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1638,
                  "id": 1669,
                  "nodeType": "Return",
                  "src": "17132:44:8"
                }
              ]
            },
            "documentation": {
              "id": 1632,
              "nodeType": "StructuredDocumentation",
              "src": "16545:278:8",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n  In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the funds available and approved in the ERC20 contract.\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 1671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "16837:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1634,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "16863:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "16855:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16855:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16854:15:8"
            },
            "returnParameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1637,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "16891:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16891:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16890:9:8"
            },
            "scope": 1797,
            "src": "16828:355:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1711,
              "nodeType": "Block",
              "src": "17804:204:8",
              "statements": [
                {
                  "assignments": [
                    1684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1684,
                      "mutability": "mutable",
                      "name": "localBalance",
                      "nameLocation": "17822:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "17814:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1688,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1685,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "17837:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1687,
                    "indexExpression": {
                      "id": 1686,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "17848:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17837:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17814:40:8"
                },
                {
                  "expression": {
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1689,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "17864:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1690,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "17878:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1691,
                              "name": "localBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "17887:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17878:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1693,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17877:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 1695,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "17918:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "17877:47:8",
                      "trueExpression": {
                        "id": 1694,
                        "name": "localBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "17903:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17864:60:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "17864:60:8"
                },
                {
                  "expression": {
                    "id": 1709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1699,
                      "name": "externalFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1679,
                      "src": "17934:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1700,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "17951:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1701,
                              "name": "localBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "17960:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17951:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1703,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17950:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 1707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18000:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 1708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "17950:51:8",
                      "trueExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1704,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1676,
                          "src": "17976:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1705,
                          "name": "localBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1684,
                          "src": "17985:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17976:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17934:67:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1710,
                  "nodeType": "ExpressionStatement",
                  "src": "17934:67:8"
                }
              ]
            },
            "documentation": {
              "id": 1672,
              "nodeType": "StructuredDocumentation",
              "src": "17189:458:8",
              "text": " @notice Splits the funds required to pay 'amount' into two source:\n  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n @return localFunds - the amount of ERC20 local funds required. "
            },
            "functionSelector": "317cb018",
            "id": 1712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "17661:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1674,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "17689:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "17681:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17681:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1676,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17704:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "17696:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17696:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17680:31:8"
            },
            "returnParameters": {
              "id": 1682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1679,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "17765:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "17757:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17757:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "17788:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "17780:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17780:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17756:43:8"
            },
            "scope": 1797,
            "src": "17652:356:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1767,
              "nodeType": "Block",
              "src": "18229:567:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1720,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "18247:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 513,
                          "src": "18247:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18261:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "18247:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6665652063616e6e6f74206265206c6172676572207468616e203130302070657263656e74",
                        "id": 1724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18268:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08",
                          "typeString": "literal_string \"fee cannot be larger than 100 percent\""
                        },
                        "value": "fee cannot be larger than 100 percent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08",
                          "typeString": "literal_string \"fee cannot be larger than 100 percent\""
                        }
                      ],
                      "id": 1719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18239:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18239:69:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1726,
                  "nodeType": "ExpressionStatement",
                  "src": "18239:69:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1729,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1716,
                                "src": "18352:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                  "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 509,
                              "src": "18352:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1728,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "18339:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18339:27:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1732,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "18370:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NotStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 888,
                          "src": "18370:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "18339:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420696e20696e636f727265637420637572656e74207374617465",
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18401:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9",
                          "typeString": "literal_string \"payment in incorrect curent state\""
                        },
                        "value": "payment in incorrect curent state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9",
                          "typeString": "literal_string \"payment in incorrect curent state\""
                        }
                      ],
                      "id": 1727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18318:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18318:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "18318:128:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1739,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "18464:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18464:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1741,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "18483:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 517,
                          "src": "18483:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18464:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420646561646c696e652065787069726564",
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18499:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9",
                          "typeString": "literal_string \"payment deadline expired\""
                        },
                        "value": "payment deadline expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9",
                          "typeString": "literal_string \"payment deadline expired\""
                        }
                      ],
                      "id": 1738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18456:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18456:70:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "18456:70:8"
                },
                {
                  "condition": {
                    "id": 1747,
                    "name": "_isSellerRegistrationRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 874,
                    "src": "18540:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1756,
                  "nodeType": "IfStatement",
                  "src": "18536:112:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 1749,
                            "name": "_isRegisteredSeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "18591:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1752,
                          "indexExpression": {
                            "expression": {
                              "id": 1750,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "18611:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                "typeString": "struct EIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 521,
                            "src": "18611:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18591:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "73656c6c6572206e6f742072656769737465726564",
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18624:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd",
                            "typeString": "literal_string \"seller not registered\""
                          },
                          "value": "seller not registered"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd",
                            "typeString": "literal_string \"seller not registered\""
                          }
                        ],
                        "id": 1748,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "18583:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18583:65:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1755,
                    "nodeType": "ExpressionStatement",
                    "src": "18583:65:8"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1759,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "18700:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                "typeString": "struct EIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 519,
                            "src": "18700:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 1761,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "18711:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                "typeString": "struct EIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 511,
                            "src": "18711:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1758,
                          "name": "enoughFundsAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1631,
                          "src": "18679:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18679:43:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682066756e647320617661696c61626c6520666f722074686973206275796572",
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18736:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145",
                          "typeString": "literal_string \"not enough funds available for this buyer\""
                        },
                        "value": "not enough funds available for this buyer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145",
                          "typeString": "literal_string \"not enough funds available for this buyer\""
                        }
                      ],
                      "id": 1757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18658:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18658:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1766,
                  "nodeType": "ExpressionStatement",
                  "src": "18658:131:8"
                }
              ]
            },
            "documentation": {
              "id": 1713,
              "nodeType": "StructuredDocumentation",
              "src": "18014:143:8",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled."
            },
            "functionSelector": "00f3b6e8",
            "id": 1768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "18171:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1716,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "18212:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "18190:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                    "typeString": "struct EIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1715,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1714,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 522,
                      "src": "18190:12:8"
                    },
                    "referencedDeclaration": 522,
                    "src": "18190:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$522_storage_ptr",
                      "typeString": "struct EIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18189:27:8"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18229:0:8"
            },
            "scope": 1797,
            "src": "18162:634:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1795,
              "nodeType": "Block",
              "src": "19236:121:8",
              "statements": [
                {
                  "assignments": [
                    1779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1779,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "19254:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1795,
                      "src": "19246:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1778,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19246:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1786,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1780,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "19267:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1781,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "19276:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19267:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1783,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "19266:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19286:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "19266:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19246:45:8"
                },
                {
                  "expression": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1787,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1779,
                            "src": "19309:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1788,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "19322:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19309:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1790,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "19308:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1792,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "19344:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "19308:42:8",
                    "trueExpression": {
                      "id": 1791,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1779,
                      "src": "19332:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1777,
                  "id": 1794,
                  "nodeType": "Return",
                  "src": "19301:49:8"
                }
              ]
            },
            "documentation": {
              "id": 1769,
              "nodeType": "StructuredDocumentation",
              "src": "18825:290:8",
              "text": " @notice Safe compute fee amount\n  Returns a values that is guaranteed to be less or equal to total provided amount\n  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n  when receiving a payment.\n @return the fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 1796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "19129:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1771,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "19154:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "19146:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19146:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "19170:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "19162:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19162:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19145:32:8"
            },
            "returnParameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1776,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "19223:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19223:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19222:9:8"
            },
            "scope": 1797,
            "src": "19120:237:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1798,
        "src": "2059:17300:8"
      }
    ],
    "src": "32:19328:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Payments/PaymentsERC20.sol",
    "exportedSymbols": {
      "Context": [
        210
      ],
      "ECDSA": [
        354
      ],
      "EIP712": [
        492
      ],
      "EIP712Verifier": [
        576
      ],
      "FeesCollectors": [
        700
      ],
      "IERC20": [
        187
      ],
      "Operators": [
        824
      ],
      "Ownable": [
        109
      ],
      "PaymentsERC20": [
        1797
      ]
    },
    "id": 1798,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 826,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 827,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1798,
        "sourceUnit": 188,
        "src": "58:64:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 828,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1798,
        "sourceUnit": 701,
        "src": "123:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 829,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1798,
        "sourceUnit": 577,
        "src": "154:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 831,
              "name": "FeesCollectors",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 700,
              "src": "2085:14:8"
            },
            "id": 832,
            "nodeType": "InheritanceSpecifier",
            "src": "2085:14:8"
          },
          {
            "baseName": {
              "id": 833,
              "name": "EIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 576,
              "src": "2101:14:8"
            },
            "id": 834,
            "nodeType": "InheritanceSpecifier",
            "src": "2101:14:8"
          }
        ],
        "contractDependencies": [
          109,
          210,
          492,
          576,
          700,
          824
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 830,
          "nodeType": "StructuredDocumentation",
          "src": "186:1871:8",
          "text": " @notice Payments Contract in ERC20.\n Upon transfer of ERC20 tokens to this contract, these remain\n locked until an Operator confirms the success of failure of the\n asset transfer required to fulfil this payment.\n If no confirmation is recevied from the operator during the PaymentWindow,\n all of buyer's received tokens are made available to the buyer for refund.\n To start a payment, the signatures of both the buyer and the Operator are required.\n - in the 'relayedPay' method, the Operator is the msg.sender, and the buyerSig is provided;\n - in the 'pay' method, the buyer is the msg.sender, and the operatorSig is provided.\n This contract maintains the balances of all users, it does not transfer them automatically.\n Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender]\n If a buyer has non-zero local balance at the moment of starting a new payment, \n the contract reuses it, and only transfers the remainder required (if any) \n from the external ERC20 contract. \n Each payment has the following States Machine:\n - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay/relayedPay\n - ASSET_TRANSFERRING -> PAID, triggered by assetTransferSuccess\n - ASSET_TRANSFERRING -> FAILED, triggered implicitly by now > expirationTime\n - ASSET_TRANSFERRING -> NOT_STARTED, triggered by assetTransferFailure\n - FAILED -> NOT_STARTED, triggered by refund or refundAndWithdraw\n - FAILED -> ASSET_TRANSFERRING, triggered by new pay/relayedPay\n NOTE: To ensure that the a payment process proceeds as expected when the payment starts,\n upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime}\n is stored in the payment struct, and used throught the payment, regardless of\n any possible modifications to the contract's storage."
        },
        "fullyImplemented": true,
        "id": 1797,
        "linearizedBaseContracts": [
          1797,
          576,
          492,
          700,
          824,
          109,
          210
        ],
        "name": "PaymentsERC20",
        "nameLocation": "2068:13:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 838,
            "name": "PaymentWindow",
            "nameLocation": "2128:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "2150:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "2142:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2141:16:8"
            },
            "src": "2122:36:8"
          },
          {
            "anonymous": false,
            "id": 842,
            "name": "NewSeller",
            "nameLocation": "2169:9:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2195:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 842,
                  "src": "2179:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2178:24:8"
            },
            "src": "2163:40:8"
          },
          {
            "anonymous": false,
            "id": 848,
            "name": "BuyerRefunded",
            "nameLocation": "2214:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2244:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "2228:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2228:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2271:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 848,
                  "src": "2255:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2227:50:8"
            },
            "src": "2208:70:8"
          },
          {
            "anonymous": false,
            "id": 856,
            "name": "Payin",
            "nameLocation": "2289:5:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2320:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "2304:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 849,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 852,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2355:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "2339:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 854,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2386:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "2370:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2294:104:8"
            },
            "src": "2283:116:8"
          },
          {
            "anonymous": false,
            "id": 860,
            "name": "Paid",
            "nameLocation": "2410:4:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2423:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "2415:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2415:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2414:19:8"
            },
            "src": "2404:30:8"
          },
          {
            "anonymous": false,
            "id": 866,
            "name": "Withdraw",
            "nameLocation": "2445:8:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2470:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "2454:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 864,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2484:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "2476:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2476:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:38:8"
            },
            "src": "2439:53:8"
          },
          {
            "constant": false,
            "id": 868,
            "mutability": "mutable",
            "name": "_erc20",
            "nameLocation": "2514:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2498:22:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 867,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2498:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 870,
            "mutability": "mutable",
            "name": "_acceptedCurrency",
            "nameLocation": "2541:17:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2526:32:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 869,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2526:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 872,
            "mutability": "mutable",
            "name": "_paymentWindow",
            "nameLocation": "2580:14:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2564:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 871,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2564:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 874,
            "mutability": "mutable",
            "name": "_isSellerRegistrationRequired",
            "nameLocation": "2613:29:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2600:42:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 873,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2600:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 878,
            "mutability": "mutable",
            "name": "_isRegisteredSeller",
            "nameLocation": "2681:19:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2648:52:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 877,
              "keyType": {
                "id": 875,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2656:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2648:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 876,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2667:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 883,
            "mutability": "mutable",
            "name": "_payments",
            "nameLocation": "2742:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2706:45:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
              "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment)"
            },
            "typeName": {
              "id": 882,
              "keyType": {
                "id": 879,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2714:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2706:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment)"
              },
              "valueType": {
                "id": 881,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 880,
                  "name": "Payment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 910,
                  "src": "2725:7:8"
                },
                "referencedDeclaration": 910,
                "src": "2725:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Payment_$910_storage_ptr",
                  "typeString": "struct PaymentsERC20.Payment"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 887,
            "mutability": "mutable",
            "name": "_balanceOf",
            "nameLocation": "2793:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1797,
            "src": "2757:46:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 886,
              "keyType": {
                "id": 884,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2765:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2757:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 885,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2776:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "PaymentsERC20.States",
            "id": 892,
            "members": [
              {
                "id": 888,
                "name": "NotStarted",
                "nameLocation": "2832:10:8",
                "nodeType": "EnumValue",
                "src": "2832:10:8"
              },
              {
                "id": 889,
                "name": "AssetTransferring",
                "nameLocation": "2852:17:8",
                "nodeType": "EnumValue",
                "src": "2852:17:8"
              },
              {
                "id": 890,
                "name": "Failed",
                "nameLocation": "2879:6:8",
                "nodeType": "EnumValue",
                "src": "2879:6:8"
              },
              {
                "id": 891,
                "name": "Paid",
                "nameLocation": "2895:4:8",
                "nodeType": "EnumValue",
                "src": "2895:4:8"
              }
            ],
            "name": "States",
            "nameLocation": "2815:6:8",
            "nodeType": "EnumDefinition",
            "src": "2810:95:8"
          },
          {
            "canonicalName": "PaymentsERC20.Payment",
            "id": 910,
            "members": [
              {
                "constant": false,
                "id": 895,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "3170:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3163:12:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$892",
                  "typeString": "enum PaymentsERC20.States"
                },
                "typeName": {
                  "id": 894,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 893,
                    "name": "States",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 892,
                    "src": "3163:6:8"
                  },
                  "referencedDeclaration": 892,
                  "src": "3163:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$892",
                    "typeString": "enum PaymentsERC20.States"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 897,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "3193:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3185:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 896,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3185:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 899,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "3216:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3208:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 898,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3208:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 901,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "3240:8:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3232:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 900,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3232:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 903,
                "mutability": "mutable",
                "name": "feesCollector",
                "nameLocation": "3266:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3258:21:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 902,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3258:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 905,
                "mutability": "mutable",
                "name": "expirationTime",
                "nameLocation": "3297:14:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3289:22:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 904,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3289:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 907,
                "mutability": "mutable",
                "name": "feeBPS",
                "nameLocation": "3328:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3321:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 906,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "3321:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 909,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3352:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 910,
                "src": "3344:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 908,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3344:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nameLocation": "3145:7:8",
            "nodeType": "StructDefinition",
            "scope": 1797,
            "src": "3138:227:8",
            "visibility": "public"
          },
          {
            "body": {
              "id": 933,
              "nodeType": "Block",
              "src": "3439:166:8",
              "statements": [
                {
                  "expression": {
                    "id": 919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 917,
                      "name": "_erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 868,
                      "src": "3449:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 918,
                      "name": "erc20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 912,
                      "src": "3458:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3449:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 920,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:21:8"
                },
                {
                  "expression": {
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 921,
                      "name": "_acceptedCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 870,
                      "src": "3480:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 922,
                      "name": "currencyDescriptor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "3500:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3480:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "3480:38:8"
                },
                {
                  "expression": {
                    "id": 927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 925,
                      "name": "_paymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "3528:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3545:7:8",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_864000_by_1",
                        "typeString": "int_const 864000"
                      },
                      "value": "10"
                    },
                    "src": "3528:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 928,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:24:8"
                },
                {
                  "expression": {
                    "id": 931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 929,
                      "name": "_isSellerRegistrationRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "3562:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3594:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3562:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 932,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:36:8"
                }
              ]
            },
            "id": 934,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "3391:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "3383:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3383:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "currencyDescriptor",
                  "nameLocation": "3419:18:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 934,
                  "src": "3405:32:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3405:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3382:56:8"
            },
            "returnParameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3439:0:8"
            },
            "scope": 1797,
            "src": "3371:234:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 950,
              "nodeType": "Block",
              "src": "4002:76:8",
              "statements": [
                {
                  "expression": {
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 942,
                      "name": "_paymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "4012:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 943,
                      "name": "window",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "4029:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4012:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "4012:23:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 947,
                        "name": "window",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 937,
                        "src": "4064:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 946,
                      "name": "PaymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "4050:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4050:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 949,
                  "nodeType": "EmitStatement",
                  "src": "4045:26:8"
                }
              ]
            },
            "documentation": {
              "id": 935,
              "nodeType": "StructuredDocumentation",
              "src": "3611:325:8",
              "text": " @notice Sets the amount of time available to the operator, after the payment starts,\n  to confirm either the success of the failure of the asset transfer. \n  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n @param window The amount of time available, in seconds."
            },
            "functionSelector": "982ed326",
            "id": 951,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 940,
                "modifierName": {
                  "id": 939,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "3992:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3992:9:8"
              }
            ],
            "name": "setPaymentWindow",
            "nameLocation": "3950:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "3975:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 951,
                  "src": "3967:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3966:16:8"
            },
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:8"
            },
            "scope": 1797,
            "src": "3941:137:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 963,
              "nodeType": "Block",
              "src": "4390:59:8",
              "statements": [
                {
                  "expression": {
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 959,
                      "name": "_isSellerRegistrationRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 874,
                      "src": "4400:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 960,
                      "name": "isRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "4432:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4400:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "4400:42:8"
                }
              ]
            },
            "documentation": {
              "id": 952,
              "nodeType": "StructuredDocumentation",
              "src": "4084:204:8",
              "text": " @notice Sets whether sellers are required to register in this contract before being,\n  able to accept payments. \n @param isRequired (bool) if true, registration is required."
            },
            "functionSelector": "1a29b6ab",
            "id": 964,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 957,
                "modifierName": {
                  "id": 956,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "4376:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "4376:9:8"
              }
            ],
            "name": "setIsSellerRegistrationRequired",
            "nameLocation": "4302:31:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 954,
                  "mutability": "mutable",
                  "name": "isRequired",
                  "nameLocation": "4339:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 964,
                  "src": "4334:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 953,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4333:17:8"
            },
            "returnParameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4390:0:8"
            },
            "scope": 1797,
            "src": "4293:156:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "4589:91:8",
              "statements": [
                {
                  "expression": {
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 968,
                        "name": "_isRegisteredSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "4599:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 971,
                      "indexExpression": {
                        "expression": {
                          "id": 969,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4619:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4619:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4599:31:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4633:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4599:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 974,
                  "nodeType": "ExpressionStatement",
                  "src": "4599:38:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 976,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4662:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4662:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 975,
                      "name": "NewSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "4652:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4652:21:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "EmitStatement",
                  "src": "4647:26:8"
                }
              ]
            },
            "documentation": {
              "id": 965,
              "nodeType": "StructuredDocumentation",
              "src": "4455:92:8",
              "text": " @notice Registers msg.sender a seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "4561:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4577:2:8"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4589:0:8"
            },
            "scope": 1797,
            "src": "4552:128:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1104,
              "nodeType": "Block",
              "src": "5490:1133:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 992,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "5538:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                  "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 515,
                              "src": "5538:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 991,
                            "name": "universeOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 823,
                            "src": "5521:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5521:32:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 995,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5557:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5557:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5521:46:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f70657261746f72206e6f7420617574686f72697a656420666f72207468697320756e6976657273654964",
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5581:45:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8",
                          "typeString": "literal_string \"operator not authorized for this universeId\""
                        },
                        "value": "operator not authorized for this universeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8",
                          "typeString": "literal_string \"operator not authorized for this universeId\""
                        }
                      ],
                      "id": 990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5500:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5500:136:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1000,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:136:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1002,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5663:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 509,
                          "src": "5663:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1001,
                        "name": "paymentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "5650:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                          "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5650:27:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1005,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "5681:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                          "typeString": "type(enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 890,
                      "src": "5681:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "src": "5650:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1013,
                  "nodeType": "IfStatement",
                  "src": "5646:84:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1009,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5716:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 509,
                          "src": "5716:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1008,
                        "name": "_refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "5708:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5708:22:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1012,
                    "nodeType": "ExpressionStatement",
                    "src": "5708:22:8"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1015,
                        "name": "inp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "5759:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                          "typeString": "struct EIP712Verifier.PaymentInput calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                          "typeString": "struct EIP712Verifier.PaymentInput calldata"
                        }
                      ],
                      "id": 1014,
                      "name": "checkPaymentInputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "5740:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$522_calldata_ptr_$returns$__$",
                        "typeString": "function (struct EIP712Verifier.PaymentInput calldata) view"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "5740:23:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1020,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5801:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          {
                            "id": 1021,
                            "name": "buyerSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 987,
                            "src": "5806:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 1022,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 985,
                              "src": "5822:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                "typeString": "struct EIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 519,
                            "src": "5822:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1019,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "5794:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$522_calldata_ptr_$_t_bytes_calldata_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct EIP712Verifier.PaymentInput calldata,bytes calldata,address) view returns (bool)"
                          }
                        },
                        "id": 1024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5794:38:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206275796572207369676e6174757265",
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5846:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b",
                          "typeString": "literal_string \"incorrect buyer signature\""
                        },
                        "value": "incorrect buyer signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b",
                          "typeString": "literal_string \"incorrect buyer signature\""
                        }
                      ],
                      "id": 1018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5773:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5773:110:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "ExpressionStatement",
                  "src": "5773:110:8"
                },
                {
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1028,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "5893:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                          "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1031,
                      "indexExpression": {
                        "expression": {
                          "id": 1029,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "5903:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 509,
                        "src": "5903:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5893:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_storage",
                        "typeString": "struct PaymentsERC20.Payment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1033,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "5941:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "5941:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        {
                          "expression": {
                            "id": 1035,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5979:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 519,
                          "src": "5979:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1037,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6002:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 521,
                          "src": "6002:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1039,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6026:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6026:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1042,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "6072:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                  "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 515,
                              "src": "6072:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1041,
                            "name": "universeFeesCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "6050:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6050:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1045,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "6101:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6101:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1047,
                            "name": "_paymentWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "6119:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6101:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1049,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6147:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 513,
                          "src": "6147:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 1051,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6171:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 511,
                          "src": "6171:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1032,
                        "name": "Payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "5920:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Payment_$910_storage_ptr_$",
                          "typeString": "type(struct PaymentsERC20.Payment storage pointer)"
                        }
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5920:271:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                        "typeString": "struct PaymentsERC20.Payment memory"
                      }
                    },
                    "src": "5893:298:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "5893:298:8"
                },
                {
                  "assignments": [
                    1057,
                    1059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1057,
                      "mutability": "mutable",
                      "name": "newFunds",
                      "nameLocation": "6210:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "6202:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1056,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6202:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1059,
                      "mutability": "mutable",
                      "name": "localFunds",
                      "nameLocation": "6228:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1104,
                      "src": "6220:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6220:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1066,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1061,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6275:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "6275:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1063,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6298:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 511,
                        "src": "6298:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1060,
                      "name": "splitFundingSources",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1712,
                      "src": "6242:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6242:76:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6201:117:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1067,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1057,
                      "src": "6332:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6343:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6332:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1087,
                  "nodeType": "IfStatement",
                  "src": "6328:186:8",
                  "trueBody": {
                    "id": 1086,
                    "nodeType": "Block",
                    "src": "6346:168:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1075,
                                    "name": "inp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 985,
                                    "src": "6413:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                      "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                    }
                                  },
                                  "id": 1076,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 519,
                                  "src": "6413:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1079,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "6432:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    ],
                                    "id": 1078,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6424:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1077,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6424:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6424:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1081,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1057,
                                  "src": "6439:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1072,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 868,
                                      "src": "6392:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1071,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "6385:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6385:14:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$187",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 168,
                                "src": "6385:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6385:63:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6466:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1070,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6360:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6360:143:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1085,
                        "nodeType": "ExpressionStatement",
                        "src": "6360:143:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1088,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "6523:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1091,
                      "indexExpression": {
                        "expression": {
                          "id": 1089,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6534:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "6534:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6523:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1092,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "6548:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6523:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "6523:35:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1096,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6579:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 509,
                        "src": "6579:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1098,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6594:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "6594:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1100,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "6605:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "6605:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1095,
                      "name": "Payin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "6573:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6573:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "EmitStatement",
                  "src": "6568:48:8"
                }
              ]
            },
            "documentation": {
              "id": 982,
              "nodeType": "StructuredDocumentation",
              "src": "4686:690:8",
              "text": " @notice Starts the Payment process via relay-by-operator.\n  Executed by an operator, who relays the MetaTX with the buyer's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param buyerSignature The signature of 'inp' by the buyer"
            },
            "functionSelector": "06a212ae",
            "id": 1105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "relayedPay",
            "nameLocation": "5390:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "5432:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "5410:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                    "typeString": "struct EIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 983,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 522,
                      "src": "5410:12:8"
                    },
                    "referencedDeclaration": 522,
                    "src": "5410:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$522_storage_ptr",
                      "typeString": "struct EIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "mutability": "mutable",
                  "name": "buyerSignature",
                  "nameLocation": "5460:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1105,
                  "src": "5445:29:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5445:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5400:80:8"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5490:0:8"
            },
            "scope": 1797,
            "src": "5381:1242:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1231,
              "nodeType": "Block",
              "src": "7422:1168:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1115,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7453:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7453:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1117,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7467:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 519,
                          "src": "7467:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7453:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792062757965722063616e206578656375746520746869732066756e6374696f6e",
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7490:38:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3",
                          "typeString": "literal_string \"only buyer can execute this function\""
                        },
                        "value": "only buyer can execute this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3",
                          "typeString": "literal_string \"only buyer can execute this function\""
                        }
                      ],
                      "id": 1114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7432:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7432:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "7432:106:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1124,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7565:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 509,
                          "src": "7565:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1123,
                        "name": "paymentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1596,
                        "src": "7552:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                          "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7552:27:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1127,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "7583:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                          "typeString": "type(enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 890,
                      "src": "7583:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "src": "7552:44:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1135,
                  "nodeType": "IfStatement",
                  "src": "7548:84:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1131,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7618:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 509,
                          "src": "7618:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1130,
                        "name": "_refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "7610:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 1133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7610:22:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1134,
                    "nodeType": "ExpressionStatement",
                    "src": "7610:22:8"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1137,
                        "name": "inp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "7661:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                          "typeString": "struct EIP712Verifier.PaymentInput calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                          "typeString": "struct EIP712Verifier.PaymentInput calldata"
                        }
                      ],
                      "id": 1136,
                      "name": "checkPaymentInputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1768,
                      "src": "7642:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$522_calldata_ptr_$returns$__$",
                        "typeString": "function (struct EIP712Verifier.PaymentInput calldata) view"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7642:23:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "7642:23:8"
                },
                {
                  "assignments": [
                    1141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1141,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "7683:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "7675:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1140,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7675:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1146,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1143,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "7711:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "universeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 515,
                        "src": "7711:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1142,
                      "name": "universeOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 823,
                      "src": "7694:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7694:32:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7675:51:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1149,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7764:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          {
                            "id": 1150,
                            "name": "operatorSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1111,
                            "src": "7769:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 1151,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "7788:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1148,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "7757:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$522_calldata_ptr_$_t_bytes_calldata_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct EIP712Verifier.PaymentInput calldata,bytes calldata,address) view returns (bool)"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7757:40:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206f70657261746f72207369676e6174757265",
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7811:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c",
                          "typeString": "literal_string \"incorrect operator signature\""
                        },
                        "value": "incorrect operator signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c",
                          "typeString": "literal_string \"incorrect operator signature\""
                        }
                      ],
                      "id": 1147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7736:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7736:115:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "7736:115:8"
                },
                {
                  "expression": {
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1156,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "7862:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                          "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1159,
                      "indexExpression": {
                        "expression": {
                          "id": 1157,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "7872:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 509,
                        "src": "7872:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7862:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_storage",
                        "typeString": "struct PaymentsERC20.Payment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1161,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "7910:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "7910:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        {
                          "expression": {
                            "id": 1163,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7948:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 519,
                          "src": "7948:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1165,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7971:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 521,
                          "src": "7971:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1167,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1141,
                          "src": "7995:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1169,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1109,
                                "src": "8039:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                  "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 515,
                              "src": "8039:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1168,
                            "name": "universeFeesCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 699,
                            "src": "8017:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8017:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1172,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "8068:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8068:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1174,
                            "name": "_paymentWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 872,
                            "src": "8086:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8068:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1176,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "8114:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 513,
                          "src": "8114:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 1178,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "8138:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 511,
                          "src": "8138:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1160,
                        "name": "Payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "7889:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Payment_$910_storage_ptr_$",
                          "typeString": "type(struct PaymentsERC20.Payment storage pointer)"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7889:269:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                        "typeString": "struct PaymentsERC20.Payment memory"
                      }
                    },
                    "src": "7862:296:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "7862:296:8"
                },
                {
                  "assignments": [
                    1184,
                    1186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1184,
                      "mutability": "mutable",
                      "name": "newFunds",
                      "nameLocation": "8177:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "8169:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8169:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "localFunds",
                      "nameLocation": "8195:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1231,
                      "src": "8187:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8187:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1193,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1188,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8242:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "8242:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1190,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8265:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 511,
                        "src": "8265:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1187,
                      "name": "splitFundingSources",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1712,
                      "src": "8209:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8209:76:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8168:117:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1194,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1184,
                      "src": "8299:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8310:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8299:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1214,
                  "nodeType": "IfStatement",
                  "src": "8295:186:8",
                  "trueBody": {
                    "id": 1213,
                    "nodeType": "Block",
                    "src": "8313:168:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1202,
                                    "name": "inp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1109,
                                    "src": "8380:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                      "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                    }
                                  },
                                  "id": 1203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 519,
                                  "src": "8380:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1206,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "8399:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    ],
                                    "id": 1205,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8391:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1204,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8391:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8391:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1208,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1184,
                                  "src": "8406:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1199,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 868,
                                      "src": "8359:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1198,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "8352:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8352:14:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$187",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 168,
                                "src": "8352:27:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8352:63:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8433:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1197,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "8327:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8327:143:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1212,
                        "nodeType": "ExpressionStatement",
                        "src": "8327:143:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1215,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "8490:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1218,
                      "indexExpression": {
                        "expression": {
                          "id": 1216,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8501:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "8501:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8490:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1219,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1186,
                      "src": "8515:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8490:35:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1221,
                  "nodeType": "ExpressionStatement",
                  "src": "8490:35:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1223,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8546:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 509,
                        "src": "8546:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1225,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8561:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 519,
                        "src": "8561:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1227,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1109,
                          "src": "8572:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                            "typeString": "struct EIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "8572:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1222,
                      "name": "Payin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "8540:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8540:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "EmitStatement",
                  "src": "8535:48:8"
                }
              ]
            },
            "documentation": {
              "id": 1106,
              "nodeType": "StructuredDocumentation",
              "src": "6629:693:8",
              "text": " @notice Starts Payment process directly by the buyer.\n  Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 1232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "7336:3:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "7362:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "7340:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                    "typeString": "struct EIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1108,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1107,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 522,
                      "src": "7340:12:8"
                    },
                    "referencedDeclaration": 522,
                    "src": "7340:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$522_storage_ptr",
                      "typeString": "struct EIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "7382:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "7367:32:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1110,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7367:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7339:61:8"
            },
            "returnParameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7422:0:8"
            },
            "scope": 1797,
            "src": "7327:1263:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1306,
              "nodeType": "Block",
              "src": "8922:590:8",
              "statements": [
                {
                  "assignments": [
                    1240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1240,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "8947:1:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1306,
                      "src": "8932:16:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                        "typeString": "struct PaymentsERC20.Payment"
                      },
                      "typeName": {
                        "id": 1239,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1238,
                          "name": "Payment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 910,
                          "src": "8932:7:8"
                        },
                        "referencedDeclaration": 910,
                        "src": "8932:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$910_storage_ptr",
                          "typeString": "struct PaymentsERC20.Payment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1244,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1241,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "8951:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                        "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1243,
                    "indexExpression": {
                      "id": 1242,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "8961:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8951:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8932:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1246,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9002:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9002:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1248,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1240,
                            "src": "9016:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                              "typeString": "struct PaymentsERC20.Payment memory"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 901,
                          "src": "9016:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9002:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72697a6564",
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9040:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        },
                        "value": "only payment operator is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        }
                      ],
                      "id": 1245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8981:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8981:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "8981:106:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1255,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "9118:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "9118:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1258,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1235,
                              "src": "9159:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1257,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "9146:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9146:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "9118:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207472616e7366657272696e67207374617465",
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9183:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        },
                        "value": "payment not initially in asset transferring state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        }
                      ],
                      "id": 1254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9097:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9097:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "9097:147:8"
                },
                {
                  "expression": {
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1264,
                          "name": "_payments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 883,
                          "src": "9254:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                            "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                          }
                        },
                        "id": 1266,
                        "indexExpression": {
                          "id": 1265,
                          "name": "paymentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1235,
                          "src": "9264:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9254:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$910_storage",
                          "typeString": "struct PaymentsERC20.Payment storage ref"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 895,
                      "src": "9254:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1268,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "9283:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                          "typeString": "type(enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Paid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 891,
                      "src": "9283:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "src": "9254:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    }
                  },
                  "id": 1271,
                  "nodeType": "ExpressionStatement",
                  "src": "9254:40:8"
                },
                {
                  "assignments": [
                    1273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1273,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "9312:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1306,
                      "src": "9304:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9304:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1283,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1275,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "9341:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 909,
                        "src": "9341:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1279,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1240,
                              "src": "9359:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                                "typeString": "struct PaymentsERC20.Payment memory"
                              }
                            },
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeBPS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 907,
                            "src": "9359:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9351:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1277,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9351:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9351:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1274,
                      "name": "computeFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1796,
                      "src": "9324:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9324:45:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9304:65:8"
                },
                {
                  "expression": {
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1284,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "9379:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1287,
                      "indexExpression": {
                        "expression": {
                          "id": 1285,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "9390:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 899,
                        "src": "9390:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9379:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1288,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1240,
                              "src": "9404:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                                "typeString": "struct PaymentsERC20.Payment memory"
                              }
                            },
                            "id": 1289,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 909,
                            "src": "9404:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1290,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "9415:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9404:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1292,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9403:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9379:46:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "9379:46:8"
                },
                {
                  "expression": {
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1295,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "9435:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1298,
                      "indexExpression": {
                        "expression": {
                          "id": 1296,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1240,
                          "src": "9446:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feesCollector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 903,
                        "src": "9446:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9435:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1299,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "9466:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9435:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "9435:40:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1303,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1235,
                        "src": "9495:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1302,
                      "name": "Paid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "9490:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9490:15:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1305,
                  "nodeType": "EmitStatement",
                  "src": "9485:20:8"
                }
              ]
            },
            "documentation": {
              "id": 1233,
              "nodeType": "StructuredDocumentation",
              "src": "8596:263:8",
              "text": " @notice Confirms the asset transfer.\n  Needs to be executed by the operator.\n  Updates balances of seller and feesCollector.\n @dev Moves payment to PAID state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "b3080298",
            "id": 1307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferSuccess",
            "nameLocation": "8873:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "8902:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1307,
                  "src": "8894:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1234,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8894:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8893:19:8"
            },
            "returnParameters": {
              "id": 1237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8922:0:8"
            },
            "scope": 1797,
            "src": "8864:648:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1338,
              "nodeType": "Block",
              "src": "9943:327:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1314,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9974:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9974:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1316,
                              "name": "_payments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 883,
                              "src": "9988:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                                "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                              }
                            },
                            "id": 1318,
                            "indexExpression": {
                              "id": 1317,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "9998:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9988:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$910_storage",
                              "typeString": "struct PaymentsERC20.Payment storage ref"
                            }
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 901,
                          "src": "9988:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9974:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72697a6564",
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10031:37:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        },
                        "value": "only payment operator is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        }
                      ],
                      "id": 1313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9953:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9953:125:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "9953:125:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1325,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "10109:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 889,
                          "src": "10109:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1328,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "10150:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1327,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "10137:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10137:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "10109:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207472616e7366657272696e67207374617465",
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10174:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        },
                        "value": "payment not initially in asset transferring state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10088:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10088:147:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "10088:147:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1335,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1310,
                        "src": "10253:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1334,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "10245:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10245:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "10245:18:8"
                }
              ]
            },
            "documentation": {
              "id": 1308,
              "nodeType": "StructuredDocumentation",
              "src": "9518:363:8",
              "text": " @notice Confirms the failure of asset transfer and refunds buyer.\n  Needs to be executed by the operator.\n  Buyer's balance is updated, allowing explicit withdrawal.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2ce10fcf",
            "id": 1339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferFailed",
            "nameLocation": "9895:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9923:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "9915:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9915:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9914:19:8"
            },
            "returnParameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9943:0:8"
            },
            "scope": 1797,
            "src": "9886:384:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1359,
              "nodeType": "Block",
              "src": "10727:171:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1347,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1342,
                              "src": "10771:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1346,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "10758:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10758:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1349,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "10785:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Failed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 890,
                          "src": "10785:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "10758:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c6564207374617465",
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10812:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        },
                        "value": "refund requires payment in failed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        }
                      ],
                      "id": 1345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10737:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10737:126:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1354,
                  "nodeType": "ExpressionStatement",
                  "src": "10737:126:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1356,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1342,
                        "src": "10881:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1355,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "10873:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10873:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1358,
                  "nodeType": "ExpressionStatement",
                  "src": "10873:18:8"
                }
              ]
            },
            "documentation": {
              "id": 1340,
              "nodeType": "StructuredDocumentation",
              "src": "10276:402:8",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n  Anybody can call this function.\n  Requires current state == FAILED to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 1360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "10692:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "10707:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1360,
                  "src": "10699:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10699:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10698:19:8"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10727:0:8"
            },
            "scope": 1797,
            "src": "10683:215:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1383,
              "nodeType": "Block",
              "src": "11324:192:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1368,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1363,
                              "src": "11368:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1367,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "11355:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11355:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1370,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "11382:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Failed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 890,
                          "src": "11382:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "11355:40:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c6564207374617465",
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11409:41:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        },
                        "value": "refund requires payment in failed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        }
                      ],
                      "id": 1366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11334:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11334:126:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1375,
                  "nodeType": "ExpressionStatement",
                  "src": "11334:126:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1377,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1363,
                        "src": "11478:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1376,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "11470:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11470:18:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1379,
                  "nodeType": "ExpressionStatement",
                  "src": "11470:18:8"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1380,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "11498:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11498:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1382,
                  "nodeType": "ExpressionStatement",
                  "src": "11498:11:8"
                }
              ]
            },
            "documentation": {
              "id": 1361,
              "nodeType": "StructuredDocumentation",
              "src": "10904:360:8",
              "text": " @notice Exectutes refund and withdraw in one transaction.\n  Needs to be called by buyer.\n  All of buyer's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 1384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "11278:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "11304:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1384,
                  "src": "11296:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11296:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11295:19:8"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11324:0:8"
            },
            "scope": 1797,
            "src": "11269:247:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1391,
              "nodeType": "Block",
              "src": "11671:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1388,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "11681:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11681:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1390,
                  "nodeType": "ExpressionStatement",
                  "src": "11681:11:8"
                }
              ]
            },
            "documentation": {
              "id": 1385,
              "nodeType": "StructuredDocumentation",
              "src": "11522:115:8",
              "text": " @notice Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 1392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "11651:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11659:2:8"
            },
            "returnParameters": {
              "id": 1387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11671:0:8"
            },
            "scope": 1797,
            "src": "11642:57:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1424,
              "nodeType": "Block",
              "src": "11914:182:8",
              "statements": [
                {
                  "assignments": [
                    1400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1400,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "11939:1:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1424,
                      "src": "11924:16:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                        "typeString": "struct PaymentsERC20.Payment"
                      },
                      "typeName": {
                        "id": 1399,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1398,
                          "name": "Payment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 910,
                          "src": "11924:7:8"
                        },
                        "referencedDeclaration": 910,
                        "src": "11924:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$910_storage_ptr",
                          "typeString": "struct PaymentsERC20.Payment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1404,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1401,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "11943:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                        "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1403,
                    "indexExpression": {
                      "id": 1402,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "11953:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11943:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11924:39:8"
                },
                {
                  "expression": {
                    "id": 1411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1405,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "11973:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1408,
                      "indexExpression": {
                        "expression": {
                          "id": 1406,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1400,
                          "src": "11984:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1407,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 897,
                        "src": "11984:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11973:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1409,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1400,
                        "src": "11996:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                          "typeString": "struct PaymentsERC20.Payment memory"
                        }
                      },
                      "id": 1410,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 909,
                      "src": "11996:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11973:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1412,
                  "nodeType": "ExpressionStatement",
                  "src": "11973:31:8"
                },
                {
                  "expression": {
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "12014:27:8",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1413,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "12021:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                          "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1415,
                      "indexExpression": {
                        "id": 1414,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1395,
                        "src": "12031:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12021:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_storage",
                        "typeString": "struct PaymentsERC20.Payment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "12014:27:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1419,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1395,
                        "src": "12070:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1420,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1400,
                          "src": "12081:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                            "typeString": "struct PaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 897,
                        "src": "12081:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1418,
                      "name": "BuyerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 848,
                      "src": "12056:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12056:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1423,
                  "nodeType": "EmitStatement",
                  "src": "12051:38:8"
                }
              ]
            },
            "documentation": {
              "id": 1393,
              "nodeType": "StructuredDocumentation",
              "src": "11731:134:8",
              "text": " @dev Executes refund, moves to NOT_STARTED state\n @param paymentId The unique ID that identifies the payment."
            },
            "id": 1425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refund",
            "nameLocation": "11879:7:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "11895:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1425,
                  "src": "11887:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11887:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11886:19:8"
            },
            "returnParameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11914:0:8"
            },
            "scope": 1797,
            "src": "11870:226:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1465,
              "nodeType": "Block",
              "src": "12367:253:8",
              "statements": [
                {
                  "assignments": [
                    1430
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1430,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "12385:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1465,
                      "src": "12377:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1429,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12377:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1435,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1431,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "12394:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1434,
                    "indexExpression": {
                      "expression": {
                        "id": 1432,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "12405:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "12405:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12394:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12377:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1437,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1430,
                          "src": "12434:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12443:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12434:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f",
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12446:34:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84",
                          "typeString": "literal_string \"cannot withdraw: balance is zero\""
                        },
                        "value": "cannot withdraw: balance is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84",
                          "typeString": "literal_string \"cannot withdraw: balance is zero\""
                        }
                      ],
                      "id": 1436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12426:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12426:55:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1442,
                  "nodeType": "ExpressionStatement",
                  "src": "12426:55:8"
                },
                {
                  "expression": {
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1443,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "12491:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1446,
                      "indexExpression": {
                        "expression": {
                          "id": 1444,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12502:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12502:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12491:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12516:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12491:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "12491:26:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12551:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12551:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1456,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1430,
                        "src": "12563:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1451,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "12534:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1450,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "12527:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12527:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 136,
                      "src": "12527:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12527:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1458,
                  "nodeType": "ExpressionStatement",
                  "src": "12527:43:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1460,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12594:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12594:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1462,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1430,
                        "src": "12606:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1459,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "12585:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12585:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1464,
                  "nodeType": "EmitStatement",
                  "src": "12580:33:8"
                }
              ]
            },
            "documentation": {
              "id": 1426,
              "nodeType": "StructuredDocumentation",
              "src": "12102:231:8",
              "text": " @dev (private) Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks."
            },
            "id": 1466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "12347:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12356:2:8"
            },
            "returnParameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12367:0:8"
            },
            "scope": 1797,
            "src": "12338:282:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "12836:53:8",
              "statements": [
                {
                  "expression": {
                    "id": 1472,
                    "name": "_isSellerRegistrationRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 874,
                    "src": "12853:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1471,
                  "id": 1473,
                  "nodeType": "Return",
                  "src": "12846:36:8"
                }
              ]
            },
            "documentation": {
              "id": 1467,
              "nodeType": "StructuredDocumentation",
              "src": "12656:102:8",
              "text": " @notice Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 1475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "12776:28:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12804:2:8"
            },
            "returnParameters": {
              "id": 1471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "12830:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12830:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12829:6:8"
            },
            "scope": 1797,
            "src": "12767:122:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1487,
              "nodeType": "Block",
              "src": "13146:49:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1483,
                      "name": "_isRegisteredSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 878,
                      "src": "13163:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1485,
                    "indexExpression": {
                      "id": 1484,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "13183:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13163:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1482,
                  "id": 1486,
                  "nodeType": "Return",
                  "src": "13156:32:8"
                }
              ]
            },
            "documentation": {
              "id": 1476,
              "nodeType": "StructuredDocumentation",
              "src": "12895:171:8",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return isRegistered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 1488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "13084:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1478,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "13111:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1488,
                  "src": "13103:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13103:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13102:14:8"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1488,
                  "src": "13140:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13140:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13139:6:8"
            },
            "scope": 1797,
            "src": "13075:120:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "13375:30:8",
              "statements": [
                {
                  "expression": {
                    "id": 1494,
                    "name": "_erc20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 868,
                    "src": "13392:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1493,
                  "id": 1495,
                  "nodeType": "Return",
                  "src": "13385:13:8"
                }
              ]
            },
            "documentation": {
              "id": 1489,
              "nodeType": "StructuredDocumentation",
              "src": "13201:120:8",
              "text": " @notice Returns the address of the ERC20 contract from which\n  tokens are accepted for payments"
            },
            "functionSelector": "785e9e86",
            "id": 1497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "erc20",
            "nameLocation": "13335:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13340:2:8"
            },
            "returnParameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "13366:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13366:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13365:9:8"
            },
            "scope": 1797,
            "src": "13326:79:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1509,
              "nodeType": "Block",
              "src": "13708:40:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1505,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "13725:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1507,
                    "indexExpression": {
                      "id": 1506,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "13736:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13725:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1504,
                  "id": 1508,
                  "nodeType": "Return",
                  "src": "13718:23:8"
                }
              ]
            },
            "documentation": {
              "id": 1498,
              "nodeType": "StructuredDocumentation",
              "src": "13411:227:8",
              "text": " @notice Returns the local ERC20 balance of address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 1510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "13652:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1500,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "13670:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "13662:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13662:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13661:14:8"
            },
            "returnParameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "13699:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13699:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13698:9:8"
            },
            "scope": 1797,
            "src": "13643:105:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1525,
              "nodeType": "Block",
              "src": "14015:54:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1522,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1513,
                        "src": "14057:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1519,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "14039:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1518,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "14032:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14032:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "14032:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14032:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1517,
                  "id": 1524,
                  "nodeType": "Return",
                  "src": "14025:37:8"
                }
              ]
            },
            "documentation": {
              "id": 1511,
              "nodeType": "StructuredDocumentation",
              "src": "13754:186:8",
              "text": " @notice Returns ERC20 balance of address in the ERC20 contract\n @param addr the address that is queried\n @return the balance in the external ERC20 contract"
            },
            "functionSelector": "02519da3",
            "id": 1526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "erc20BalanceOf",
            "nameLocation": "13954:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "13977:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "13969:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13969:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13968:14:8"
            },
            "returnParameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "14006:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14006:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14005:9:8"
            },
            "scope": 1797,
            "src": "13945:124:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1545,
              "nodeType": "Block",
              "src": "14375:70:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1538,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "14417:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1541,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "14432:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                              "typeString": "contract PaymentsERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PaymentsERC20_$1797",
                              "typeString": "contract PaymentsERC20"
                            }
                          ],
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14424:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1539,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14424:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14424:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1535,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "14399:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1534,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "14392:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14392:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 146,
                      "src": "14392:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14392:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1533,
                  "id": 1544,
                  "nodeType": "Return",
                  "src": "14385:53:8"
                }
              ]
            },
            "documentation": {
              "id": 1527,
              "nodeType": "StructuredDocumentation",
              "src": "14075:231:8",
              "text": " @notice Returns the allowance that the buyer has approved\n  directly in the ERC20 contract in favour of this contract.\n @param buyer the address of the buyer\n @return the amount allowed by buyer"
            },
            "functionSelector": "3e5beab9",
            "id": 1546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "14320:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "14338:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "14330:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14330:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14329:15:8"
            },
            "returnParameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "14366:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14366:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14365:9:8"
            },
            "scope": 1797,
            "src": "14311:134:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1559,
              "nodeType": "Block",
              "src": "14742:44:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1555,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "14759:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                        "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1557,
                    "indexExpression": {
                      "id": 1556,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1549,
                      "src": "14769:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14759:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage",
                      "typeString": "struct PaymentsERC20.Payment storage ref"
                    }
                  },
                  "functionReturnParameters": 1554,
                  "id": 1558,
                  "nodeType": "Return",
                  "src": "14752:27:8"
                }
              ]
            },
            "documentation": {
              "id": 1547,
              "nodeType": "StructuredDocumentation",
              "src": "14451:179:8",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 1560,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "14644:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1549,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "14664:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "14656:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14656:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14655:19:8"
            },
            "returnParameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "14722:14:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$910_memory_ptr",
                    "typeString": "struct PaymentsERC20.Payment"
                  },
                  "typeName": {
                    "id": 1552,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1551,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 910,
                      "src": "14722:7:8"
                    },
                    "referencedDeclaration": 910,
                    "src": "14722:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$910_storage_ptr",
                      "typeString": "struct PaymentsERC20.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14721:16:8"
            },
            "scope": 1797,
            "src": "14635:151:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1595,
              "nodeType": "Block",
              "src": "15178:240:8",
              "statements": [
                {
                  "assignments": [
                    1571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1571,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "15195:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1595,
                      "src": "15188:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      },
                      "typeName": {
                        "id": 1570,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1569,
                          "name": "States",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 892,
                          "src": "15188:6:8"
                        },
                        "referencedDeclaration": 892,
                        "src": "15188:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1576,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1572,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 883,
                        "src": "15203:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                          "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1574,
                      "indexExpression": {
                        "id": 1573,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1563,
                        "src": "15213:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15203:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$910_storage",
                        "typeString": "struct PaymentsERC20.Payment storage ref"
                      }
                    },
                    "id": 1575,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 895,
                    "src": "15203:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15188:41:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      },
                      "id": 1580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1577,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1571,
                        "src": "15256:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1578,
                          "name": "States",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 892,
                          "src": "15265:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                            "typeString": "type(enum PaymentsERC20.States)"
                          }
                        },
                        "id": 1579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetTransferring",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 889,
                        "src": "15265:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        }
                      },
                      "src": "15256:33:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1581,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "15305:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "15305:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1583,
                            "name": "_payments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "15323:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$910_storage_$",
                              "typeString": "mapping(bytes32 => struct PaymentsERC20.Payment storage ref)"
                            }
                          },
                          "id": 1585,
                          "indexExpression": {
                            "id": 1584,
                            "name": "paymentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1563,
                            "src": "15333:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15323:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$910_storage",
                            "typeString": "struct PaymentsERC20.Payment storage ref"
                          }
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 905,
                        "src": "15323:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15305:53:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15256:102:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1592,
                  "nodeType": "IfStatement",
                  "src": "15239:150:8",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "id": 1589,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "15376:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                          "typeString": "type(enum PaymentsERC20.States)"
                        }
                      },
                      "id": 1590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 890,
                      "src": "15376:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$892",
                        "typeString": "enum PaymentsERC20.States"
                      }
                    },
                    "functionReturnParameters": 1568,
                    "id": 1591,
                    "nodeType": "Return",
                    "src": "15369:20:8"
                  }
                },
                {
                  "expression": {
                    "id": 1593,
                    "name": "state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1571,
                    "src": "15406:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    }
                  },
                  "functionReturnParameters": 1568,
                  "id": 1594,
                  "nodeType": "Return",
                  "src": "15399:12:8"
                }
              ]
            },
            "documentation": {
              "id": 1561,
              "nodeType": "StructuredDocumentation",
              "src": "14792:311:8",
              "text": " @notice Returns the state of a payment.\n  It maps 1-to-1 with the stored variable, with the exeption of\n  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "34b778ed",
            "id": 1596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "15117:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "15138:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "15130:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15130:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15129:19:8"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "15170:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$892",
                    "typeString": "enum PaymentsERC20.States"
                  },
                  "typeName": {
                    "id": 1566,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1565,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 892,
                      "src": "15170:6:8"
                    },
                    "referencedDeclaration": 892,
                    "src": "15170:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$892",
                      "typeString": "enum PaymentsERC20.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15169:8:8"
            },
            "scope": 1797,
            "src": "15108:310:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1604,
              "nodeType": "Block",
              "src": "15704:38:8",
              "statements": [
                {
                  "expression": {
                    "id": 1602,
                    "name": "_paymentWindow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 872,
                    "src": "15721:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1601,
                  "id": 1603,
                  "nodeType": "Return",
                  "src": "15714:21:8"
                }
              ]
            },
            "documentation": {
              "id": 1597,
              "nodeType": "StructuredDocumentation",
              "src": "15424:218:8",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window"
            },
            "functionSelector": "cab55d56",
            "id": 1605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "15656:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15669:2:8"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1605,
                  "src": "15695:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15695:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15694:9:8"
            },
            "scope": 1797,
            "src": "15647:95:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1613,
              "nodeType": "Block",
              "src": "15962:41:8",
              "statements": [
                {
                  "expression": {
                    "id": 1611,
                    "name": "_acceptedCurrency",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 870,
                    "src": "15979:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1610,
                  "id": 1612,
                  "nodeType": "Return",
                  "src": "15972:24:8"
                }
              ]
            },
            "documentation": {
              "id": 1606,
              "nodeType": "StructuredDocumentation",
              "src": "15748:143:8",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 1614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "15905:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15921:2:8"
            },
            "returnParameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "15947:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15947:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15946:15:8"
            },
            "scope": 1797,
            "src": "15896:107:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1630,
              "nodeType": "Block",
              "src": "16481:58:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1625,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1617,
                          "src": "16516:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1624,
                        "name": "maxFundsAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1671,
                        "src": "16498:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 1626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16498:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1627,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1619,
                      "src": "16526:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16498:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1623,
                  "id": 1629,
                  "nodeType": "Return",
                  "src": "16491:41:8"
                }
              ]
            },
            "documentation": {
              "id": 1615,
              "nodeType": "StructuredDocumentation",
              "src": "16009:351:8",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n  In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n @return a bool, true is enough available"
            },
            "functionSelector": "9cfd495c",
            "id": 1631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "16374:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1617,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "16403:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "16395:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16395:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1619,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16418:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "16410:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16410:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16394:31:8"
            },
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "16471:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16471:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16470:6:8"
            },
            "scope": 1797,
            "src": "16365:174:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1670,
              "nodeType": "Block",
              "src": "16900:283:8",
              "statements": [
                {
                  "assignments": [
                    1640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1640,
                      "mutability": "mutable",
                      "name": "approved",
                      "nameLocation": "16918:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "16910:16:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1639,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16910:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1644,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1642,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "16939:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1641,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "16929:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16929:16:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16910:35:8"
                },
                {
                  "assignments": [
                    1646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1646,
                      "mutability": "mutable",
                      "name": "erc20Balance",
                      "nameLocation": "16963:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "16955:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1645,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16955:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1653,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1651,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "17003:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1648,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "16985:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1647,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "16978:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16978:14:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "16978:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16978:31:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16955:54:8"
                },
                {
                  "assignments": [
                    1655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1655,
                      "mutability": "mutable",
                      "name": "externalAvailable",
                      "nameLocation": "17027:17:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "17019:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1654,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17019:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1663,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1656,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1640,
                            "src": "17048:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1657,
                            "name": "erc20Balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1646,
                            "src": "17059:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17048:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1659,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17047:25:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1661,
                      "name": "erc20Balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1646,
                      "src": "17110:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "17047:75:8",
                    "trueExpression": {
                      "id": 1660,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "17087:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17019:103:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1664,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "17139:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1666,
                      "indexExpression": {
                        "id": 1665,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "17150:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "17139:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1667,
                      "name": "externalAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1655,
                      "src": "17159:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17139:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1638,
                  "id": 1669,
                  "nodeType": "Return",
                  "src": "17132:44:8"
                }
              ]
            },
            "documentation": {
              "id": 1632,
              "nodeType": "StructuredDocumentation",
              "src": "16545:278:8",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n  In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the funds available and approved in the ERC20 contract.\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 1671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "16837:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1634,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "16863:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "16855:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16855:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16854:15:8"
            },
            "returnParameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1637,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "16891:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16891:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16890:9:8"
            },
            "scope": 1797,
            "src": "16828:355:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1711,
              "nodeType": "Block",
              "src": "17804:204:8",
              "statements": [
                {
                  "assignments": [
                    1684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1684,
                      "mutability": "mutable",
                      "name": "localBalance",
                      "nameLocation": "17822:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "17814:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17814:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1688,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1685,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "17837:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1687,
                    "indexExpression": {
                      "id": 1686,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "17848:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17837:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17814:40:8"
                },
                {
                  "expression": {
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1689,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1681,
                      "src": "17864:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1690,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "17878:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1691,
                              "name": "localBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "17887:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17878:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1693,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17877:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 1695,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "17918:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "17877:47:8",
                      "trueExpression": {
                        "id": 1694,
                        "name": "localBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "17903:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17864:60:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "17864:60:8"
                },
                {
                  "expression": {
                    "id": 1709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1699,
                      "name": "externalFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1679,
                      "src": "17934:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1700,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "17951:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1701,
                              "name": "localBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1684,
                              "src": "17960:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17951:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1703,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17950:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 1707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18000:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 1708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "17950:51:8",
                      "trueExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1704,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1676,
                          "src": "17976:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1705,
                          "name": "localBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1684,
                          "src": "17985:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17976:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17934:67:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1710,
                  "nodeType": "ExpressionStatement",
                  "src": "17934:67:8"
                }
              ]
            },
            "documentation": {
              "id": 1672,
              "nodeType": "StructuredDocumentation",
              "src": "17189:458:8",
              "text": " @notice Splits the funds required to pay 'amount' into two source:\n  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n @return localFunds - the amount of ERC20 local funds required. "
            },
            "functionSelector": "317cb018",
            "id": 1712,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "17661:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1674,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "17689:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "17681:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17681:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1676,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17704:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "17696:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17696:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17680:31:8"
            },
            "returnParameters": {
              "id": 1682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1679,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "17765:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "17757:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17757:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1681,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "17788:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "17780:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17780:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17756:43:8"
            },
            "scope": 1797,
            "src": "17652:356:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1767,
              "nodeType": "Block",
              "src": "18229:567:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1720,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "18247:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 513,
                          "src": "18247:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18261:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "18247:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6665652063616e6e6f74206265206c6172676572207468616e203130302070657263656e74",
                        "id": 1724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18268:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08",
                          "typeString": "literal_string \"fee cannot be larger than 100 percent\""
                        },
                        "value": "fee cannot be larger than 100 percent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08",
                          "typeString": "literal_string \"fee cannot be larger than 100 percent\""
                        }
                      ],
                      "id": 1719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18239:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18239:69:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1726,
                  "nodeType": "ExpressionStatement",
                  "src": "18239:69:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$892",
                          "typeString": "enum PaymentsERC20.States"
                        },
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1729,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1716,
                                "src": "18352:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                  "typeString": "struct EIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 509,
                              "src": "18352:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1728,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "18339:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$892_$",
                              "typeString": "function (bytes32) view returns (enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18339:27:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1732,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "18370:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$892_$",
                              "typeString": "type(enum PaymentsERC20.States)"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NotStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 888,
                          "src": "18370:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$892",
                            "typeString": "enum PaymentsERC20.States"
                          }
                        },
                        "src": "18339:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420696e20696e636f727265637420637572656e74207374617465",
                        "id": 1735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18401:35:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9",
                          "typeString": "literal_string \"payment in incorrect curent state\""
                        },
                        "value": "payment in incorrect curent state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9",
                          "typeString": "literal_string \"payment in incorrect curent state\""
                        }
                      ],
                      "id": 1727,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18318:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18318:128:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "18318:128:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1739,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "18464:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18464:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1741,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "18483:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                              "typeString": "struct EIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 517,
                          "src": "18483:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18464:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420646561646c696e652065787069726564",
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18499:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9",
                          "typeString": "literal_string \"payment deadline expired\""
                        },
                        "value": "payment deadline expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9",
                          "typeString": "literal_string \"payment deadline expired\""
                        }
                      ],
                      "id": 1738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18456:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18456:70:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1746,
                  "nodeType": "ExpressionStatement",
                  "src": "18456:70:8"
                },
                {
                  "condition": {
                    "id": 1747,
                    "name": "_isSellerRegistrationRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 874,
                    "src": "18540:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1756,
                  "nodeType": "IfStatement",
                  "src": "18536:112:8",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 1749,
                            "name": "_isRegisteredSeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 878,
                            "src": "18591:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1752,
                          "indexExpression": {
                            "expression": {
                              "id": 1750,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "18611:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                "typeString": "struct EIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 521,
                            "src": "18611:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18591:31:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "73656c6c6572206e6f742072656769737465726564",
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18624:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd",
                            "typeString": "literal_string \"seller not registered\""
                          },
                          "value": "seller not registered"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd",
                            "typeString": "literal_string \"seller not registered\""
                          }
                        ],
                        "id": 1748,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "18583:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18583:65:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1755,
                    "nodeType": "ExpressionStatement",
                    "src": "18583:65:8"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1759,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "18700:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                "typeString": "struct EIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 519,
                            "src": "18700:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 1761,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "18711:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                                "typeString": "struct EIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 511,
                            "src": "18711:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1758,
                          "name": "enoughFundsAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1631,
                          "src": "18679:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18679:43:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682066756e647320617661696c61626c6520666f722074686973206275796572",
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18736:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145",
                          "typeString": "literal_string \"not enough funds available for this buyer\""
                        },
                        "value": "not enough funds available for this buyer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145",
                          "typeString": "literal_string \"not enough funds available for this buyer\""
                        }
                      ],
                      "id": 1757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "18658:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18658:131:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1766,
                  "nodeType": "ExpressionStatement",
                  "src": "18658:131:8"
                }
              ]
            },
            "documentation": {
              "id": 1713,
              "nodeType": "StructuredDocumentation",
              "src": "18014:143:8",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled."
            },
            "functionSelector": "00f3b6e8",
            "id": 1768,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "18171:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1716,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "18212:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "18190:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$522_calldata_ptr",
                    "typeString": "struct EIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1715,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1714,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 522,
                      "src": "18190:12:8"
                    },
                    "referencedDeclaration": 522,
                    "src": "18190:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$522_storage_ptr",
                      "typeString": "struct EIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18189:27:8"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18229:0:8"
            },
            "scope": 1797,
            "src": "18162:634:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1795,
              "nodeType": "Block",
              "src": "19236:121:8",
              "statements": [
                {
                  "assignments": [
                    1779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1779,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "19254:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1795,
                      "src": "19246:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1778,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19246:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1786,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1780,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "19267:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1781,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1773,
                            "src": "19276:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19267:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1783,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "19266:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19286:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "19266:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19246:45:8"
                },
                {
                  "expression": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1787,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1779,
                            "src": "19309:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1788,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "19322:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19309:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1790,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "19308:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1792,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "19344:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "19308:42:8",
                    "trueExpression": {
                      "id": 1791,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1779,
                      "src": "19332:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1777,
                  "id": 1794,
                  "nodeType": "Return",
                  "src": "19301:49:8"
                }
              ]
            },
            "documentation": {
              "id": 1769,
              "nodeType": "StructuredDocumentation",
              "src": "18825:290:8",
              "text": " @notice Safe compute fee amount\n  Returns a values that is guaranteed to be less or equal to total provided amount\n  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n  when receiving a payment.\n @return the fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 1796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "19129:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1771,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "19154:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "19146:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19146:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "19170:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "19162:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19162:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19145:32:8"
            },
            "returnParameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1776,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1796,
                  "src": "19223:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19223:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19222:9:8"
            },
            "scope": 1797,
            "src": "19120:237:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1798,
        "src": "2059:17300:8"
      }
    ],
    "src": "32:19328:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-14T11:43:11.487Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptedCurrency()": {
        "returns": {
          "_0": "the string describing the currency"
        }
      },
      "allowance(address)": {
        "params": {
          "buyer": "the address of the buyer"
        },
        "returns": {
          "_0": "the amount allowed by buyer"
        }
      },
      "assetTransferFailed(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "assetTransferSuccess(bytes32)": {
        "details": "Moves payment to PAID state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "balanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the local balance"
        }
      },
      "computeFeeAmount(uint256,uint256)": {
        "returns": {
          "_0": "the fee amount"
        }
      },
      "enoughFundsAvailable(address,uint256)": {
        "returns": {
          "_0": "a bool, true is enough available"
        }
      },
      "erc20BalanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the balance in the external ERC20 contract"
        }
      },
      "isRegisteredSeller(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "isRegistered as seller"
        }
      },
      "maxFundsAvailable(address)": {
        "returns": {
          "_0": "the max funds available"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "inp": "The struct containing all required payment data",
          "operatorSignature": "The signature of 'inp' by the operator"
        }
      },
      "paymentInfo(bytes32)": {
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the struct stored for the payment"
        }
      },
      "paymentState(bytes32)": {
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the struct stored for the payment"
        }
      },
      "paymentWindow()": {
        "returns": {
          "_0": "the payment window"
        }
      },
      "refund(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "refundAndWithdraw(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "buyerSignature": "The signature of 'inp' by the buyer",
          "inp": "The struct containing all required payment data"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setIsSellerRegistrationRequired(bool)": {
        "params": {
          "isRequired": "(bool) if true, registration is required."
        }
      },
      "setPaymentWindow(uint256)": {
        "params": {
          "window": "The amount of time available, in seconds."
        }
      },
      "splitFundingSources(address,uint256)": {
        "returns": {
          "externalFunds": "- the amount of ERC20 required from the external ERC20 contract.",
          "localFunds": "- the amount of ERC20 local funds required. "
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptedCurrency()": {
        "notice": "Returns a descriptor about the currency that this contract accepts"
      },
      "allowance(address)": {
        "notice": "Returns the allowance that the buyer has approved  directly in the ERC20 contract in favour of this contract."
      },
      "assetTransferFailed(bytes32)": {
        "notice": "Confirms the failure of asset transfer and refunds buyer.  Needs to be executed by the operator.  Buyer's balance is updated, allowing explicit withdrawal.  It resets all data related to this payment."
      },
      "assetTransferSuccess(bytes32)": {
        "notice": "Confirms the asset transfer.  Needs to be executed by the operator.  Updates balances of seller and feesCollector."
      },
      "balanceOf(address)": {
        "notice": "Returns the local ERC20 balance of address that is stored in this  contract, and hence, available for withdrawal."
      },
      "checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))": {
        "notice": "Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled."
      },
      "computeFeeAmount(uint256,uint256)": {
        "notice": "Safe compute fee amount  Returns a values that is guaranteed to be less or equal to total provided amount  The safety check should be unnecessary, since only feeBPS < 10000 are accepted  when receiving a payment."
      },
      "enoughFundsAvailable(address,uint256)": {
        "notice": "Returns true if the 'amount' required for a payment is available to this contract.  In more detail: returns true if the sum of the buyer's local balance in this contract,  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'"
      },
      "erc20()": {
        "notice": "Returns the address of the ERC20 contract from which  tokens are accepted for payments"
      },
      "erc20BalanceOf(address)": {
        "notice": "Returns ERC20 balance of address in the ERC20 contract"
      },
      "isRegisteredSeller(address)": {
        "notice": "Returns true if the address provided is a registered seller"
      },
      "isSellerRegistrationRequired()": {
        "notice": "Returns true if sellers need to be registered to be able to accept payments"
      },
      "maxFundsAvailable(address)": {
        "notice": "Returns the maximum amount of funds available to a buyer  In more detail: returns the sum of the buyer's local balance in this contract,  plus the funds available and approved in the ERC20 contract."
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts Payment process directly by the buyer.  Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract."
      },
      "paymentInfo(bytes32)": {
        "notice": "Returns all data stored in a payment"
      },
      "paymentState(bytes32)": {
        "notice": "Returns the state of a payment.  It maps 1-to-1 with the stored variable, with the exeption of  an ASSET_TRANSFERRING that has gone beyond expirationTime."
      },
      "paymentWindow()": {
        "notice": "Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator"
      },
      "refund(bytes32)": {
        "notice": "Moves buyer's provided funds to buyer's balance.  Anybody can call this function.  Requires current state == FAILED to proceed.  After updating buyer's balance, he/she can later withdraw.  It resets all data related to this payment."
      },
      "refundAndWithdraw(bytes32)": {
        "notice": "Exectutes refund and withdraw in one transaction.  Needs to be called by buyer.  All of buyer's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId"
      },
      "registerAsSeller()": {
        "notice": "Registers msg.sender a seller so that he/she can accept payments."
      },
      "relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts the Payment process via relay-by-operator.  Executed by an operator, who relays the MetaTX with the buyer's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract."
      },
      "setIsSellerRegistrationRequired(bool)": {
        "notice": "Sets whether sellers are required to register in this contract before being,  able to accept payments. "
      },
      "setPaymentWindow(uint256)": {
        "notice": "Sets the amount of time available to the operator, after the payment starts,  to confirm either the success of the failure of the asset transfer.   After this time, the payment moves to FAILED, allowing buyer to withdraw."
      },
      "splitFundingSources(address,uint256)": {
        "notice": "Splits the funds required to pay 'amount' into two source:  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract."
      },
      "withdraw()": {
        "notice": "Transfers ERC20 avaliable in this  contract's balanceOf[msg.sender] to msg.sender"
      }
    },
    "notice": "Payments Contract in ERC20. Upon transfer of ERC20 tokens to this contract, these remain locked until an Operator confirms the success of failure of the asset transfer required to fulfil this payment. If no confirmation is recevied from the operator during the PaymentWindow, all of buyer's received tokens are made available to the buyer for refund. To start a payment, the signatures of both the buyer and the Operator are required. - in the 'relayedPay' method, the Operator is the msg.sender, and the buyerSig is provided; - in the 'pay' method, the buyer is the msg.sender, and the operatorSig is provided. This contract maintains the balances of all users, it does not transfer them automatically. Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender] If a buyer has non-zero local balance at the moment of starting a new payment,  the contract reuses it, and only transfers the remainder required (if any)  from the external ERC20 contract.  Each payment has the following States Machine: - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay/relayedPay - ASSET_TRANSFERRING -> PAID, triggered by assetTransferSuccess - ASSET_TRANSFERRING -> FAILED, triggered implicitly by now > expirationTime - ASSET_TRANSFERRING -> NOT_STARTED, triggered by assetTransferFailure - FAILED -> NOT_STARTED, triggered by refund or refundAndWithdraw - FAILED -> ASSET_TRANSFERRING, triggered by new pay/relayedPay NOTE: To ensure that the a payment process proceeds as expected when the payment starts, upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime} is stored in the payment struct, and used throught the payment, regardless of any possible modifications to the contract's storage.",
    "version": 1
  }
}