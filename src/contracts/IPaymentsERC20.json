{
  "contractName": "IPaymentsERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyerRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "NewSeller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "Payin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "PaymentWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "setPaymentWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isRequired",
          "type": "bool"
        }
      ],
      "name": "setIsSellerRegistrationRequired",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "buyerSignature",
          "type": "bytes"
        }
      ],
      "name": "relayedPay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "assetTransferSuccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "assetTransferFailed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refundAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSellerRegistrationRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isRegisteredSeller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "erc20BalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum IPaymentsERC20.States",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feesCollector",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymentsERC20.Payment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentState",
      "outputs": [
        {
          "internalType": "enum IPaymentsERC20.States",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptedCurrency",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "enoughFundsAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "maxFundsAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "splitFundingSources",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "externalFunds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "localFunds",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        }
      ],
      "name": "checkPaymentInputs",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeBPS",
          "type": "uint256"
        }
      ],
      "name": "computeFeeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyerRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"NewSeller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"Payin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"PaymentWindow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedCurrency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"assetTransferFailed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"assetTransferSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"}],\"name\":\"checkPaymentInputs\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBPS\",\"type\":\"uint256\"}],\"name\":\"computeFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"enoughFundsAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"erc20BalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isRegisteredSeller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSellerRegistrationRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"maxFundsAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IPaymentsERC20.States\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsERC20.Payment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentState\",\"outputs\":[{\"internalType\":\"enum IPaymentsERC20.States\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refundAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"buyerSignature\",\"type\":\"bytes\"}],\"name\":\"relayedPay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isRequired\",\"type\":\"bool\"}],\"name\":\"setIsSellerRegistrationRequired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"setPaymentWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"splitFundingSources\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"externalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"localFunds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptedCurrency()\":{\"returns\":{\"_0\":\"the string describing the currency\"}},\"allowance(address)\":{\"params\":{\"buyer\":\"the address of the buyer\"},\"returns\":{\"_0\":\"the amount allowed by buyer\"}},\"assetTransferFailed(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"assetTransferSuccess(bytes32)\":{\"details\":\"Moves payment to PAID state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"balanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the local balance\"}},\"computeFeeAmount(uint256,uint256)\":{\"returns\":{\"_0\":\"the fee amount\"}},\"enoughFundsAvailable(address,uint256)\":{\"returns\":{\"_0\":\"a bool, true is enough available\"}},\"erc20BalanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the balance in the external ERC20 contract\"}},\"isRegisteredSeller(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"isRegistered as seller\"}},\"maxFundsAvailable(address)\":{\"returns\":{\"_0\":\"the max funds available\"}},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"inp\":\"The struct containing all required payment data\",\"operatorSignature\":\"The signature of 'inp' by the operator\"}},\"paymentInfo(bytes32)\":{\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the struct stored for the payment\"}},\"paymentState(bytes32)\":{\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid\"}},\"paymentWindow()\":{\"returns\":{\"_0\":\"the payment window\"}},\"refund(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"refundAndWithdraw(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"buyerSignature\":\"The signature of 'inp' by the buyer\",\"inp\":\"The struct containing all required payment data\"}},\"setIsSellerRegistrationRequired(bool)\":{\"params\":{\"isRequired\":\"(bool) if true, registration is required.\"}},\"setPaymentWindow(uint256)\":{\"params\":{\"window\":\"The amount of time available, in seconds.\"}},\"splitFundingSources(address,uint256)\":{\"returns\":{\"externalFunds\":\"- the amount of ERC20 required from the external ERC20 contract.\",\"localFunds\":\"- the amount of ERC20 local funds required. \"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptedCurrency()\":{\"notice\":\"Returns a descriptor about the currency that this contract accepts\"},\"allowance(address)\":{\"notice\":\"Returns the allowance that the buyer has approved  directly in the ERC20 contract in favour of this contract.\"},\"assetTransferFailed(bytes32)\":{\"notice\":\"Confirms the failure of asset transfer and refunds buyer.  Needs to be executed by the operator.  Buyer's balance is updated, allowing explicit withdrawal.  It resets all data related to this payment.\"},\"assetTransferSuccess(bytes32)\":{\"notice\":\"Confirms the asset transfer.  Needs to be executed by the operator.  Updates balances of seller and feesCollector.\"},\"balanceOf(address)\":{\"notice\":\"Returns the local ERC20 balance of address that is stored in this  contract, and hence, available for withdrawal.\"},\"checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))\":{\"notice\":\"Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled.\"},\"computeFeeAmount(uint256,uint256)\":{\"notice\":\"Safe compute fee amount  Returns a values that is guaranteed to be less or equal to total provided amount  The safety check should be unnecessary, since only feeBPS < 10000 are accepted  when receiving a payment.\"},\"enoughFundsAvailable(address,uint256)\":{\"notice\":\"Returns true if the 'amount' required for a payment is available to this contract.  In more detail: returns true if the sum of the buyer's local balance in this contract,  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\"},\"erc20()\":{\"notice\":\"Returns the address of the ERC20 contract from which  tokens are accepted for payments\"},\"erc20BalanceOf(address)\":{\"notice\":\"Returns ERC20 balance of address in the ERC20 contract\"},\"isRegisteredSeller(address)\":{\"notice\":\"Returns true if the address provided is a registered seller\"},\"isSellerRegistrationRequired()\":{\"notice\":\"Returns true if sellers need to be registered to be able to accept payments\"},\"maxFundsAvailable(address)\":{\"notice\":\"Returns the maximum amount of funds available to a buyer  In more detail: returns the sum of the buyer's local balance in this contract,  plus the funds available and approved in the ERC20 contract.\"},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts Payment process directly by the buyer.  Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.\"},\"paymentInfo(bytes32)\":{\"notice\":\"Returns all data stored in a payment\"},\"paymentState(bytes32)\":{\"notice\":\"Returns the state of a payment.  It maps 1-to-1 with the stored variable, with the exeption of  an ASSET_TRANSFERRING that has gone beyond expirationTime.\"},\"paymentWindow()\":{\"notice\":\"Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator\"},\"refund(bytes32)\":{\"notice\":\"Moves buyer's provided funds to buyer's balance.  Anybody can call this function.  Requires current state == FAILED to proceed.  After updating buyer's balance, he/she can later withdraw.  It resets all data related to this payment.\"},\"refundAndWithdraw(bytes32)\":{\"notice\":\"Exectutes refund and withdraw in one transaction.  Needs to be called by buyer.  All of buyer's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId\"},\"registerAsSeller()\":{\"notice\":\"Registers msg.sender a seller so that he/she can accept payments.\"},\"relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts the Payment process via relay-by-operator.  Executed by an operator, who relays the MetaTX with the buyer's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.\"},\"setIsSellerRegistrationRequired(bool)\":{\"notice\":\"Sets whether sellers are required to register in this contract before being,  able to accept payments. \"},\"setPaymentWindow(uint256)\":{\"notice\":\"Sets the amount of time available to the operator, after the payment starts,  to confirm either the success of the failure of the asset transfer.   After this time, the payment moves to FAILED, allowing buyer to withdraw.\"},\"splitFundingSources(address,uint256)\":{\"notice\":\"Splits the funds required to pay 'amount' into two source:  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\"},\"withdraw()\":{\"notice\":\"Transfers ERC20 avaliable in this  contract's balanceOf[msg.sender] to msg.sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Payments/IPaymentsERC20.sol\":\"IPaymentsERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2b7a01bbc90040fd4a48bc143ac5a192da3b9bfc559ac08a78eaca40bf49e436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8a02af79b7d1c4eaa385d3b9d26509ac2619eab43bfbbc2ef9ef74508f8146\",\"dweb:/ipfs/QmWhEKw9ZmDjc9qfLmJcrxgopoCvbBNyFhUCJSewhSpzRi\"]},\"openzeppelin-solidity/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x75800223458de145e6088276ab661222e22557d7518459e1ffc57bb5b0496542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://504433dd10f0037339624055d52df67de43408a4d429eb546c6cb17e5c5a6ae6\",\"dweb:/ipfs/QmQfRTjvbsn9kCc7MNC2E7X4tzpYw4sEPPMpdyWVi5QQNj\"]},\"project:/contracts/Payments/EIP712Verifier.sol\":{\"keccak256\":\"0x256da69bed9a86b08119642269fea0e6ab887cf071dd17a396c3f7f4a8adca18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f849a1708085404d863dc42ebbbee5ebb86ae578343f69ed6002d8f48146327b\",\"dweb:/ipfs/QmXArRWBduN99osdaj6hePM4CdubtsmArRBGYACLEhT3Yc\"]},\"project:/contracts/Payments/FeesCollectors.sol\":{\"keccak256\":\"0xd6daf1723b8e9d16f4685453b146516390199fcc59c1e4f077bbd803f1455d87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3fdad1ae9ac7b06f337713d22e5ddbcd446f5092c1750a8a9cd16d3ce81e6c5\",\"dweb:/ipfs/QmQ4e7WNR2ews5zTCe76us2iok29j4ABkDxT92XyEyTx2C\"]},\"project:/contracts/Payments/IEIP712Verifier.sol\":{\"keccak256\":\"0x2f510f3e2603c1f1d5a1e7419f45ca5a206e00692cd61b2ef2549c930074b904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c2ddef9db277df34e8adc44097505f3af7d8d228241bc5c3e4fea6f229c7222\",\"dweb:/ipfs/QmYmdQTYwUwNhRM55JqVVRq3RXTGWAvUY3BHAm8cdXTy4N\"]},\"project:/contracts/Payments/IPaymentsERC20.sol\":{\"keccak256\":\"0xc0b6f26ffafca96f1f7ac6241af44819dff45ead12185a5fa70b02f0a5ce6874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96e8eb69b20e292db3c727eb44be03f08ad2d4bb127fc0db567720c46b139e33\",\"dweb:/ipfs/QmaXC5P8XqnzUpFohfKiT6WjLdvyCK8wTzQjkCv1qnSz9x\"]},\"project:/contracts/Payments/Operators.sol\":{\"keccak256\":\"0x5c22ace248a78e2d125de7c40523a462ce4e6c53439cb744318052f2f1dfb6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07e1d416fc7d2ee78da7b5d4a699f3c8d5409676e6dfabb3032171bf3ea1f5d3\",\"dweb:/ipfs/QmZ7h7vaZqqyaiD8fLXKAaNvNAA4F9TZeVB85sAGP8ywL3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"./FeesCollectors.sol\";\nimport \"./EIP712Verifier.sol\";\n\n/**\n * @notice Payments Contract in ERC20.\n *\n * Upon transfer of ERC20 tokens to this contract, these remain\n * locked until an Operator confirms the success of failure of the\n * asset transfer required to fulfil this payment.\n *\n * If no confirmation is recevied from the operator during the PaymentWindow,\n * all of buyer's received tokens are made available to the buyer for refund.\n *\n * To start a payment, the signatures of both the buyer and the Operator are required.\n * - in the 'relayedPay' method, the Operator is the msg.sender, and the buyerSig is provided;\n * - in the 'pay' method, the buyer is the msg.sender, and the operatorSig is provided.\n *\n * This contract maintains the balances of all users, it does not transfer them automatically.\n * Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender]\n * If a buyer has non-zero local balance at the moment of starting a new payment, \n * the contract reuses it, and only transfers the remainder required (if any) \n * from the external ERC20 contract. \n *\n * Each payment has the following States Machine:\n * - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay/relayedPay\n * - ASSET_TRANSFERRING -> PAID, triggered by assetTransferSuccess\n * - ASSET_TRANSFERRING -> FAILED, triggered implicitly by now > expirationTime\n * - ASSET_TRANSFERRING -> NOT_STARTED, triggered by assetTransferFailure\n * - FAILED -> NOT_STARTED, triggered by refund or refundAndWithdraw\n * - FAILED -> ASSET_TRANSFERRING, triggered by new pay/relayedPay\n *\n * NOTE: To ensure that the a payment process proceeds as expected when the payment starts,\n * upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime}\n * is stored in the payment struct, and used throught the payment, regardless of\n * any possible modifications to the contract's storage.\n *\n */\n\nimport './IEIP712Verifier.sol';\n\ninterface IPaymentsERC20 is IEIP712Verifier {\n    event PaymentWindow(uint256 window);\n    event NewSeller(address indexed seller);\n    event BuyerRefunded(bytes32 indexed paymentId, address indexed buyer);\n    event Payin(\n        bytes32 indexed paymentId,\n        address indexed buyer,\n        address indexed seller\n    );\n    event Paid(bytes32 paymentId);\n    event Withdraw(address indexed user, uint256 amount);\n\n    enum States {\n        NotStarted,\n        AssetTransferring,\n        Failed,\n        Paid\n    }\n\n    /**\n     * @notice Main struct stored with every payment.\n     *  feeBPS is the percentage fee expressed in Basis Points (bps), typical in finance\n     *  Examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n     */\n    struct Payment {\n        States state;\n        address buyer;\n        address seller;\n        address operator;\n        address feesCollector;\n        uint256 expirationTime;\n        uint16 feeBPS;\n        uint256 amount;\n    }\n\n    /**\n     * @notice Sets the amount of time available to the operator, after the payment starts,\n     *  to confirm either the success of the failure of the asset transfer. \n     *  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n     * @param window The amount of time available, in seconds.\n     */\n    function setPaymentWindow(uint256 window) external;\n\n    /**\n     * @notice Sets whether sellers are required to register in this contract before being,\n     *  able to accept payments. \n     * @param isRequired (bool) if true, registration is required.\n     */\n    function setIsSellerRegistrationRequired(bool isRequired) external;\n\n    /**\n     * @notice Registers msg.sender a seller so that he/she can accept payments.\n     */\n    function registerAsSeller() external;\n\n    /**\n     * @notice Starts the Payment process via relay-by-operator.\n     *  Executed by an operator, who relays the MetaTX with the buyer's signature.\n     *  The buyer must have approved the amount to this contract before.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the ERC20\n     *  in this contract.\n     * @dev Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param buyerSignature The signature of 'inp' by the buyer\n     */\n    function relayedPay(\n        PaymentInput calldata inp,\n        bytes calldata buyerSignature\n    ) external;\n\n    /**\n     * @notice Starts Payment process directly by the buyer.\n     *  Executed by the buyer, who relays the MetaTX with the operator's signature.\n     *  The buyer must have approved the amount to this contract before.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the ERC20\n     *  in this contract.\n     * @dev Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param operatorSignature The signature of 'inp' by the operator\n     */\n    function pay(PaymentInput calldata inp, bytes calldata operatorSignature) external;\n\n    /**\n     * @notice Confirms the asset transfer.\n     *  Needs to be executed by the operator.\n     *  Updates balances of seller and feesCollector.\n     * @dev Moves payment to PAID state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function assetTransferSuccess(bytes32 paymentId) external;\n\n    /**\n     * @notice Confirms the failure of asset transfer and refunds buyer.\n     *  Needs to be executed by the operator.\n     *  Buyer's balance is updated, allowing explicit withdrawal.\n     *  It resets all data related to this payment.\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function assetTransferFailed(bytes32 paymentId) external;\n\n    /**\n     * @notice Moves buyer's provided funds to buyer's balance.\n     *  Anybody can call this function.\n     *  Requires current state == FAILED to proceed.\n     *  After updating buyer's balance, he/she can later withdraw.\n     *  It resets all data related to this payment.\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refund(bytes32 paymentId) external;\n\n    /**\n     * @notice Exectutes refund and withdraw in one transaction.\n     *  Needs to be called by buyer.\n     *  All of buyer's balance in the contract is withdrawn,\n     *  not only the part that was locked in this particular paymentId\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refundAndWithdraw(bytes32 paymentId) external;\n\n    /**\n     * @notice Transfers ERC20 avaliable in this\n     *  contract's balanceOf[msg.sender] to msg.sender\n     */\n    function withdraw() external;\n\n    // VIEW FUNCTIONS\n\n    /**\n     * @notice Returns true if sellers need to be registered to be able to accept payments\n     */    \n    function isSellerRegistrationRequired() external view returns (bool);\n\n    /**\n     * @notice Returns true if the address provided is a registered seller\n     * @param addr the address that is queried\n     * @return isRegistered as seller\n     */    \n    function isRegisteredSeller(address addr) external view returns (bool);\n\n    /**\n     * @notice Returns the address of the ERC20 contract from which\n     *  tokens are accepted for payments\n     */\n    function erc20() external view returns (address);\n\n    /**\n     * @notice Returns the local ERC20 balance of address that is stored in this\n     *  contract, and hence, available for withdrawal.\n     * @param addr the address that is queried\n     * @return the local balance\n     */\n    function balanceOf(address addr) external view returns (uint256);\n\n    /**\n     * @notice Returns ERC20 balance of address in the ERC20 contract\n     * @param addr the address that is queried\n     * @return the balance in the external ERC20 contract\n     */\n    function erc20BalanceOf(address addr) external view returns (uint256);\n\n    /**\n     * @notice Returns the allowance that the buyer has approved\n     *  directly in the ERC20 contract in favour of this contract.\n     * @param buyer the address of the buyer\n     * @return the amount allowed by buyer\n     */\n    function allowance(address buyer) external view returns (uint256);\n\n    /**\n     * @notice Returns all data stored in a payment\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the struct stored for the payment\n     */\n    function paymentInfo(bytes32 paymentId)\n        external\n        view\n        returns (Payment memory);\n\n    /**\n     * @notice Returns the state of a payment.\n     *  It maps 1-to-1 with the stored variable, with the exeption of\n     *  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid\n     */\n    function paymentState(bytes32 paymentId) external view returns (States);\n\n    /**\n     * @notice Returns the amount of seconds that a payment\n     *  can remain in ASSET_TRANSFERRING state without positive\n     *  or negative confirmation by the operator\n     * @return the payment window\n     */\n    function paymentWindow() external view returns (uint256);\n\n    /**\n     * @notice Returns a descriptor about the currency that this contract accepts\n     * @return the string describing the currency\n     */\n    function acceptedCurrency() external view returns (string memory);\n\n    /**\n     * @notice Returns true if the 'amount' required for a payment is available to this contract.\n     *  In more detail: returns true if the sum of the buyer's local balance in this contract,\n     *  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n     * @return a bool, true is enough available\n     */\n    function enoughFundsAvailable(address buyer, uint256 amount)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @notice Returns the maximum amount of funds available to a buyer\n     *  In more detail: returns the sum of the buyer's local balance in this contract,\n     *  plus the funds available and approved in the ERC20 contract.\n     * @return the max funds available\n     */\n    function maxFundsAvailable(address buyer) external view returns (uint256);\n\n    /**\n     * @notice Splits the funds required to pay 'amount' into two source:\n     *  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n     *  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n     * @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n     * @return localFunds - the amount of ERC20 local funds required. \n     */\n    function splitFundingSources(address buyer, uint256 amount)\n        external\n        view\n        returns (uint256 externalFunds, uint256 localFunds);\n\n    /**\n     * @notice Reverts unless the requirements for a PaymentInput that\n     *  are common to both pay and relayedPay are fulfilled.\n     */\n    function checkPaymentInputs(PaymentInput calldata inp) external view;\n\n    // PURE FUNCTIONS\n\n    /**\n     * @notice Safe compute fee amount\n     *  Returns a values that is guaranteed to be less or equal to total provided amount\n     *  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n     *  when receiving a payment.\n     * @return the fee amount\n     */\n    function computeFeeAmount(uint256 amount, uint256 feeBPS)\n        external\n        pure\n        returns (uint256);\n}\n",
  "sourcePath": "/Users/toni/gits/cryptoPayments/contracts/Payments/IPaymentsERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/Payments/IPaymentsERC20.sol",
    "exportedSymbols": {
      "Context": [
        210
      ],
      "ECDSA": [
        354
      ],
      "EIP712": [
        492
      ],
      "EIP712Verifier": [
        563
      ],
      "FeesCollectors": [
        687
      ],
      "IEIP712Verifier": [
        720
      ],
      "IERC20": [
        187
      ],
      "IPaymentsERC20": [
        967
      ],
      "Operators": [
        1091
      ],
      "Ownable": [
        109
      ]
    },
    "id": 968,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 722,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 723,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 188,
        "src": "58:64:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 724,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 688,
        "src": "123:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 725,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 564,
        "src": "154:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/IEIP712Verifier.sol",
        "file": "./IEIP712Verifier.sol",
        "id": 726,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 721,
        "src": "2059:31:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 727,
              "name": "IEIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 720,
              "src": "2120:15:8"
            },
            "id": 728,
            "nodeType": "InheritanceSpecifier",
            "src": "2120:15:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 967,
        "linearizedBaseContracts": [
          967,
          720
        ],
        "name": "IPaymentsERC20",
        "nameLocation": "2102:14:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 732,
            "name": "PaymentWindow",
            "nameLocation": "2148:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "2170:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2162:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2162:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2161:16:8"
            },
            "src": "2142:36:8"
          },
          {
            "anonymous": false,
            "id": 736,
            "name": "NewSeller",
            "nameLocation": "2189:9:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2215:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "2199:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2198:24:8"
            },
            "src": "2183:40:8"
          },
          {
            "anonymous": false,
            "id": 742,
            "name": "BuyerRefunded",
            "nameLocation": "2234:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2264:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2248:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2291:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2275:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2275:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:50:8"
            },
            "src": "2228:70:8"
          },
          {
            "anonymous": false,
            "id": 750,
            "name": "Payin",
            "nameLocation": "2309:5:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2340:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "2324:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2375:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "2359:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2359:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2406:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "2390:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2314:104:8"
            },
            "src": "2303:116:8"
          },
          {
            "anonymous": false,
            "id": 754,
            "name": "Paid",
            "nameLocation": "2430:4:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2443:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "2435:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2434:19:8"
            },
            "src": "2424:30:8"
          },
          {
            "anonymous": false,
            "id": 760,
            "name": "Withdraw",
            "nameLocation": "2465:8:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2490:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "2474:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2474:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2504:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "2496:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2473:38:8"
            },
            "src": "2459:53:8"
          },
          {
            "canonicalName": "IPaymentsERC20.States",
            "id": 765,
            "members": [
              {
                "id": 761,
                "name": "NotStarted",
                "nameLocation": "2540:10:8",
                "nodeType": "EnumValue",
                "src": "2540:10:8"
              },
              {
                "id": 762,
                "name": "AssetTransferring",
                "nameLocation": "2560:17:8",
                "nodeType": "EnumValue",
                "src": "2560:17:8"
              },
              {
                "id": 763,
                "name": "Failed",
                "nameLocation": "2587:6:8",
                "nodeType": "EnumValue",
                "src": "2587:6:8"
              },
              {
                "id": 764,
                "name": "Paid",
                "nameLocation": "2603:4:8",
                "nodeType": "EnumValue",
                "src": "2603:4:8"
              }
            ],
            "name": "States",
            "nameLocation": "2523:6:8",
            "nodeType": "EnumDefinition",
            "src": "2518:95:8"
          },
          {
            "canonicalName": "IPaymentsERC20.Payment",
            "id": 783,
            "members": [
              {
                "constant": false,
                "id": 768,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "2878:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2871:12:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$765",
                  "typeString": "enum IPaymentsERC20.States"
                },
                "typeName": {
                  "id": 767,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 766,
                    "name": "States",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 765,
                    "src": "2871:6:8"
                  },
                  "referencedDeclaration": 765,
                  "src": "2871:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$765",
                    "typeString": "enum IPaymentsERC20.States"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 770,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "2901:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2893:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 769,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2893:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 772,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2924:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2916:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 771,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2916:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 774,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "2948:8:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2940:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 773,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2940:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 776,
                "mutability": "mutable",
                "name": "feesCollector",
                "nameLocation": "2974:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2966:21:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 775,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2966:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 778,
                "mutability": "mutable",
                "name": "expirationTime",
                "nameLocation": "3005:14:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2997:22:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 777,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2997:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 780,
                "mutability": "mutable",
                "name": "feeBPS",
                "nameLocation": "3036:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "3029:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 779,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "3029:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 782,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3060:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "3052:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 781,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3052:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nameLocation": "2853:7:8",
            "nodeType": "StructDefinition",
            "scope": 967,
            "src": "2846:227:8",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 784,
              "nodeType": "StructuredDocumentation",
              "src": "3079:325:8",
              "text": " @notice Sets the amount of time available to the operator, after the payment starts,\n  to confirm either the success of the failure of the asset transfer. \n  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n @param window The amount of time available, in seconds."
            },
            "functionSelector": "982ed326",
            "id": 789,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPaymentWindow",
            "nameLocation": "3418:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "3443:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "3435:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3434:16:8"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3459:0:8"
            },
            "scope": 967,
            "src": "3409:51:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 790,
              "nodeType": "StructuredDocumentation",
              "src": "3466:204:8",
              "text": " @notice Sets whether sellers are required to register in this contract before being,\n  able to accept payments. \n @param isRequired (bool) if true, registration is required."
            },
            "functionSelector": "1a29b6ab",
            "id": 795,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setIsSellerRegistrationRequired",
            "nameLocation": "3684:31:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "isRequired",
                  "nameLocation": "3721:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "3716:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3716:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3715:17:8"
            },
            "returnParameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3741:0:8"
            },
            "scope": 967,
            "src": "3675:67:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "3748:92:8",
              "text": " @notice Registers msg.sender a seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 799,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "3854:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3870:2:8"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3881:0:8"
            },
            "scope": 967,
            "src": "3845:37:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 800,
              "nodeType": "StructuredDocumentation",
              "src": "3888:690:8",
              "text": " @notice Starts the Payment process via relay-by-operator.\n  Executed by an operator, who relays the MetaTX with the buyer's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param buyerSignature The signature of 'inp' by the buyer"
            },
            "functionSelector": "06a212ae",
            "id": 808,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "relayedPay",
            "nameLocation": "4592:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "4634:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "4612:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 802,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 801,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "4612:12:8"
                    },
                    "referencedDeclaration": 707,
                    "src": "4612:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "buyerSignature",
                  "nameLocation": "4662:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "4647:29:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4647:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4602:80:8"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4691:0:8"
            },
            "scope": 967,
            "src": "4583:109:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 809,
              "nodeType": "StructuredDocumentation",
              "src": "4698:693:8",
              "text": " @notice Starts Payment process directly by the buyer.\n  Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 817,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "5405:3:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "5431:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "5409:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 811,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 810,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "5409:12:8"
                    },
                    "referencedDeclaration": 707,
                    "src": "5409:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "5451:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "5436:32:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5436:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5408:61:8"
            },
            "returnParameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5478:0:8"
            },
            "scope": 967,
            "src": "5396:83:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 818,
              "nodeType": "StructuredDocumentation",
              "src": "5485:263:8",
              "text": " @notice Confirms the asset transfer.\n  Needs to be executed by the operator.\n  Updates balances of seller and feesCollector.\n @dev Moves payment to PAID state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "b3080298",
            "id": 823,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferSuccess",
            "nameLocation": "5762:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "5791:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "5783:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5783:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5782:19:8"
            },
            "returnParameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5810:0:8"
            },
            "scope": 967,
            "src": "5753:58:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 824,
              "nodeType": "StructuredDocumentation",
              "src": "5817:363:8",
              "text": " @notice Confirms the failure of asset transfer and refunds buyer.\n  Needs to be executed by the operator.\n  Buyer's balance is updated, allowing explicit withdrawal.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2ce10fcf",
            "id": 829,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferFailed",
            "nameLocation": "6194:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 826,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "6222:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "6214:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6214:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6213:19:8"
            },
            "returnParameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6241:0:8"
            },
            "scope": 967,
            "src": "6185:57:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 830,
              "nodeType": "StructuredDocumentation",
              "src": "6248:402:8",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n  Anybody can call this function.\n  Requires current state == FAILED to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 835,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "6664:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "6679:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "6671:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6671:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6670:19:8"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6698:0:8"
            },
            "scope": 967,
            "src": "6655:44:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 836,
              "nodeType": "StructuredDocumentation",
              "src": "6705:360:8",
              "text": " @notice Exectutes refund and withdraw in one transaction.\n  Needs to be called by buyer.\n  All of buyer's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 841,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "7079:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "7105:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "7097:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7097:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7096:19:8"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7124:0:8"
            },
            "scope": 967,
            "src": "7070:55:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 842,
              "nodeType": "StructuredDocumentation",
              "src": "7131:115:8",
              "text": " @notice Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 845,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "7260:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7268:2:8"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7279:0:8"
            },
            "scope": 967,
            "src": "7251:29:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 846,
              "nodeType": "StructuredDocumentation",
              "src": "7309:102:8",
              "text": " @notice Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 851,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "7429:28:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7457:2:8"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "7483:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7483:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7482:6:8"
            },
            "scope": 967,
            "src": "7420:69:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 852,
              "nodeType": "StructuredDocumentation",
              "src": "7495:171:8",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return isRegistered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 859,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "7684:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7711:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "7703:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7703:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7702:14:8"
            },
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "7740:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7740:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7739:6:8"
            },
            "scope": 967,
            "src": "7675:71:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 860,
              "nodeType": "StructuredDocumentation",
              "src": "7752:120:8",
              "text": " @notice Returns the address of the ERC20 contract from which\n  tokens are accepted for payments"
            },
            "functionSelector": "785e9e86",
            "id": 865,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "erc20",
            "nameLocation": "7886:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7891:2:8"
            },
            "returnParameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "7917:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7917:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7916:9:8"
            },
            "scope": 967,
            "src": "7877:49:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 866,
              "nodeType": "StructuredDocumentation",
              "src": "7932:227:8",
              "text": " @notice Returns the local ERC20 balance of address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 873,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "8173:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8191:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "8183:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8183:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8182:14:8"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "8220:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8220:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8219:9:8"
            },
            "scope": 967,
            "src": "8164:65:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 874,
              "nodeType": "StructuredDocumentation",
              "src": "8235:186:8",
              "text": " @notice Returns ERC20 balance of address in the ERC20 contract\n @param addr the address that is queried\n @return the balance in the external ERC20 contract"
            },
            "functionSelector": "02519da3",
            "id": 881,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "erc20BalanceOf",
            "nameLocation": "8435:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8458:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "8450:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8450:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8449:14:8"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "8487:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8487:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8486:9:8"
            },
            "scope": 967,
            "src": "8426:70:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 882,
              "nodeType": "StructuredDocumentation",
              "src": "8502:231:8",
              "text": " @notice Returns the allowance that the buyer has approved\n  directly in the ERC20 contract in favour of this contract.\n @param buyer the address of the buyer\n @return the amount allowed by buyer"
            },
            "functionSelector": "3e5beab9",
            "id": 889,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "8747:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "8765:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "8757:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8757:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8756:15:8"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "8795:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8795:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8794:9:8"
            },
            "scope": 967,
            "src": "8738:66:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 890,
              "nodeType": "StructuredDocumentation",
              "src": "8810:179:8",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 898,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "9003:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9023:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "9015:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9015:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9014:19:8"
            },
            "returnParameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "9081:14:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                    "typeString": "struct IPaymentsERC20.Payment"
                  },
                  "typeName": {
                    "id": 895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 894,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 783,
                      "src": "9081:7:8"
                    },
                    "referencedDeclaration": 783,
                    "src": "9081:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                      "typeString": "struct IPaymentsERC20.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9080:16:8"
            },
            "scope": 967,
            "src": "8994:103:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 899,
              "nodeType": "StructuredDocumentation",
              "src": "9103:353:8",
              "text": " @notice Returns the state of a payment.\n  It maps 1-to-1 with the stored variable, with the exeption of\n  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid"
            },
            "functionSelector": "34b778ed",
            "id": 907,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "9470:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9491:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "9483:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9483:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9482:19:8"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "9525:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$765",
                    "typeString": "enum IPaymentsERC20.States"
                  },
                  "typeName": {
                    "id": 904,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 903,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 765,
                      "src": "9525:6:8"
                    },
                    "referencedDeclaration": 765,
                    "src": "9525:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9524:8:8"
            },
            "scope": 967,
            "src": "9461:72:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 908,
              "nodeType": "StructuredDocumentation",
              "src": "9539:218:8",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window"
            },
            "functionSelector": "cab55d56",
            "id": 913,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "9771:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9784:2:8"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "9810:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9810:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9809:9:8"
            },
            "scope": 967,
            "src": "9762:57:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 914,
              "nodeType": "StructuredDocumentation",
              "src": "9825:143:8",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 919,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "9982:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9998:2:8"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "10024:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10024:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10023:15:8"
            },
            "scope": 967,
            "src": "9973:66:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 920,
              "nodeType": "StructuredDocumentation",
              "src": "10045:351:8",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n  In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n @return a bool, true is enough available"
            },
            "functionSelector": "9cfd495c",
            "id": 929,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "10410:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "10439:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "10431:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10431:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10454:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "10446:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10446:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10430:31:8"
            },
            "returnParameters": {
              "id": 928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "10509:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 926,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10509:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10508:6:8"
            },
            "scope": 967,
            "src": "10401:114:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 930,
              "nodeType": "StructuredDocumentation",
              "src": "10521:278:8",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n  In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the funds available and approved in the ERC20 contract.\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 937,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "10813:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "10839:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "10831:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10831:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10830:15:8"
            },
            "returnParameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 935,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "10869:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10869:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10868:9:8"
            },
            "scope": 967,
            "src": "10804:74:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 938,
              "nodeType": "StructuredDocumentation",
              "src": "10884:458:8",
              "text": " @notice Splits the funds required to pay 'amount' into two source:\n  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n @return localFunds - the amount of ERC20 local funds required. "
            },
            "functionSelector": "317cb018",
            "id": 949,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "11356:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "11384:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "11376:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11376:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 942,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11399:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "11391:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11391:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11375:31:8"
            },
            "returnParameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "11462:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "11454:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11454:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "11485:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "11477:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11477:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11453:43:8"
            },
            "scope": 967,
            "src": "11347:150:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 950,
              "nodeType": "StructuredDocumentation",
              "src": "11503:143:8",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled."
            },
            "functionSelector": "00f3b6e8",
            "id": 956,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "11660:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "11701:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 956,
                  "src": "11679:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 952,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 951,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "11679:12:8"
                    },
                    "referencedDeclaration": 707,
                    "src": "11679:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11678:27:8"
            },
            "returnParameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11719:0:8"
            },
            "scope": 967,
            "src": "11651:69:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 957,
              "nodeType": "StructuredDocumentation",
              "src": "11749:290:8",
              "text": " @notice Safe compute fee amount\n  Returns a values that is guaranteed to be less or equal to total provided amount\n  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n  when receiving a payment.\n @return the fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 966,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "12053:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12078:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "12070:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12070:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "12094:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "12086:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12086:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12069:32:8"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "12149:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12149:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12148:9:8"
            },
            "scope": 967,
            "src": "12044:114:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 968,
        "src": "2092:10068:8",
        "usedErrors": []
      }
    ],
    "src": "32:12129:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Payments/IPaymentsERC20.sol",
    "exportedSymbols": {
      "Context": [
        210
      ],
      "ECDSA": [
        354
      ],
      "EIP712": [
        492
      ],
      "EIP712Verifier": [
        563
      ],
      "FeesCollectors": [
        687
      ],
      "IEIP712Verifier": [
        720
      ],
      "IERC20": [
        187
      ],
      "IPaymentsERC20": [
        967
      ],
      "Operators": [
        1091
      ],
      "Ownable": [
        109
      ]
    },
    "id": 968,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 722,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 723,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 188,
        "src": "58:64:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 724,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 688,
        "src": "123:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 725,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 564,
        "src": "154:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/IEIP712Verifier.sol",
        "file": "./IEIP712Verifier.sol",
        "id": 726,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 968,
        "sourceUnit": 721,
        "src": "2059:31:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 727,
              "name": "IEIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 720,
              "src": "2120:15:8"
            },
            "id": 728,
            "nodeType": "InheritanceSpecifier",
            "src": "2120:15:8"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 967,
        "linearizedBaseContracts": [
          967,
          720
        ],
        "name": "IPaymentsERC20",
        "nameLocation": "2102:14:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 732,
            "name": "PaymentWindow",
            "nameLocation": "2148:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "2170:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2162:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2162:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2161:16:8"
            },
            "src": "2142:36:8"
          },
          {
            "anonymous": false,
            "id": 736,
            "name": "NewSeller",
            "nameLocation": "2189:9:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2215:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "2199:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2198:24:8"
            },
            "src": "2183:40:8"
          },
          {
            "anonymous": false,
            "id": 742,
            "name": "BuyerRefunded",
            "nameLocation": "2234:13:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2264:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2248:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2291:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2275:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2275:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:50:8"
            },
            "src": "2228:70:8"
          },
          {
            "anonymous": false,
            "id": 750,
            "name": "Payin",
            "nameLocation": "2309:5:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2340:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "2324:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 746,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2375:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "2359:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2359:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 748,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2406:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 750,
                  "src": "2390:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2314:104:8"
            },
            "src": "2303:116:8"
          },
          {
            "anonymous": false,
            "id": 754,
            "name": "Paid",
            "nameLocation": "2430:4:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2443:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 754,
                  "src": "2435:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 751,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2434:19:8"
            },
            "src": "2424:30:8"
          },
          {
            "anonymous": false,
            "id": 760,
            "name": "Withdraw",
            "nameLocation": "2465:8:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2490:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "2474:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2474:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2504:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 760,
                  "src": "2496:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2496:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2473:38:8"
            },
            "src": "2459:53:8"
          },
          {
            "canonicalName": "IPaymentsERC20.States",
            "id": 765,
            "members": [
              {
                "id": 761,
                "name": "NotStarted",
                "nameLocation": "2540:10:8",
                "nodeType": "EnumValue",
                "src": "2540:10:8"
              },
              {
                "id": 762,
                "name": "AssetTransferring",
                "nameLocation": "2560:17:8",
                "nodeType": "EnumValue",
                "src": "2560:17:8"
              },
              {
                "id": 763,
                "name": "Failed",
                "nameLocation": "2587:6:8",
                "nodeType": "EnumValue",
                "src": "2587:6:8"
              },
              {
                "id": 764,
                "name": "Paid",
                "nameLocation": "2603:4:8",
                "nodeType": "EnumValue",
                "src": "2603:4:8"
              }
            ],
            "name": "States",
            "nameLocation": "2523:6:8",
            "nodeType": "EnumDefinition",
            "src": "2518:95:8"
          },
          {
            "canonicalName": "IPaymentsERC20.Payment",
            "id": 783,
            "members": [
              {
                "constant": false,
                "id": 768,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "2878:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2871:12:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$765",
                  "typeString": "enum IPaymentsERC20.States"
                },
                "typeName": {
                  "id": 767,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 766,
                    "name": "States",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 765,
                    "src": "2871:6:8"
                  },
                  "referencedDeclaration": 765,
                  "src": "2871:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$765",
                    "typeString": "enum IPaymentsERC20.States"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 770,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "2901:5:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2893:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 769,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2893:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 772,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2924:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2916:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 771,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2916:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 774,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "2948:8:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2940:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 773,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2940:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 776,
                "mutability": "mutable",
                "name": "feesCollector",
                "nameLocation": "2974:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2966:21:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 775,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2966:7:8",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 778,
                "mutability": "mutable",
                "name": "expirationTime",
                "nameLocation": "3005:14:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "2997:22:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 777,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2997:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 780,
                "mutability": "mutable",
                "name": "feeBPS",
                "nameLocation": "3036:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "3029:13:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 779,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "3029:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 782,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3060:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 783,
                "src": "3052:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 781,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3052:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nameLocation": "2853:7:8",
            "nodeType": "StructDefinition",
            "scope": 967,
            "src": "2846:227:8",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 784,
              "nodeType": "StructuredDocumentation",
              "src": "3079:325:8",
              "text": " @notice Sets the amount of time available to the operator, after the payment starts,\n  to confirm either the success of the failure of the asset transfer. \n  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n @param window The amount of time available, in seconds."
            },
            "functionSelector": "982ed326",
            "id": 789,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPaymentWindow",
            "nameLocation": "3418:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "3443:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 789,
                  "src": "3435:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3435:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3434:16:8"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3459:0:8"
            },
            "scope": 967,
            "src": "3409:51:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 790,
              "nodeType": "StructuredDocumentation",
              "src": "3466:204:8",
              "text": " @notice Sets whether sellers are required to register in this contract before being,\n  able to accept payments. \n @param isRequired (bool) if true, registration is required."
            },
            "functionSelector": "1a29b6ab",
            "id": 795,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setIsSellerRegistrationRequired",
            "nameLocation": "3684:31:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 792,
                  "mutability": "mutable",
                  "name": "isRequired",
                  "nameLocation": "3721:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "3716:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3716:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3715:17:8"
            },
            "returnParameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3741:0:8"
            },
            "scope": 967,
            "src": "3675:67:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "3748:92:8",
              "text": " @notice Registers msg.sender a seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 799,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "3854:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3870:2:8"
            },
            "returnParameters": {
              "id": 798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3881:0:8"
            },
            "scope": 967,
            "src": "3845:37:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 800,
              "nodeType": "StructuredDocumentation",
              "src": "3888:690:8",
              "text": " @notice Starts the Payment process via relay-by-operator.\n  Executed by an operator, who relays the MetaTX with the buyer's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param buyerSignature The signature of 'inp' by the buyer"
            },
            "functionSelector": "06a212ae",
            "id": 808,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "relayedPay",
            "nameLocation": "4592:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "4634:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "4612:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 802,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 801,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "4612:12:8"
                    },
                    "referencedDeclaration": 707,
                    "src": "4612:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "buyerSignature",
                  "nameLocation": "4662:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "4647:29:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4647:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4602:80:8"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4691:0:8"
            },
            "scope": 967,
            "src": "4583:109:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 809,
              "nodeType": "StructuredDocumentation",
              "src": "4698:693:8",
              "text": " @notice Starts Payment process directly by the buyer.\n  Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 817,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "5405:3:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "5431:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "5409:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 811,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 810,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "5409:12:8"
                    },
                    "referencedDeclaration": 707,
                    "src": "5409:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "5451:17:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "5436:32:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5436:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5408:61:8"
            },
            "returnParameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5478:0:8"
            },
            "scope": 967,
            "src": "5396:83:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 818,
              "nodeType": "StructuredDocumentation",
              "src": "5485:263:8",
              "text": " @notice Confirms the asset transfer.\n  Needs to be executed by the operator.\n  Updates balances of seller and feesCollector.\n @dev Moves payment to PAID state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "b3080298",
            "id": 823,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferSuccess",
            "nameLocation": "5762:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "5791:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 823,
                  "src": "5783:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5783:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5782:19:8"
            },
            "returnParameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5810:0:8"
            },
            "scope": 967,
            "src": "5753:58:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 824,
              "nodeType": "StructuredDocumentation",
              "src": "5817:363:8",
              "text": " @notice Confirms the failure of asset transfer and refunds buyer.\n  Needs to be executed by the operator.\n  Buyer's balance is updated, allowing explicit withdrawal.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2ce10fcf",
            "id": 829,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferFailed",
            "nameLocation": "6194:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 826,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "6222:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "6214:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6214:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6213:19:8"
            },
            "returnParameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6241:0:8"
            },
            "scope": 967,
            "src": "6185:57:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 830,
              "nodeType": "StructuredDocumentation",
              "src": "6248:402:8",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n  Anybody can call this function.\n  Requires current state == FAILED to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 835,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "6664:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "6679:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "6671:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6671:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6670:19:8"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6698:0:8"
            },
            "scope": 967,
            "src": "6655:44:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 836,
              "nodeType": "StructuredDocumentation",
              "src": "6705:360:8",
              "text": " @notice Exectutes refund and withdraw in one transaction.\n  Needs to be called by buyer.\n  All of buyer's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 841,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "7079:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "7105:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "7097:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7097:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7096:19:8"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7124:0:8"
            },
            "scope": 967,
            "src": "7070:55:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 842,
              "nodeType": "StructuredDocumentation",
              "src": "7131:115:8",
              "text": " @notice Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 845,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "7260:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7268:2:8"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7279:0:8"
            },
            "scope": 967,
            "src": "7251:29:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 846,
              "nodeType": "StructuredDocumentation",
              "src": "7309:102:8",
              "text": " @notice Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 851,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "7429:28:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7457:2:8"
            },
            "returnParameters": {
              "id": 850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 851,
                  "src": "7483:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7483:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7482:6:8"
            },
            "scope": 967,
            "src": "7420:69:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 852,
              "nodeType": "StructuredDocumentation",
              "src": "7495:171:8",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return isRegistered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 859,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "7684:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 854,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7711:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "7703:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7703:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7702:14:8"
            },
            "returnParameters": {
              "id": 858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "7740:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7740:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7739:6:8"
            },
            "scope": 967,
            "src": "7675:71:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 860,
              "nodeType": "StructuredDocumentation",
              "src": "7752:120:8",
              "text": " @notice Returns the address of the ERC20 contract from which\n  tokens are accepted for payments"
            },
            "functionSelector": "785e9e86",
            "id": 865,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "erc20",
            "nameLocation": "7886:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7891:2:8"
            },
            "returnParameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "7917:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7917:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7916:9:8"
            },
            "scope": 967,
            "src": "7877:49:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 866,
              "nodeType": "StructuredDocumentation",
              "src": "7932:227:8",
              "text": " @notice Returns the local ERC20 balance of address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 873,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "8173:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 868,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8191:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "8183:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8183:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8182:14:8"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "8220:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8220:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8219:9:8"
            },
            "scope": 967,
            "src": "8164:65:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 874,
              "nodeType": "StructuredDocumentation",
              "src": "8235:186:8",
              "text": " @notice Returns ERC20 balance of address in the ERC20 contract\n @param addr the address that is queried\n @return the balance in the external ERC20 contract"
            },
            "functionSelector": "02519da3",
            "id": 881,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "erc20BalanceOf",
            "nameLocation": "8435:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8458:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "8450:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8450:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8449:14:8"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "8487:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8487:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8486:9:8"
            },
            "scope": 967,
            "src": "8426:70:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 882,
              "nodeType": "StructuredDocumentation",
              "src": "8502:231:8",
              "text": " @notice Returns the allowance that the buyer has approved\n  directly in the ERC20 contract in favour of this contract.\n @param buyer the address of the buyer\n @return the amount allowed by buyer"
            },
            "functionSelector": "3e5beab9",
            "id": 889,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "8747:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "8765:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "8757:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8757:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8756:15:8"
            },
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "8795:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8795:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8794:9:8"
            },
            "scope": 967,
            "src": "8738:66:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 890,
              "nodeType": "StructuredDocumentation",
              "src": "8810:179:8",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 898,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "9003:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9023:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "9015:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9015:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9014:19:8"
            },
            "returnParameters": {
              "id": 897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "9081:14:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                    "typeString": "struct IPaymentsERC20.Payment"
                  },
                  "typeName": {
                    "id": 895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 894,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 783,
                      "src": "9081:7:8"
                    },
                    "referencedDeclaration": 783,
                    "src": "9081:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                      "typeString": "struct IPaymentsERC20.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9080:16:8"
            },
            "scope": 967,
            "src": "8994:103:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 899,
              "nodeType": "StructuredDocumentation",
              "src": "9103:353:8",
              "text": " @notice Returns the state of a payment.\n  It maps 1-to-1 with the stored variable, with the exeption of\n  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid"
            },
            "functionSelector": "34b778ed",
            "id": 907,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "9470:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9491:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "9483:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9483:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9482:19:8"
            },
            "returnParameters": {
              "id": 906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 905,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "9525:6:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$765",
                    "typeString": "enum IPaymentsERC20.States"
                  },
                  "typeName": {
                    "id": 904,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 903,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 765,
                      "src": "9525:6:8"
                    },
                    "referencedDeclaration": 765,
                    "src": "9525:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9524:8:8"
            },
            "scope": 967,
            "src": "9461:72:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 908,
              "nodeType": "StructuredDocumentation",
              "src": "9539:218:8",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window"
            },
            "functionSelector": "cab55d56",
            "id": 913,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "9771:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9784:2:8"
            },
            "returnParameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 913,
                  "src": "9810:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9810:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9809:9:8"
            },
            "scope": 967,
            "src": "9762:57:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 914,
              "nodeType": "StructuredDocumentation",
              "src": "9825:143:8",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 919,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "9982:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9998:2:8"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "10024:13:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10024:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10023:15:8"
            },
            "scope": 967,
            "src": "9973:66:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 920,
              "nodeType": "StructuredDocumentation",
              "src": "10045:351:8",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n  In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n @return a bool, true is enough available"
            },
            "functionSelector": "9cfd495c",
            "id": 929,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "10410:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 922,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "10439:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "10431:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10431:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10454:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "10446:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10446:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10430:31:8"
            },
            "returnParameters": {
              "id": 928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 929,
                  "src": "10509:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 926,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10509:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10508:6:8"
            },
            "scope": 967,
            "src": "10401:114:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 930,
              "nodeType": "StructuredDocumentation",
              "src": "10521:278:8",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n  In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the funds available and approved in the ERC20 contract.\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 937,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "10813:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "10839:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "10831:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10831:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10830:15:8"
            },
            "returnParameters": {
              "id": 936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 935,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "10869:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10869:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10868:9:8"
            },
            "scope": 967,
            "src": "10804:74:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 938,
              "nodeType": "StructuredDocumentation",
              "src": "10884:458:8",
              "text": " @notice Splits the funds required to pay 'amount' into two source:\n  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n @return localFunds - the amount of ERC20 local funds required. "
            },
            "functionSelector": "317cb018",
            "id": 949,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "11356:19:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "11384:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "11376:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11376:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 942,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11399:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "11391:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11391:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11375:31:8"
            },
            "returnParameters": {
              "id": 948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "11462:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "11454:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11454:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "11485:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 949,
                  "src": "11477:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11477:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11453:43:8"
            },
            "scope": 967,
            "src": "11347:150:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 950,
              "nodeType": "StructuredDocumentation",
              "src": "11503:143:8",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled."
            },
            "functionSelector": "00f3b6e8",
            "id": 956,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "11660:18:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "11701:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 956,
                  "src": "11679:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 952,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 951,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "11679:12:8"
                    },
                    "referencedDeclaration": 707,
                    "src": "11679:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11678:27:8"
            },
            "returnParameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11719:0:8"
            },
            "scope": 967,
            "src": "11651:69:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 957,
              "nodeType": "StructuredDocumentation",
              "src": "11749:290:8",
              "text": " @notice Safe compute fee amount\n  Returns a values that is guaranteed to be less or equal to total provided amount\n  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n  when receiving a payment.\n @return the fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 966,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "12053:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 959,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12078:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "12070:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 958,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12070:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "12094:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "12086:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12086:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12069:32:8"
            },
            "returnParameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 966,
                  "src": "12149:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12149:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12148:9:8"
            },
            "scope": 967,
            "src": "12044:114:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 968,
        "src": "2092:10068:8",
        "usedErrors": []
      }
    ],
    "src": "32:12129:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.8+commit.dddeac2f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-20T16:32:56.402Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptedCurrency()": {
        "returns": {
          "_0": "the string describing the currency"
        }
      },
      "allowance(address)": {
        "params": {
          "buyer": "the address of the buyer"
        },
        "returns": {
          "_0": "the amount allowed by buyer"
        }
      },
      "assetTransferFailed(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "assetTransferSuccess(bytes32)": {
        "details": "Moves payment to PAID state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "balanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the local balance"
        }
      },
      "computeFeeAmount(uint256,uint256)": {
        "returns": {
          "_0": "the fee amount"
        }
      },
      "enoughFundsAvailable(address,uint256)": {
        "returns": {
          "_0": "a bool, true is enough available"
        }
      },
      "erc20BalanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the balance in the external ERC20 contract"
        }
      },
      "isRegisteredSeller(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "isRegistered as seller"
        }
      },
      "maxFundsAvailable(address)": {
        "returns": {
          "_0": "the max funds available"
        }
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "inp": "The struct containing all required payment data",
          "operatorSignature": "The signature of 'inp' by the operator"
        }
      },
      "paymentInfo(bytes32)": {
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the struct stored for the payment"
        }
      },
      "paymentState(bytes32)": {
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid"
        }
      },
      "paymentWindow()": {
        "returns": {
          "_0": "the payment window"
        }
      },
      "refund(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "refundAndWithdraw(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "buyerSignature": "The signature of 'inp' by the buyer",
          "inp": "The struct containing all required payment data"
        }
      },
      "setIsSellerRegistrationRequired(bool)": {
        "params": {
          "isRequired": "(bool) if true, registration is required."
        }
      },
      "setPaymentWindow(uint256)": {
        "params": {
          "window": "The amount of time available, in seconds."
        }
      },
      "splitFundingSources(address,uint256)": {
        "returns": {
          "externalFunds": "- the amount of ERC20 required from the external ERC20 contract.",
          "localFunds": "- the amount of ERC20 local funds required. "
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptedCurrency()": {
        "notice": "Returns a descriptor about the currency that this contract accepts"
      },
      "allowance(address)": {
        "notice": "Returns the allowance that the buyer has approved  directly in the ERC20 contract in favour of this contract."
      },
      "assetTransferFailed(bytes32)": {
        "notice": "Confirms the failure of asset transfer and refunds buyer.  Needs to be executed by the operator.  Buyer's balance is updated, allowing explicit withdrawal.  It resets all data related to this payment."
      },
      "assetTransferSuccess(bytes32)": {
        "notice": "Confirms the asset transfer.  Needs to be executed by the operator.  Updates balances of seller and feesCollector."
      },
      "balanceOf(address)": {
        "notice": "Returns the local ERC20 balance of address that is stored in this  contract, and hence, available for withdrawal."
      },
      "checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))": {
        "notice": "Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled."
      },
      "computeFeeAmount(uint256,uint256)": {
        "notice": "Safe compute fee amount  Returns a values that is guaranteed to be less or equal to total provided amount  The safety check should be unnecessary, since only feeBPS < 10000 are accepted  when receiving a payment."
      },
      "enoughFundsAvailable(address,uint256)": {
        "notice": "Returns true if the 'amount' required for a payment is available to this contract.  In more detail: returns true if the sum of the buyer's local balance in this contract,  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'"
      },
      "erc20()": {
        "notice": "Returns the address of the ERC20 contract from which  tokens are accepted for payments"
      },
      "erc20BalanceOf(address)": {
        "notice": "Returns ERC20 balance of address in the ERC20 contract"
      },
      "isRegisteredSeller(address)": {
        "notice": "Returns true if the address provided is a registered seller"
      },
      "isSellerRegistrationRequired()": {
        "notice": "Returns true if sellers need to be registered to be able to accept payments"
      },
      "maxFundsAvailable(address)": {
        "notice": "Returns the maximum amount of funds available to a buyer  In more detail: returns the sum of the buyer's local balance in this contract,  plus the funds available and approved in the ERC20 contract."
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts Payment process directly by the buyer.  Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract."
      },
      "paymentInfo(bytes32)": {
        "notice": "Returns all data stored in a payment"
      },
      "paymentState(bytes32)": {
        "notice": "Returns the state of a payment.  It maps 1-to-1 with the stored variable, with the exeption of  an ASSET_TRANSFERRING that has gone beyond expirationTime."
      },
      "paymentWindow()": {
        "notice": "Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator"
      },
      "refund(bytes32)": {
        "notice": "Moves buyer's provided funds to buyer's balance.  Anybody can call this function.  Requires current state == FAILED to proceed.  After updating buyer's balance, he/she can later withdraw.  It resets all data related to this payment."
      },
      "refundAndWithdraw(bytes32)": {
        "notice": "Exectutes refund and withdraw in one transaction.  Needs to be called by buyer.  All of buyer's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId"
      },
      "registerAsSeller()": {
        "notice": "Registers msg.sender a seller so that he/she can accept payments."
      },
      "relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts the Payment process via relay-by-operator.  Executed by an operator, who relays the MetaTX with the buyer's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract."
      },
      "setIsSellerRegistrationRequired(bool)": {
        "notice": "Sets whether sellers are required to register in this contract before being,  able to accept payments. "
      },
      "setPaymentWindow(uint256)": {
        "notice": "Sets the amount of time available to the operator, after the payment starts,  to confirm either the success of the failure of the asset transfer.   After this time, the payment moves to FAILED, allowing buyer to withdraw."
      },
      "splitFundingSources(address,uint256)": {
        "notice": "Splits the funds required to pay 'amount' into two source:  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract."
      },
      "withdraw()": {
        "notice": "Transfers ERC20 avaliable in this  contract's balanceOf[msg.sender] to msg.sender"
      }
    },
    "version": 1
  }
}