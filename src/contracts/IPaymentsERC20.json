{
  "contractName": "IPaymentsERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyerRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "NewSeller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "Payin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "PaymentWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "wasSuccessful",
              "type": "bool"
            }
          ],
          "internalType": "struct IEIP712Verifier.AssetTransferResult",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "verifyAssetTransferResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "verifyPayment",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "buyerSignature",
          "type": "bytes"
        }
      ],
      "name": "relayedPay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "wasSuccessful",
              "type": "bool"
            }
          ],
          "internalType": "struct IEIP712Verifier.AssetTransferResult",
          "name": "result",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "wasSuccessful",
              "type": "bool"
            }
          ],
          "internalType": "struct IEIP712Verifier.AssetTransferResult",
          "name": "result",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "finalizeAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refundAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSellerRegistrationRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isRegisteredSeller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "erc20BalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum IPaymentsERC20.States",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feesCollector",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymentsERC20.Payment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentState",
      "outputs": [
        {
          "internalType": "enum IPaymentsERC20.States",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "acceptsRefunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptedCurrency",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "enoughFundsAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "maxFundsAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "splitFundingSources",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "externalFunds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "localFunds",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        }
      ],
      "name": "checkPaymentInputs",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeBPS",
          "type": "uint256"
        }
      ],
      "name": "computeFeeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyerRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"NewSeller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"Payin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"PaymentWindow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedCurrency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"acceptsRefunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"}],\"name\":\"checkPaymentInputs\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBPS\",\"type\":\"uint256\"}],\"name\":\"computeFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"enoughFundsAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"erc20BalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"wasSuccessful\",\"type\":\"bool\"}],\"internalType\":\"struct IEIP712Verifier.AssetTransferResult\",\"name\":\"result\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"wasSuccessful\",\"type\":\"bool\"}],\"internalType\":\"struct IEIP712Verifier.AssetTransferResult\",\"name\":\"result\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"finalizeAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isRegisteredSeller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSellerRegistrationRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"maxFundsAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IPaymentsERC20.States\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsERC20.Payment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentState\",\"outputs\":[{\"internalType\":\"enum IPaymentsERC20.States\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refundAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"buyerSignature\",\"type\":\"bytes\"}],\"name\":\"relayedPay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"splitFundingSources\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"externalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"localFunds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"wasSuccessful\",\"type\":\"bool\"}],\"internalType\":\"struct IEIP712Verifier.AssetTransferResult\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"verifyAssetTransferResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"verifyPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptedCurrency()\":{\"returns\":{\"_0\":\"the string describing the currency\"}},\"acceptsRefunds(bytes32)\":{\"details\":\"The payment must be in ASSET_TRANSFERRING and beyond expirationTime.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"true if the payment accepts a refund to the buyer.\"}},\"allowance(address)\":{\"params\":{\"buyer\":\"the address of the buyer\"},\"returns\":{\"_0\":\"the amount allowed by buyer\"}},\"balanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the local balance\"}},\"checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))\":{\"params\":{\"inp\":\"The PaymentInput struct\"}},\"computeFeeAmount(uint256,uint256)\":{\"details\":\"Must return a value that is guaranteed to be less or equal to the provided amount\",\"params\":{\"amount\":\"The amount\",\"feeBPS\":\"The percentage fee expressed in Basis Points (bps).  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\"},\"returns\":{\"_0\":\"The fee amount\"}},\"enoughFundsAvailable(address,uint256)\":{\"details\":\"In more detail: returns true if the sum of the buyer's local balance in this contract,  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\",\"params\":{\"amount\":\"The amount that is queried\",\"buyer\":\"The address for which funds are queried\"},\"returns\":{\"_0\":\"Returns true if enough funds are available\"}},\"erc20()\":{\"returns\":{\"_0\":\"the address of the ERC20 contract\"}},\"erc20BalanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the balance in the external ERC20 contract\"}},\"finalize((bytes32,bool),bytes)\":{\"details\":\"Can be executed by anyone, but the operator signature must be included as input param.  Seller or Buyer's balances are updated, allowing explicit withdrawal.  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\",\"params\":{\"operatorSignature\":\"The operator signature of result\",\"result\":\"The asset transfer result struct signed by the operator.\"}},\"finalizeAndWithdraw((bytes32,bool),bytes)\":{\"details\":\"Can be executed by anyone, but the operator signature must be included as input param.  It is, however, expected to be executed by the seller, in case of a successful asset transfer,  or the buyer, in case of a failed asset transfer.  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\",\"params\":{\"operatorSignature\":\"The operator signature of result\",\"result\":\"The asset transfer result struct signed by the operator.\"}},\"isRegisteredSeller(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"Returns whether the address is registered as seller\"}},\"isSellerRegistrationRequired()\":{\"returns\":{\"_0\":\"Returns true if sellers need to be registered to be able to accept payments\"}},\"maxFundsAvailable(address)\":{\"details\":\"In more detail: returns the sum of the buyer's local balance in this contract,  plus the funds available and approved in the ERC20 contract.\",\"params\":{\"buyer\":\"The address for which funds are queried\"},\"returns\":{\"_0\":\"the max funds available\"}},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.  Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"inp\":\"The struct containing all required payment data\",\"operatorSignature\":\"The signature of 'inp' by the operator\"}},\"paymentInfo(bytes32)\":{\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the struct stored for the payment\"}},\"paymentState(bytes32)\":{\"details\":\"If payment is in ASSET_TRANSFERRING, it may be worth  checking acceptsRefunds ot check if it has gone beyond expirationTime.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the state of the payment.\"}},\"paymentWindow()\":{\"returns\":{\"_0\":\"the payment window in secs\"}},\"refund(bytes32)\":{\"details\":\"Anybody can call this function.  Requires acceptsRefunds == true to proceed.  After updating buyer's balance, he/she can later withdraw.  Moves payment to REFUNDED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"refundAndWithdraw(bytes32)\":{\"details\":\"Anybody can call this function.  Requires acceptsRefunds == true to proceed.  All of msg.sender's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId  Moves payment to REFUNDED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Executed by an operator, who relays the MetaTX with the buyer's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.  Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"buyerSignature\":\"The signature of 'inp' by the buyer\",\"inp\":\"The struct containing all required payment data\"}},\"splitFundingSources(address,uint256)\":{\"params\":{\"amount\":\"The amount to be split\",\"buyer\":\"The address for which the amount is to be split\"},\"returns\":{\"externalFunds\":\"The amount of ERC20 required from the external ERC20 contract.\",\"localFunds\":\"The amount of ERC20 local funds required.\"}},\"verifyAssetTransferResult((bytes32,bool),bytes,address)\":{\"params\":{\"inp\":\"The provided AssetTransferResult struct\",\"signature\":\"The provided signature of the input struct\",\"signer\":\"The signer's address that we want to verify\"},\"returns\":{\"_0\":\"Returns true if the signature corresponds to the signer  having signed the input struct\"}},\"verifyPayment((bytes32,uint256,uint16,uint256,uint256,address,address),bytes,address)\":{\"params\":{\"inp\":\"The provided PaymentInput struct\",\"signature\":\"The provided signature of the input struct\",\"signer\":\"The signer's address that we want to verify\"},\"returns\":{\"_0\":\"Returns true if the signature corresponds to the signer having signed the input struct\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptedCurrency()\":{\"notice\":\"Returns a descriptor about the currency that this contract accepts\"},\"acceptsRefunds(bytes32)\":{\"notice\":\"Returns true if the payment accepts a refund to the buyer\"},\"allowance(address)\":{\"notice\":\"Returns the allowance that the buyer has approved  directly in the ERC20 contract in favour of this contract.\"},\"balanceOf(address)\":{\"notice\":\"Returns the local ERC20 balance of address that is stored in this  contract, and hence, available for withdrawal.\"},\"checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))\":{\"notice\":\"Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled.\"},\"computeFeeAmount(uint256,uint256)\":{\"notice\":\"Safe computation of fee amount for a provided amount, feeBPS pair\"},\"enoughFundsAvailable(address,uint256)\":{\"notice\":\"Returns true if the 'amount' required for a payment is available to this contract.\"},\"erc20()\":{\"notice\":\"Returns the address of the ERC20 contract from which  tokens are accepted for payments\"},\"erc20BalanceOf(address)\":{\"notice\":\"Returns the ERC20 balance of address in the ERC20 contract\"},\"finalize((bytes32,bool),bytes)\":{\"notice\":\"Relays the operator signature declaring that the asset transfer was successful or failed,  and updates balances of seller or buyer, respectively.\"},\"finalizeAndWithdraw((bytes32,bool),bytes)\":{\"notice\":\"Relays the operator signature declaring that the asset transfer was successful or failed, updates balances of seller or buyer, respectively, and proceeds to withdraw all funds in this contract available to msg.sender.\"},\"isRegisteredSeller(address)\":{\"notice\":\"Returns true if the address provided is a registered seller\"},\"isSellerRegistrationRequired()\":{\"notice\":\"Returns whether sellers need to be registered to be able to accept payments\"},\"maxFundsAvailable(address)\":{\"notice\":\"Returns the maximum amount of funds available to a buyer\"},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts Payment process directly by the buyer.\"},\"paymentInfo(bytes32)\":{\"notice\":\"Returns all data stored in a payment\"},\"paymentState(bytes32)\":{\"notice\":\"Returns the state of a payment.\"},\"paymentWindow()\":{\"notice\":\"Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator\"},\"refund(bytes32)\":{\"notice\":\"Moves buyer's provided funds to buyer's balance.\"},\"refundAndWithdraw(bytes32)\":{\"notice\":\"Executes refund and withdraw in one transaction.\"},\"registerAsSeller()\":{\"notice\":\"Registers msg.sender as seller so that he/she can accept payments.\"},\"relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts the Payment process via relay-by-operator.\"},\"splitFundingSources(address,uint256)\":{\"notice\":\"Splits the funds required to pay 'amount' into two source:  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\"},\"verifyAssetTransferResult((bytes32,bool),bytes,address)\":{\"notice\":\"Verifies that the provided input struct has been signed  by the provided signer.\"},\"verifyPayment((bytes32,uint256,uint16,uint256,uint256,address,address),bytes,address)\":{\"notice\":\"Verifies that the provided input struct has been signed  by the provided signer.\"},\"withdraw()\":{\"notice\":\"Transfers ERC20 avaliable in this  contract's balanceOf[msg.sender] to msg.sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Payments/IPaymentsERC20.sol\":\"IPaymentsERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2b7a01bbc90040fd4a48bc143ac5a192da3b9bfc559ac08a78eaca40bf49e436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8a02af79b7d1c4eaa385d3b9d26509ac2619eab43bfbbc2ef9ef74508f8146\",\"dweb:/ipfs/QmWhEKw9ZmDjc9qfLmJcrxgopoCvbBNyFhUCJSewhSpzRi\"]},\"openzeppelin-solidity/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x75800223458de145e6088276ab661222e22557d7518459e1ffc57bb5b0496542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://504433dd10f0037339624055d52df67de43408a4d429eb546c6cb17e5c5a6ae6\",\"dweb:/ipfs/QmQfRTjvbsn9kCc7MNC2E7X4tzpYw4sEPPMpdyWVi5QQNj\"]},\"project:/contracts/Payments/EIP712Verifier.sol\":{\"keccak256\":\"0x63cc3ab01eea168e3b72d65ce6f97e2a7e6594c10c49536e2e652567009958d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9bf554d07a1194bdfeab4b0ff13c1f9169b9d183cb7bdf1ae351773004e3cf7\",\"dweb:/ipfs/QmZaEksDhAiPPgwtqqi6DNNP2ZexQaDPLr8B9fnavXZaKA\"]},\"project:/contracts/Payments/FeesCollectors.sol\":{\"keccak256\":\"0xe77672b8adae8002c45a6323b060580e7ea0c50f9b4eef9f2d842326b6344e0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd2a0cff50a33b934f31e5b0e8a600305583690d74b876144d5956e405a6377d\",\"dweb:/ipfs/QmXSJ285WZLwhA7CpPFz4rBE54ay4rwXs1dzWqNT4HnsQy\"]},\"project:/contracts/Payments/IEIP712Verifier.sol\":{\"keccak256\":\"0xd01aa97538cc9d347efb780ecb09e5d14cf839ed6885b84ffc9123b3b0968850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4479d13785e2fc4ce4a8104ece1e417622dbc6b6aa42aa490d1a62cea32aaad2\",\"dweb:/ipfs/QmPRmMjpCRVUbon6yszYMc7mXsML95o4BtxthB3cwDGiHv\"]},\"project:/contracts/Payments/IPaymentsERC20.sol\":{\"keccak256\":\"0x075d0ca0e737a63aa722cb5c34638a353198bbbfc7a0440b70461ac2d44ea3b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a644c486dbd889b3326a580a6f45f1a70473d81586fe78a50b3ac995ca2ca3\",\"dweb:/ipfs/QmQ6fEGFdRNgPHSDV6p7pm4jdBB7sMb45UWAmeabSNArbk\"]},\"project:/contracts/Payments/Operators.sol\":{\"keccak256\":\"0x639b4583eda697dbb036df0be88eb366290a42bdc11e5e6a5a7b7ae33c9a23b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0c957ae82756bce400c0e619920f2efec0f46781b6a3c3152acb7e7b96ecf95\",\"dweb:/ipfs/QmaaKTKmtUuc2X2nFAuyxdfbmRU9CUzyhCVo9RexBc9yJH\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.12;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"./FeesCollectors.sol\";\nimport \"./EIP712Verifier.sol\";\n\n/**\n * @title Interface to Payments Contract in ERC20.\n * @author Freeverse.io, www.freeverse.io\n * @dev Upon transfer of ERC20 tokens to this contract, these remain\n * locked until an Operator confirms the success of failure of the\n * asset transfer required to fulfil this payment.\n *\n * If no confirmation is recevied from the operator during the PaymentWindow,\n * all of buyer's received tokens are made available to the buyer for refund.\n *\n * To start a payment, the signatures of both the buyer and the Operator are required.\n * - in the 'relayedPay' method, the Operator is the msg.sender, and the buyerSig is provided;\n * - in the 'pay' method, the buyer is the msg.sender, and the operatorSig is provided.\n *\n * This contract maintains the balances of all users, it does not transfer them automatically.\n * Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender]\n * If a buyer has non-zero local balance at the moment of starting a new payment,\n * the contract reuses it, and only transfers the remainder required (if any)\n * from the external ERC20 contract.\n *\n * Each payment has the following States Machine:\n * - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay/relayedPay\n * - ASSET_TRANSFERRING -> PAID, triggered by relaying assetTransferSuccess signed by operator\n * - ASSET_TRANSFERRING -> REFUNDED, triggered by relaying assetTransferFailed signed by operator\n * - ASSET_TRANSFERRING -> REFUNDED, triggered by a refund request after expirationTime\n *\n * NOTE: To ensure that the a payment process proceeds as expected when the payment starts,\n * upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime}\n * is stored in the payment struct, and used throught the payment, regardless of\n * any possible modifications to the contract's storage.\n *\n */\n\nimport \"./IEIP712Verifier.sol\";\n\ninterface IPaymentsERC20 is IEIP712Verifier {\n    event PaymentWindow(uint256 window);\n    event NewSeller(address indexed seller);\n    event BuyerRefunded(bytes32 indexed paymentId, address indexed buyer);\n    event Payin(\n        bytes32 indexed paymentId,\n        address indexed buyer,\n        address indexed seller\n    );\n    event Paid(bytes32 paymentId);\n    event Withdraw(address indexed user, uint256 amount);\n\n    enum States {\n        NotStarted,\n        AssetTransferring,\n        Refunded,\n        Paid\n    }\n\n    /**\n     * @notice Main struct stored with every payment.\n     *  feeBPS is the percentage fee expressed in Basis Points (bps), typical in finance\n     *  Examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n     */\n    struct Payment {\n        States state;\n        address buyer;\n        address seller;\n        address operator;\n        address feesCollector;\n        uint256 expirationTime;\n        uint16 feeBPS;\n        uint256 amount;\n    }\n\n    /**\n     * @notice Registers msg.sender as seller so that he/she can accept payments.\n     */\n    function registerAsSeller() external;\n\n    /**\n     * @notice Starts the Payment process via relay-by-operator.\n     * @dev Executed by an operator, who relays the MetaTX with the buyer's signature.\n     *  The buyer must have approved the amount to this contract before.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the ERC20\n     *  in this contract.\n     *  Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param buyerSignature The signature of 'inp' by the buyer\n     */\n    function relayedPay(\n        PaymentInput calldata inp,\n        bytes calldata buyerSignature\n    ) external;\n\n    /**\n     * @notice Starts Payment process directly by the buyer.\n     * @dev Executed by the buyer, who relays the MetaTX with the operator's signature.\n     *  The buyer must have approved the amount to this contract before.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the ERC20\n     *  in this contract.\n     *  Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param operatorSignature The signature of 'inp' by the operator\n     */\n    function pay(PaymentInput calldata inp, bytes calldata operatorSignature)\n        external;\n\n    /**\n     * @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n     *  and updates balances of seller or buyer, respectively.\n     * @dev Can be executed by anyone, but the operator signature must be included as input param.\n     *  Seller or Buyer's balances are updated, allowing explicit withdrawal.\n     *  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n     * @param result The asset transfer result struct signed by the operator.\n     * @param operatorSignature The operator signature of result\n     */\n    function finalize(\n        AssetTransferResult calldata result,\n        bytes calldata operatorSignature\n    ) external;\n\n    /**\n     * @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n     * updates balances of seller or buyer, respectively,\n     * and proceeds to withdraw all funds in this contract available to msg.sender.\n     * @dev Can be executed by anyone, but the operator signature must be included as input param.\n     *  It is, however, expected to be executed by the seller, in case of a successful asset transfer,\n     *  or the buyer, in case of a failed asset transfer.\n     *  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n     * @param result The asset transfer result struct signed by the operator.\n     * @param operatorSignature The operator signature of result\n     */\n    function finalizeAndWithdraw(\n        AssetTransferResult calldata result,\n        bytes calldata operatorSignature\n    ) external;\n\n    /**\n     * @notice Moves buyer's provided funds to buyer's balance.\n     * @dev Anybody can call this function.\n     *  Requires acceptsRefunds == true to proceed.\n     *  After updating buyer's balance, he/she can later withdraw.\n     *  Moves payment to REFUNDED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refund(bytes32 paymentId) external;\n\n    /**\n     * @notice Executes refund and withdraw in one transaction.\n     * @dev Anybody can call this function.\n     *  Requires acceptsRefunds == true to proceed.\n     *  All of msg.sender's balance in the contract is withdrawn,\n     *  not only the part that was locked in this particular paymentId\n     *  Moves payment to REFUNDED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refundAndWithdraw(bytes32 paymentId) external;\n\n    /**\n     * @notice Transfers ERC20 avaliable in this\n     *  contract's balanceOf[msg.sender] to msg.sender\n     */\n    function withdraw() external;\n\n    // VIEW FUNCTIONS\n\n    /**\n     * @notice Returns whether sellers need to be registered to be able to accept payments\n     * @return Returns true if sellers need to be registered to be able to accept payments\n     */\n    function isSellerRegistrationRequired() external view returns (bool);\n\n    /**\n     * @notice Returns true if the address provided is a registered seller\n     * @param addr the address that is queried\n     * @return Returns whether the address is registered as seller\n     */\n    function isRegisteredSeller(address addr) external view returns (bool);\n\n    /**\n     * @notice Returns the address of the ERC20 contract from which\n     *  tokens are accepted for payments\n     * @return the address of the ERC20 contract\n     */\n    function erc20() external view returns (address);\n\n    /**\n     * @notice Returns the local ERC20 balance of address that is stored in this\n     *  contract, and hence, available for withdrawal.\n     * @param addr the address that is queried\n     * @return the local balance\n     */\n    function balanceOf(address addr) external view returns (uint256);\n\n    /**\n     * @notice Returns the ERC20 balance of address in the ERC20 contract\n     * @param addr the address that is queried\n     * @return the balance in the external ERC20 contract\n     */\n    function erc20BalanceOf(address addr) external view returns (uint256);\n\n    /**\n     * @notice Returns the allowance that the buyer has approved\n     *  directly in the ERC20 contract in favour of this contract.\n     * @param buyer the address of the buyer\n     * @return the amount allowed by buyer\n     */\n    function allowance(address buyer) external view returns (uint256);\n\n    /**\n     * @notice Returns all data stored in a payment\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the struct stored for the payment\n     */\n    function paymentInfo(bytes32 paymentId)\n        external\n        view\n        returns (Payment memory);\n\n    /**\n     * @notice Returns the state of a payment.\n     * @dev If payment is in ASSET_TRANSFERRING, it may be worth\n     *  checking acceptsRefunds ot check if it has gone beyond expirationTime.\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the state of the payment.\n     */\n    function paymentState(bytes32 paymentId) external view returns (States);\n\n    /**\n     * @notice Returns true if the payment accepts a refund to the buyer\n     * @dev The payment must be in ASSET_TRANSFERRING and beyond expirationTime.\n     * @param paymentId The unique ID that identifies the payment.\n     * @return true if the payment accepts a refund to the buyer.\n     */\n    function acceptsRefunds(bytes32 paymentId) external view returns (bool);\n\n    /**\n     * @notice Returns the amount of seconds that a payment\n     *  can remain in ASSET_TRANSFERRING state without positive\n     *  or negative confirmation by the operator\n     * @return the payment window in secs\n     */\n    function paymentWindow() external view returns (uint256);\n\n    /**\n     * @notice Returns a descriptor about the currency that this contract accepts\n     * @return the string describing the currency\n     */\n    function acceptedCurrency() external view returns (string memory);\n\n    /**\n     * @notice Returns true if the 'amount' required for a payment is available to this contract.\n     * @dev In more detail: returns true if the sum of the buyer's local balance in this contract,\n     *  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n     * @param buyer The address for which funds are queried\n     * @param amount The amount that is queried\n     * @return Returns true if enough funds are available\n     */\n    function enoughFundsAvailable(address buyer, uint256 amount)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @notice Returns the maximum amount of funds available to a buyer\n     * @dev In more detail: returns the sum of the buyer's local balance in this contract,\n     *  plus the funds available and approved in the ERC20 contract.\n     * @param buyer The address for which funds are queried\n     * @return the max funds available\n     */\n    function maxFundsAvailable(address buyer) external view returns (uint256);\n\n    /**\n     * @notice Splits the funds required to pay 'amount' into two source:\n     *  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n     *  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n     * @param buyer The address for which the amount is to be split\n     * @param amount The amount to be split\n     * @return externalFunds The amount of ERC20 required from the external ERC20 contract.\n     * @return localFunds The amount of ERC20 local funds required.\n     */\n    function splitFundingSources(address buyer, uint256 amount)\n        external\n        view\n        returns (uint256 externalFunds, uint256 localFunds);\n\n    /**\n     * @notice Reverts unless the requirements for a PaymentInput that\n     *  are common to both pay and relayedPay are fulfilled.\n     * @param inp The PaymentInput struct\n     */\n    function checkPaymentInputs(PaymentInput calldata inp) external view;\n\n    // PURE FUNCTIONS\n\n    /**\n     * @notice Safe computation of fee amount for a provided amount, feeBPS pair\n     * @dev Must return a value that is guaranteed to be less or equal to the provided amount\n     * @param amount The amount\n     * @param feeBPS The percentage fee expressed in Basis Points (bps).\n     *  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n     * @return The fee amount\n     */\n    function computeFeeAmount(uint256 amount, uint256 feeBPS)\n        external\n        pure\n        returns (uint256);\n}\n",
  "sourcePath": "/Users/toni/gits/cryptoPayments/contracts/Payments/IPaymentsERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/Payments/IPaymentsERC20.sol",
    "exportedSymbols": {
      "Context": [
        742
      ],
      "ECDSA": [
        886
      ],
      "EIP712": [
        1024
      ],
      "EIP712Verifier": [
        1169
      ],
      "FeesCollectors": [
        1293
      ],
      "IEIP712Verifier": [
        1345
      ],
      "IERC20": [
        694
      ],
      "IPaymentsERC20": [
        1594
      ],
      "Operators": [
        1718
      ],
      "Ownable": [
        109
      ]
    },
    "id": 1595,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1347,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:11"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 1348,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 695,
        "src": "58:64:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 1349,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 1294,
        "src": "123:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 1350,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 1170,
        "src": "154:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/IEIP712Verifier.sol",
        "file": "./IEIP712Verifier.sol",
        "id": 1351,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 1346,
        "src": "2036:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1352,
              "name": "IEIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1345,
              "src": "2097:15:11"
            },
            "id": 1353,
            "nodeType": "InheritanceSpecifier",
            "src": "2097:15:11"
          }
        ],
        "canonicalName": "IPaymentsERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1594,
        "linearizedBaseContracts": [
          1594,
          1345
        ],
        "name": "IPaymentsERC20",
        "nameLocation": "2079:14:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1357,
            "name": "PaymentWindow",
            "nameLocation": "2125:13:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1355,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "2147:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "2139:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2138:16:11"
            },
            "src": "2119:36:11"
          },
          {
            "anonymous": false,
            "id": 1361,
            "name": "NewSeller",
            "nameLocation": "2166:9:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2192:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "2176:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2175:24:11"
            },
            "src": "2160:40:11"
          },
          {
            "anonymous": false,
            "id": 1367,
            "name": "BuyerRefunded",
            "nameLocation": "2211:13:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2241:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "2225:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1365,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2268:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "2252:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2224:50:11"
            },
            "src": "2205:70:11"
          },
          {
            "anonymous": false,
            "id": 1375,
            "name": "Payin",
            "nameLocation": "2286:5:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2317:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "2301:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1371,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2352:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "2336:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1373,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2383:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "2367:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2367:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2291:104:11"
            },
            "src": "2280:116:11"
          },
          {
            "anonymous": false,
            "id": 1379,
            "name": "Paid",
            "nameLocation": "2407:4:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2420:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "2412:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2412:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2411:19:11"
            },
            "src": "2401:30:11"
          },
          {
            "anonymous": false,
            "id": 1385,
            "name": "Withdraw",
            "nameLocation": "2442:8:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1381,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2467:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "2451:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1383,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2481:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "2473:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2473:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2450:38:11"
            },
            "src": "2436:53:11"
          },
          {
            "canonicalName": "IPaymentsERC20.States",
            "id": 1390,
            "members": [
              {
                "id": 1386,
                "name": "NotStarted",
                "nameLocation": "2517:10:11",
                "nodeType": "EnumValue",
                "src": "2517:10:11"
              },
              {
                "id": 1387,
                "name": "AssetTransferring",
                "nameLocation": "2537:17:11",
                "nodeType": "EnumValue",
                "src": "2537:17:11"
              },
              {
                "id": 1388,
                "name": "Refunded",
                "nameLocation": "2564:8:11",
                "nodeType": "EnumValue",
                "src": "2564:8:11"
              },
              {
                "id": 1389,
                "name": "Paid",
                "nameLocation": "2582:4:11",
                "nodeType": "EnumValue",
                "src": "2582:4:11"
              }
            ],
            "name": "States",
            "nameLocation": "2500:6:11",
            "nodeType": "EnumDefinition",
            "src": "2495:97:11"
          },
          {
            "canonicalName": "IPaymentsERC20.Payment",
            "id": 1408,
            "members": [
              {
                "constant": false,
                "id": 1393,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "2857:5:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2850:12:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$1390",
                  "typeString": "enum IPaymentsERC20.States"
                },
                "typeName": {
                  "id": 1392,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1391,
                    "name": "States",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1390,
                    "src": "2850:6:11"
                  },
                  "referencedDeclaration": 1390,
                  "src": "2850:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$1390",
                    "typeString": "enum IPaymentsERC20.States"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1395,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "2880:5:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2872:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1394,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2872:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1397,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2903:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2895:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1396,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2895:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1399,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "2927:8:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2919:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1398,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2919:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1401,
                "mutability": "mutable",
                "name": "feesCollector",
                "nameLocation": "2953:13:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2945:21:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2945:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1403,
                "mutability": "mutable",
                "name": "expirationTime",
                "nameLocation": "2984:14:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2976:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1402,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2976:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1405,
                "mutability": "mutable",
                "name": "feeBPS",
                "nameLocation": "3015:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "3008:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1404,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "3008:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1407,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3039:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "3031:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1406,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3031:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nameLocation": "2832:7:11",
            "nodeType": "StructDefinition",
            "scope": 1594,
            "src": "2825:227:11",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 1409,
              "nodeType": "StructuredDocumentation",
              "src": "3058:93:11",
              "text": " @notice Registers msg.sender as seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 1412,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "3165:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3181:2:11"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3192:0:11"
            },
            "scope": 1594,
            "src": "3156:37:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1413,
              "nodeType": "StructuredDocumentation",
              "src": "3199:690:11",
              "text": " @notice Starts the Payment process via relay-by-operator.\n @dev Executed by an operator, who relays the MetaTX with the buyer's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param buyerSignature The signature of 'inp' by the buyer"
            },
            "functionSelector": "06a212ae",
            "id": 1421,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "relayedPay",
            "nameLocation": "3903:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1416,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "3945:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1421,
                  "src": "3923:25:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$1313_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1415,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1414,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1313,
                      "src": "3923:12:11"
                    },
                    "referencedDeclaration": 1313,
                    "src": "3923:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$1313_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1418,
                  "mutability": "mutable",
                  "name": "buyerSignature",
                  "nameLocation": "3973:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1421,
                  "src": "3958:29:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1417,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3913:80:11"
            },
            "returnParameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:11"
            },
            "scope": 1594,
            "src": "3894:109:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1422,
              "nodeType": "StructuredDocumentation",
              "src": "4009:693:11",
              "text": " @notice Starts Payment process directly by the buyer.\n @dev Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 1430,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "4716:3:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "4742:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1430,
                  "src": "4720:25:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$1313_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1423,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1313,
                      "src": "4720:12:11"
                    },
                    "referencedDeclaration": 1313,
                    "src": "4720:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$1313_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "4762:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1430,
                  "src": "4747:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4747:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4719:61:11"
            },
            "returnParameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4797:0:11"
            },
            "scope": 1594,
            "src": "4707:91:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1431,
              "nodeType": "StructuredDocumentation",
              "src": "4804:590:11",
              "text": " @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n  and updates balances of seller or buyer, respectively.\n @dev Can be executed by anyone, but the operator signature must be included as input param.\n  Seller or Buyer's balances are updated, allowing explicit withdrawal.\n  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n @param result The asset transfer result struct signed by the operator.\n @param operatorSignature The operator signature of result"
            },
            "functionSelector": "96aa71b0",
            "id": 1439,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalize",
            "nameLocation": "5408:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "5455:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "5426:35:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetTransferResult_$1318_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.AssetTransferResult"
                  },
                  "typeName": {
                    "id": 1433,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1432,
                      "name": "AssetTransferResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1318,
                      "src": "5426:19:11"
                    },
                    "referencedDeclaration": 1318,
                    "src": "5426:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetTransferResult_$1318_storage_ptr",
                      "typeString": "struct IEIP712Verifier.AssetTransferResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "5486:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "5471:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5471:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5416:93:11"
            },
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5518:0:11"
            },
            "scope": 1594,
            "src": "5399:120:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1440,
              "nodeType": "StructuredDocumentation",
              "src": "5525:752:11",
              "text": " @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n updates balances of seller or buyer, respectively,\n and proceeds to withdraw all funds in this contract available to msg.sender.\n @dev Can be executed by anyone, but the operator signature must be included as input param.\n  It is, however, expected to be executed by the seller, in case of a successful asset transfer,\n  or the buyer, in case of a failed asset transfer.\n  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n @param result The asset transfer result struct signed by the operator.\n @param operatorSignature The operator signature of result"
            },
            "functionSelector": "a1bc474d",
            "id": 1448,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeAndWithdraw",
            "nameLocation": "6291:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1443,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "6349:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "6320:35:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetTransferResult_$1318_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.AssetTransferResult"
                  },
                  "typeName": {
                    "id": 1442,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1441,
                      "name": "AssetTransferResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1318,
                      "src": "6320:19:11"
                    },
                    "referencedDeclaration": 1318,
                    "src": "6320:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetTransferResult_$1318_storage_ptr",
                      "typeString": "struct IEIP712Verifier.AssetTransferResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1445,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "6380:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "6365:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1444,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6365:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6310:93:11"
            },
            "returnParameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6412:0:11"
            },
            "scope": 1594,
            "src": "6282:131:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "6419:346:11",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n @dev Anybody can call this function.\n  Requires acceptsRefunds == true to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  Moves payment to REFUNDED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 1454,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "6779:6:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1451,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "6794:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1454,
                  "src": "6786:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6786:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6785:19:11"
            },
            "returnParameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6813:0:11"
            },
            "scope": 1594,
            "src": "6770:44:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1455,
              "nodeType": "StructuredDocumentation",
              "src": "6820:416:11",
              "text": " @notice Executes refund and withdraw in one transaction.\n @dev Anybody can call this function.\n  Requires acceptsRefunds == true to proceed.\n  All of msg.sender's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n  Moves payment to REFUNDED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 1460,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "7250:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "7276:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "7268:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1456,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7268:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7267:19:11"
            },
            "returnParameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7295:0:11"
            },
            "scope": 1594,
            "src": "7241:55:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1461,
              "nodeType": "StructuredDocumentation",
              "src": "7302:115:11",
              "text": " @notice Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 1464,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "7431:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7439:2:11"
            },
            "returnParameters": {
              "id": 1463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7450:0:11"
            },
            "scope": 1594,
            "src": "7422:29:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1465,
              "nodeType": "StructuredDocumentation",
              "src": "7480:193:11",
              "text": " @notice Returns whether sellers need to be registered to be able to accept payments\n @return Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 1470,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "7687:28:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7715:2:11"
            },
            "returnParameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "7741:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7741:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7740:6:11"
            },
            "scope": 1594,
            "src": "7678:69:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1471,
              "nodeType": "StructuredDocumentation",
              "src": "7753:200:11",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return Returns whether the address is registered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 1478,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "7967:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1473,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7994:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "7986:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7986:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7985:14:11"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "8023:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8022:6:11"
            },
            "scope": 1594,
            "src": "7958:71:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1479,
              "nodeType": "StructuredDocumentation",
              "src": "8035:169:11",
              "text": " @notice Returns the address of the ERC20 contract from which\n  tokens are accepted for payments\n @return the address of the ERC20 contract"
            },
            "functionSelector": "785e9e86",
            "id": 1484,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "erc20",
            "nameLocation": "8218:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8223:2:11"
            },
            "returnParameters": {
              "id": 1483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "8249:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8249:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8248:9:11"
            },
            "scope": 1594,
            "src": "8209:49:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1485,
              "nodeType": "StructuredDocumentation",
              "src": "8264:227:11",
              "text": " @notice Returns the local ERC20 balance of address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 1492,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "8505:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8523:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "8515:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8515:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8514:14:11"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "8552:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8552:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8551:9:11"
            },
            "scope": 1594,
            "src": "8496:65:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1493,
              "nodeType": "StructuredDocumentation",
              "src": "8567:190:11",
              "text": " @notice Returns the ERC20 balance of address in the ERC20 contract\n @param addr the address that is queried\n @return the balance in the external ERC20 contract"
            },
            "functionSelector": "02519da3",
            "id": 1500,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "erc20BalanceOf",
            "nameLocation": "8771:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1495,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8794:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "8786:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8786:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8785:14:11"
            },
            "returnParameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "8823:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8823:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8822:9:11"
            },
            "scope": 1594,
            "src": "8762:70:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1501,
              "nodeType": "StructuredDocumentation",
              "src": "8838:231:11",
              "text": " @notice Returns the allowance that the buyer has approved\n  directly in the ERC20 contract in favour of this contract.\n @param buyer the address of the buyer\n @return the amount allowed by buyer"
            },
            "functionSelector": "3e5beab9",
            "id": 1508,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "9083:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "9101:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1508,
                  "src": "9093:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9093:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9092:15:11"
            },
            "returnParameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1508,
                  "src": "9131:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9131:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9130:9:11"
            },
            "scope": 1594,
            "src": "9074:66:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1509,
              "nodeType": "StructuredDocumentation",
              "src": "9146:179:11",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 1517,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "9339:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9359:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "9351:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9351:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9350:19:11"
            },
            "returnParameters": {
              "id": 1516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1515,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "9417:14:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$1408_memory_ptr",
                    "typeString": "struct IPaymentsERC20.Payment"
                  },
                  "typeName": {
                    "id": 1514,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1513,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1408,
                      "src": "9417:7:11"
                    },
                    "referencedDeclaration": 1408,
                    "src": "9417:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$1408_storage_ptr",
                      "typeString": "struct IPaymentsERC20.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9416:16:11"
            },
            "scope": 1594,
            "src": "9330:103:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1518,
              "nodeType": "StructuredDocumentation",
              "src": "9439:310:11",
              "text": " @notice Returns the state of a payment.\n @dev If payment is in ASSET_TRANSFERRING, it may be worth\n  checking acceptsRefunds ot check if it has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the state of the payment."
            },
            "functionSelector": "34b778ed",
            "id": 1526,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "9763:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1520,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9784:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "9776:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9776:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9775:19:11"
            },
            "returnParameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "9818:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$1390",
                    "typeString": "enum IPaymentsERC20.States"
                  },
                  "typeName": {
                    "id": 1523,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1522,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1390,
                      "src": "9818:6:11"
                    },
                    "referencedDeclaration": 1390,
                    "src": "9818:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$1390",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9817:8:11"
            },
            "scope": 1594,
            "src": "9754:72:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1527,
              "nodeType": "StructuredDocumentation",
              "src": "9832:298:11",
              "text": " @notice Returns true if the payment accepts a refund to the buyer\n @dev The payment must be in ASSET_TRANSFERRING and beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return true if the payment accepts a refund to the buyer."
            },
            "functionSelector": "244aa5d7",
            "id": 1534,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptsRefunds",
            "nameLocation": "10144:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "10167:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "10159:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10159:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10158:19:11"
            },
            "returnParameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "10201:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10201:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10200:6:11"
            },
            "scope": 1594,
            "src": "10135:72:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1535,
              "nodeType": "StructuredDocumentation",
              "src": "10213:226:11",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window in secs"
            },
            "functionSelector": "cab55d56",
            "id": 1540,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "10453:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10466:2:11"
            },
            "returnParameters": {
              "id": 1539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "10492:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10492:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10491:9:11"
            },
            "scope": 1594,
            "src": "10444:57:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1541,
              "nodeType": "StructuredDocumentation",
              "src": "10507:143:11",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 1546,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "10664:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10680:2:11"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "10706:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10706:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10705:15:11"
            },
            "scope": 1594,
            "src": "10655:66:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1547,
              "nodeType": "StructuredDocumentation",
              "src": "10727:473:11",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n @dev In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n @param buyer The address for which funds are queried\n @param amount The amount that is queried\n @return Returns true if enough funds are available"
            },
            "functionSelector": "9cfd495c",
            "id": 1556,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "11214:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1549,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "11243:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "11235:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11235:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1551,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11258:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "11250:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11250:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11234:31:11"
            },
            "returnParameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "11313:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11313:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11312:6:11"
            },
            "scope": 1594,
            "src": "11205:114:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1557,
              "nodeType": "StructuredDocumentation",
              "src": "11325:342:11",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n @dev In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the funds available and approved in the ERC20 contract.\n @param buyer The address for which funds are queried\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 1564,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "11681:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "11707:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "11699:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11699:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11698:15:11"
            },
            "returnParameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "11737:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11737:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11736:9:11"
            },
            "scope": 1594,
            "src": "11672:74:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1565,
              "nodeType": "StructuredDocumentation",
              "src": "11752:565:11",
              "text": " @notice Splits the funds required to pay 'amount' into two source:\n  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n @param buyer The address for which the amount is to be split\n @param amount The amount to be split\n @return externalFunds The amount of ERC20 required from the external ERC20 contract.\n @return localFunds The amount of ERC20 local funds required."
            },
            "functionSelector": "317cb018",
            "id": 1576,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "12331:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12359:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "12351:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12351:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12374:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "12366:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12366:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12350:31:11"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1572,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "12437:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "12429:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12429:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "12460:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "12452:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12452:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12428:43:11"
            },
            "scope": 1594,
            "src": "12322:150:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1577,
              "nodeType": "StructuredDocumentation",
              "src": "12478:185:11",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled.\n @param inp The PaymentInput struct"
            },
            "functionSelector": "00f3b6e8",
            "id": 1583,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "12677:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "12718:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "12696:25:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$1313_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1578,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1313,
                      "src": "12696:12:11"
                    },
                    "referencedDeclaration": 1313,
                    "src": "12696:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$1313_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12695:27:11"
            },
            "returnParameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12736:0:11"
            },
            "scope": 1594,
            "src": "12668:69:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1584,
              "nodeType": "StructuredDocumentation",
              "src": "12766:396:11",
              "text": " @notice Safe computation of fee amount for a provided amount, feeBPS pair\n @dev Must return a value that is guaranteed to be less or equal to the provided amount\n @param amount The amount\n @param feeBPS The percentage fee expressed in Basis Points (bps).\n  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n @return The fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 1593,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "13176:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1586,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13201:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "13193:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13193:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1588,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "13217:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "13209:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13209:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13192:32:11"
            },
            "returnParameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "13272:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13272:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13271:9:11"
            },
            "scope": 1594,
            "src": "13167:114:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1595,
        "src": "2069:11214:11",
        "usedErrors": []
      }
    ],
    "src": "32:13252:11"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Payments/IPaymentsERC20.sol",
    "exportedSymbols": {
      "Context": [
        742
      ],
      "ECDSA": [
        886
      ],
      "EIP712": [
        1024
      ],
      "EIP712Verifier": [
        1169
      ],
      "FeesCollectors": [
        1293
      ],
      "IEIP712Verifier": [
        1345
      ],
      "IERC20": [
        694
      ],
      "IPaymentsERC20": [
        1594
      ],
      "Operators": [
        1718
      ],
      "Ownable": [
        109
      ]
    },
    "id": 1595,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1347,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:11"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 1348,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 695,
        "src": "58:64:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 1349,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 1294,
        "src": "123:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 1350,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 1170,
        "src": "154:30:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/IEIP712Verifier.sol",
        "file": "./IEIP712Verifier.sol",
        "id": 1351,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 1346,
        "src": "2036:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1352,
              "name": "IEIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1345,
              "src": "2097:15:11"
            },
            "id": 1353,
            "nodeType": "InheritanceSpecifier",
            "src": "2097:15:11"
          }
        ],
        "canonicalName": "IPaymentsERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1594,
        "linearizedBaseContracts": [
          1594,
          1345
        ],
        "name": "IPaymentsERC20",
        "nameLocation": "2079:14:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 1357,
            "name": "PaymentWindow",
            "nameLocation": "2125:13:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1355,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "2147:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "2139:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2139:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2138:16:11"
            },
            "src": "2119:36:11"
          },
          {
            "anonymous": false,
            "id": 1361,
            "name": "NewSeller",
            "nameLocation": "2166:9:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2192:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "2176:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2176:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2175:24:11"
            },
            "src": "2160:40:11"
          },
          {
            "anonymous": false,
            "id": 1367,
            "name": "BuyerRefunded",
            "nameLocation": "2211:13:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2241:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "2225:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1365,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2268:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1367,
                  "src": "2252:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2252:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2224:50:11"
            },
            "src": "2205:70:11"
          },
          {
            "anonymous": false,
            "id": 1375,
            "name": "Payin",
            "nameLocation": "2286:5:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2317:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "2301:25:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1371,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2352:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "2336:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1373,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2383:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1375,
                  "src": "2367:22:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2367:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2291:104:11"
            },
            "src": "2280:116:11"
          },
          {
            "anonymous": false,
            "id": 1379,
            "name": "Paid",
            "nameLocation": "2407:4:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1377,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2420:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1379,
                  "src": "2412:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1376,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2412:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2411:19:11"
            },
            "src": "2401:30:11"
          },
          {
            "anonymous": false,
            "id": 1385,
            "name": "Withdraw",
            "nameLocation": "2442:8:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1381,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2467:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "2451:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1383,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2481:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "2473:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2473:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2450:38:11"
            },
            "src": "2436:53:11"
          },
          {
            "canonicalName": "IPaymentsERC20.States",
            "id": 1390,
            "members": [
              {
                "id": 1386,
                "name": "NotStarted",
                "nameLocation": "2517:10:11",
                "nodeType": "EnumValue",
                "src": "2517:10:11"
              },
              {
                "id": 1387,
                "name": "AssetTransferring",
                "nameLocation": "2537:17:11",
                "nodeType": "EnumValue",
                "src": "2537:17:11"
              },
              {
                "id": 1388,
                "name": "Refunded",
                "nameLocation": "2564:8:11",
                "nodeType": "EnumValue",
                "src": "2564:8:11"
              },
              {
                "id": 1389,
                "name": "Paid",
                "nameLocation": "2582:4:11",
                "nodeType": "EnumValue",
                "src": "2582:4:11"
              }
            ],
            "name": "States",
            "nameLocation": "2500:6:11",
            "nodeType": "EnumDefinition",
            "src": "2495:97:11"
          },
          {
            "canonicalName": "IPaymentsERC20.Payment",
            "id": 1408,
            "members": [
              {
                "constant": false,
                "id": 1393,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "2857:5:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2850:12:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$1390",
                  "typeString": "enum IPaymentsERC20.States"
                },
                "typeName": {
                  "id": 1392,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1391,
                    "name": "States",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1390,
                    "src": "2850:6:11"
                  },
                  "referencedDeclaration": 1390,
                  "src": "2850:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$1390",
                    "typeString": "enum IPaymentsERC20.States"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1395,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "2880:5:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2872:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1394,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2872:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1397,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2903:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2895:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1396,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2895:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1399,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "2927:8:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2919:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1398,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2919:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1401,
                "mutability": "mutable",
                "name": "feesCollector",
                "nameLocation": "2953:13:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2945:21:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2945:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1403,
                "mutability": "mutable",
                "name": "expirationTime",
                "nameLocation": "2984:14:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "2976:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1402,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2976:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1405,
                "mutability": "mutable",
                "name": "feeBPS",
                "nameLocation": "3015:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "3008:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 1404,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "3008:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1407,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3039:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 1408,
                "src": "3031:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1406,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3031:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nameLocation": "2832:7:11",
            "nodeType": "StructDefinition",
            "scope": 1594,
            "src": "2825:227:11",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 1409,
              "nodeType": "StructuredDocumentation",
              "src": "3058:93:11",
              "text": " @notice Registers msg.sender as seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 1412,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "3165:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3181:2:11"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3192:0:11"
            },
            "scope": 1594,
            "src": "3156:37:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1413,
              "nodeType": "StructuredDocumentation",
              "src": "3199:690:11",
              "text": " @notice Starts the Payment process via relay-by-operator.\n @dev Executed by an operator, who relays the MetaTX with the buyer's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param buyerSignature The signature of 'inp' by the buyer"
            },
            "functionSelector": "06a212ae",
            "id": 1421,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "relayedPay",
            "nameLocation": "3903:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1416,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "3945:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1421,
                  "src": "3923:25:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$1313_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1415,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1414,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1313,
                      "src": "3923:12:11"
                    },
                    "referencedDeclaration": 1313,
                    "src": "3923:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$1313_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1418,
                  "mutability": "mutable",
                  "name": "buyerSignature",
                  "nameLocation": "3973:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1421,
                  "src": "3958:29:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1417,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3913:80:11"
            },
            "returnParameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4002:0:11"
            },
            "scope": 1594,
            "src": "3894:109:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1422,
              "nodeType": "StructuredDocumentation",
              "src": "4009:693:11",
              "text": " @notice Starts Payment process directly by the buyer.\n @dev Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 1430,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "4716:3:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "4742:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1430,
                  "src": "4720:25:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$1313_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1423,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1313,
                      "src": "4720:12:11"
                    },
                    "referencedDeclaration": 1313,
                    "src": "4720:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$1313_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "4762:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1430,
                  "src": "4747:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4747:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4719:61:11"
            },
            "returnParameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4797:0:11"
            },
            "scope": 1594,
            "src": "4707:91:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1431,
              "nodeType": "StructuredDocumentation",
              "src": "4804:590:11",
              "text": " @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n  and updates balances of seller or buyer, respectively.\n @dev Can be executed by anyone, but the operator signature must be included as input param.\n  Seller or Buyer's balances are updated, allowing explicit withdrawal.\n  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n @param result The asset transfer result struct signed by the operator.\n @param operatorSignature The operator signature of result"
            },
            "functionSelector": "96aa71b0",
            "id": 1439,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalize",
            "nameLocation": "5408:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1434,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "5455:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "5426:35:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetTransferResult_$1318_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.AssetTransferResult"
                  },
                  "typeName": {
                    "id": 1433,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1432,
                      "name": "AssetTransferResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1318,
                      "src": "5426:19:11"
                    },
                    "referencedDeclaration": 1318,
                    "src": "5426:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetTransferResult_$1318_storage_ptr",
                      "typeString": "struct IEIP712Verifier.AssetTransferResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "5486:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "5471:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5471:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5416:93:11"
            },
            "returnParameters": {
              "id": 1438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5518:0:11"
            },
            "scope": 1594,
            "src": "5399:120:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1440,
              "nodeType": "StructuredDocumentation",
              "src": "5525:752:11",
              "text": " @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n updates balances of seller or buyer, respectively,\n and proceeds to withdraw all funds in this contract available to msg.sender.\n @dev Can be executed by anyone, but the operator signature must be included as input param.\n  It is, however, expected to be executed by the seller, in case of a successful asset transfer,\n  or the buyer, in case of a failed asset transfer.\n  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n @param result The asset transfer result struct signed by the operator.\n @param operatorSignature The operator signature of result"
            },
            "functionSelector": "a1bc474d",
            "id": 1448,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeAndWithdraw",
            "nameLocation": "6291:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1443,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "6349:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "6320:35:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetTransferResult_$1318_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.AssetTransferResult"
                  },
                  "typeName": {
                    "id": 1442,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1441,
                      "name": "AssetTransferResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1318,
                      "src": "6320:19:11"
                    },
                    "referencedDeclaration": 1318,
                    "src": "6320:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetTransferResult_$1318_storage_ptr",
                      "typeString": "struct IEIP712Verifier.AssetTransferResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1445,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "6380:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "6365:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1444,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6365:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6310:93:11"
            },
            "returnParameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6412:0:11"
            },
            "scope": 1594,
            "src": "6282:131:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "6419:346:11",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n @dev Anybody can call this function.\n  Requires acceptsRefunds == true to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  Moves payment to REFUNDED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 1454,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "6779:6:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1451,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "6794:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1454,
                  "src": "6786:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6786:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6785:19:11"
            },
            "returnParameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6813:0:11"
            },
            "scope": 1594,
            "src": "6770:44:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1455,
              "nodeType": "StructuredDocumentation",
              "src": "6820:416:11",
              "text": " @notice Executes refund and withdraw in one transaction.\n @dev Anybody can call this function.\n  Requires acceptsRefunds == true to proceed.\n  All of msg.sender's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n  Moves payment to REFUNDED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 1460,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "7250:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1457,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "7276:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1460,
                  "src": "7268:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1456,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7268:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7267:19:11"
            },
            "returnParameters": {
              "id": 1459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7295:0:11"
            },
            "scope": 1594,
            "src": "7241:55:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1461,
              "nodeType": "StructuredDocumentation",
              "src": "7302:115:11",
              "text": " @notice Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 1464,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "7431:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7439:2:11"
            },
            "returnParameters": {
              "id": 1463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7450:0:11"
            },
            "scope": 1594,
            "src": "7422:29:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1465,
              "nodeType": "StructuredDocumentation",
              "src": "7480:193:11",
              "text": " @notice Returns whether sellers need to be registered to be able to accept payments\n @return Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 1470,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "7687:28:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7715:2:11"
            },
            "returnParameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "7741:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7741:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7740:6:11"
            },
            "scope": 1594,
            "src": "7678:69:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1471,
              "nodeType": "StructuredDocumentation",
              "src": "7753:200:11",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return Returns whether the address is registered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 1478,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "7967:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1473,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7994:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "7986:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7986:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7985:14:11"
            },
            "returnParameters": {
              "id": 1477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1478,
                  "src": "8023:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8023:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8022:6:11"
            },
            "scope": 1594,
            "src": "7958:71:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1479,
              "nodeType": "StructuredDocumentation",
              "src": "8035:169:11",
              "text": " @notice Returns the address of the ERC20 contract from which\n  tokens are accepted for payments\n @return the address of the ERC20 contract"
            },
            "functionSelector": "785e9e86",
            "id": 1484,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "erc20",
            "nameLocation": "8218:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8223:2:11"
            },
            "returnParameters": {
              "id": 1483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "8249:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8249:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8248:9:11"
            },
            "scope": 1594,
            "src": "8209:49:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1485,
              "nodeType": "StructuredDocumentation",
              "src": "8264:227:11",
              "text": " @notice Returns the local ERC20 balance of address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 1492,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "8505:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8523:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "8515:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8515:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8514:14:11"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1492,
                  "src": "8552:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8552:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8551:9:11"
            },
            "scope": 1594,
            "src": "8496:65:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1493,
              "nodeType": "StructuredDocumentation",
              "src": "8567:190:11",
              "text": " @notice Returns the ERC20 balance of address in the ERC20 contract\n @param addr the address that is queried\n @return the balance in the external ERC20 contract"
            },
            "functionSelector": "02519da3",
            "id": 1500,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "erc20BalanceOf",
            "nameLocation": "8771:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1495,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "8794:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "8786:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8786:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8785:14:11"
            },
            "returnParameters": {
              "id": 1499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1500,
                  "src": "8823:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1497,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8823:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8822:9:11"
            },
            "scope": 1594,
            "src": "8762:70:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1501,
              "nodeType": "StructuredDocumentation",
              "src": "8838:231:11",
              "text": " @notice Returns the allowance that the buyer has approved\n  directly in the ERC20 contract in favour of this contract.\n @param buyer the address of the buyer\n @return the amount allowed by buyer"
            },
            "functionSelector": "3e5beab9",
            "id": 1508,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "9083:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "9101:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1508,
                  "src": "9093:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9093:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9092:15:11"
            },
            "returnParameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1508,
                  "src": "9131:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9131:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9130:9:11"
            },
            "scope": 1594,
            "src": "9074:66:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1509,
              "nodeType": "StructuredDocumentation",
              "src": "9146:179:11",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 1517,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "9339:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1511,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9359:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "9351:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9351:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9350:19:11"
            },
            "returnParameters": {
              "id": 1516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1515,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1517,
                  "src": "9417:14:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$1408_memory_ptr",
                    "typeString": "struct IPaymentsERC20.Payment"
                  },
                  "typeName": {
                    "id": 1514,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1513,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1408,
                      "src": "9417:7:11"
                    },
                    "referencedDeclaration": 1408,
                    "src": "9417:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$1408_storage_ptr",
                      "typeString": "struct IPaymentsERC20.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9416:16:11"
            },
            "scope": 1594,
            "src": "9330:103:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1518,
              "nodeType": "StructuredDocumentation",
              "src": "9439:310:11",
              "text": " @notice Returns the state of a payment.\n @dev If payment is in ASSET_TRANSFERRING, it may be worth\n  checking acceptsRefunds ot check if it has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the state of the payment."
            },
            "functionSelector": "34b778ed",
            "id": 1526,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "9763:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1520,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9784:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "9776:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1519,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9776:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9775:19:11"
            },
            "returnParameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1524,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1526,
                  "src": "9818:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$1390",
                    "typeString": "enum IPaymentsERC20.States"
                  },
                  "typeName": {
                    "id": 1523,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1522,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1390,
                      "src": "9818:6:11"
                    },
                    "referencedDeclaration": 1390,
                    "src": "9818:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$1390",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9817:8:11"
            },
            "scope": 1594,
            "src": "9754:72:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1527,
              "nodeType": "StructuredDocumentation",
              "src": "9832:298:11",
              "text": " @notice Returns true if the payment accepts a refund to the buyer\n @dev The payment must be in ASSET_TRANSFERRING and beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return true if the payment accepts a refund to the buyer."
            },
            "functionSelector": "244aa5d7",
            "id": 1534,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptsRefunds",
            "nameLocation": "10144:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "10167:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "10159:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10159:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10158:19:11"
            },
            "returnParameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1534,
                  "src": "10201:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10201:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10200:6:11"
            },
            "scope": 1594,
            "src": "10135:72:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1535,
              "nodeType": "StructuredDocumentation",
              "src": "10213:226:11",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window in secs"
            },
            "functionSelector": "cab55d56",
            "id": 1540,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "10453:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10466:2:11"
            },
            "returnParameters": {
              "id": 1539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "10492:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10492:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10491:9:11"
            },
            "scope": 1594,
            "src": "10444:57:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1541,
              "nodeType": "StructuredDocumentation",
              "src": "10507:143:11",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 1546,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "10664:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10680:2:11"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "10706:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10706:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10705:15:11"
            },
            "scope": 1594,
            "src": "10655:66:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1547,
              "nodeType": "StructuredDocumentation",
              "src": "10727:473:11",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n @dev In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n @param buyer The address for which funds are queried\n @param amount The amount that is queried\n @return Returns true if enough funds are available"
            },
            "functionSelector": "9cfd495c",
            "id": 1556,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "11214:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1549,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "11243:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "11235:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11235:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1551,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11258:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "11250:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11250:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11234:31:11"
            },
            "returnParameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1556,
                  "src": "11313:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11313:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11312:6:11"
            },
            "scope": 1594,
            "src": "11205:114:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1557,
              "nodeType": "StructuredDocumentation",
              "src": "11325:342:11",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n @dev In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the funds available and approved in the ERC20 contract.\n @param buyer The address for which funds are queried\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 1564,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "11681:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "11707:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "11699:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11699:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11698:15:11"
            },
            "returnParameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1564,
                  "src": "11737:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11737:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11736:9:11"
            },
            "scope": 1594,
            "src": "11672:74:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1565,
              "nodeType": "StructuredDocumentation",
              "src": "11752:565:11",
              "text": " @notice Splits the funds required to pay 'amount' into two source:\n  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n @param buyer The address for which the amount is to be split\n @param amount The amount to be split\n @return externalFunds The amount of ERC20 required from the external ERC20 contract.\n @return localFunds The amount of ERC20 local funds required."
            },
            "functionSelector": "317cb018",
            "id": 1576,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "12331:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "12359:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "12351:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12351:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12374:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "12366:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12366:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12350:31:11"
            },
            "returnParameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1572,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "12437:13:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "12429:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12429:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "12460:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1576,
                  "src": "12452:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12452:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12428:43:11"
            },
            "scope": 1594,
            "src": "12322:150:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1577,
              "nodeType": "StructuredDocumentation",
              "src": "12478:185:11",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled.\n @param inp The PaymentInput struct"
            },
            "functionSelector": "00f3b6e8",
            "id": 1583,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "12677:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "12718:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1583,
                  "src": "12696:25:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$1313_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1578,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1313,
                      "src": "12696:12:11"
                    },
                    "referencedDeclaration": 1313,
                    "src": "12696:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$1313_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12695:27:11"
            },
            "returnParameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12736:0:11"
            },
            "scope": 1594,
            "src": "12668:69:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1584,
              "nodeType": "StructuredDocumentation",
              "src": "12766:396:11",
              "text": " @notice Safe computation of fee amount for a provided amount, feeBPS pair\n @dev Must return a value that is guaranteed to be less or equal to the provided amount\n @param amount The amount\n @param feeBPS The percentage fee expressed in Basis Points (bps).\n  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n @return The fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 1593,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "13176:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1586,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13201:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "13193:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13193:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1588,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "13217:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "13209:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13209:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13192:32:11"
            },
            "returnParameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "13272:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13272:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13271:9:11"
            },
            "scope": 1594,
            "src": "13167:114:11",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1595,
        "src": "2069:11214:11",
        "usedErrors": []
      }
    ],
    "src": "32:13252:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-02-24T14:04:32.510Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptedCurrency()": {
        "returns": {
          "_0": "the string describing the currency"
        }
      },
      "acceptsRefunds(bytes32)": {
        "details": "The payment must be in ASSET_TRANSFERRING and beyond expirationTime.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "true if the payment accepts a refund to the buyer."
        }
      },
      "allowance(address)": {
        "params": {
          "buyer": "the address of the buyer"
        },
        "returns": {
          "_0": "the amount allowed by buyer"
        }
      },
      "balanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the local balance"
        }
      },
      "checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))": {
        "params": {
          "inp": "The PaymentInput struct"
        }
      },
      "computeFeeAmount(uint256,uint256)": {
        "details": "Must return a value that is guaranteed to be less or equal to the provided amount",
        "params": {
          "amount": "The amount",
          "feeBPS": "The percentage fee expressed in Basis Points (bps).  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps"
        },
        "returns": {
          "_0": "The fee amount"
        }
      },
      "enoughFundsAvailable(address,uint256)": {
        "details": "In more detail: returns true if the sum of the buyer's local balance in this contract,  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'",
        "params": {
          "amount": "The amount that is queried",
          "buyer": "The address for which funds are queried"
        },
        "returns": {
          "_0": "Returns true if enough funds are available"
        }
      },
      "erc20()": {
        "returns": {
          "_0": "the address of the ERC20 contract"
        }
      },
      "erc20BalanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the balance in the external ERC20 contract"
        }
      },
      "finalize((bytes32,bool),bytes)": {
        "details": "Can be executed by anyone, but the operator signature must be included as input param.  Seller or Buyer's balances are updated, allowing explicit withdrawal.  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.",
        "params": {
          "operatorSignature": "The operator signature of result",
          "result": "The asset transfer result struct signed by the operator."
        }
      },
      "finalizeAndWithdraw((bytes32,bool),bytes)": {
        "details": "Can be executed by anyone, but the operator signature must be included as input param.  It is, however, expected to be executed by the seller, in case of a successful asset transfer,  or the buyer, in case of a failed asset transfer.  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.",
        "params": {
          "operatorSignature": "The operator signature of result",
          "result": "The asset transfer result struct signed by the operator."
        }
      },
      "isRegisteredSeller(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "Returns whether the address is registered as seller"
        }
      },
      "isSellerRegistrationRequired()": {
        "returns": {
          "_0": "Returns true if sellers need to be registered to be able to accept payments"
        }
      },
      "maxFundsAvailable(address)": {
        "details": "In more detail: returns the sum of the buyer's local balance in this contract,  plus the funds available and approved in the ERC20 contract.",
        "params": {
          "buyer": "The address for which funds are queried"
        },
        "returns": {
          "_0": "the max funds available"
        }
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.  Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "inp": "The struct containing all required payment data",
          "operatorSignature": "The signature of 'inp' by the operator"
        }
      },
      "paymentInfo(bytes32)": {
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the struct stored for the payment"
        }
      },
      "paymentState(bytes32)": {
        "details": "If payment is in ASSET_TRANSFERRING, it may be worth  checking acceptsRefunds ot check if it has gone beyond expirationTime.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the state of the payment."
        }
      },
      "paymentWindow()": {
        "returns": {
          "_0": "the payment window in secs"
        }
      },
      "refund(bytes32)": {
        "details": "Anybody can call this function.  Requires acceptsRefunds == true to proceed.  After updating buyer's balance, he/she can later withdraw.  Moves payment to REFUNDED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "refundAndWithdraw(bytes32)": {
        "details": "Anybody can call this function.  Requires acceptsRefunds == true to proceed.  All of msg.sender's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId  Moves payment to REFUNDED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Executed by an operator, who relays the MetaTX with the buyer's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.  Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "buyerSignature": "The signature of 'inp' by the buyer",
          "inp": "The struct containing all required payment data"
        }
      },
      "splitFundingSources(address,uint256)": {
        "params": {
          "amount": "The amount to be split",
          "buyer": "The address for which the amount is to be split"
        },
        "returns": {
          "externalFunds": "The amount of ERC20 required from the external ERC20 contract.",
          "localFunds": "The amount of ERC20 local funds required."
        }
      },
      "verifyAssetTransferResult((bytes32,bool),bytes,address)": {
        "params": {
          "inp": "The provided AssetTransferResult struct",
          "signature": "The provided signature of the input struct",
          "signer": "The signer's address that we want to verify"
        },
        "returns": {
          "_0": "Returns true if the signature corresponds to the signer  having signed the input struct"
        }
      },
      "verifyPayment((bytes32,uint256,uint16,uint256,uint256,address,address),bytes,address)": {
        "params": {
          "inp": "The provided PaymentInput struct",
          "signature": "The provided signature of the input struct",
          "signer": "The signer's address that we want to verify"
        },
        "returns": {
          "_0": "Returns true if the signature corresponds to the signer having signed the input struct"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptedCurrency()": {
        "notice": "Returns a descriptor about the currency that this contract accepts"
      },
      "acceptsRefunds(bytes32)": {
        "notice": "Returns true if the payment accepts a refund to the buyer"
      },
      "allowance(address)": {
        "notice": "Returns the allowance that the buyer has approved  directly in the ERC20 contract in favour of this contract."
      },
      "balanceOf(address)": {
        "notice": "Returns the local ERC20 balance of address that is stored in this  contract, and hence, available for withdrawal."
      },
      "checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))": {
        "notice": "Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled."
      },
      "computeFeeAmount(uint256,uint256)": {
        "notice": "Safe computation of fee amount for a provided amount, feeBPS pair"
      },
      "enoughFundsAvailable(address,uint256)": {
        "notice": "Returns true if the 'amount' required for a payment is available to this contract."
      },
      "erc20()": {
        "notice": "Returns the address of the ERC20 contract from which  tokens are accepted for payments"
      },
      "erc20BalanceOf(address)": {
        "notice": "Returns the ERC20 balance of address in the ERC20 contract"
      },
      "finalize((bytes32,bool),bytes)": {
        "notice": "Relays the operator signature declaring that the asset transfer was successful or failed,  and updates balances of seller or buyer, respectively."
      },
      "finalizeAndWithdraw((bytes32,bool),bytes)": {
        "notice": "Relays the operator signature declaring that the asset transfer was successful or failed, updates balances of seller or buyer, respectively, and proceeds to withdraw all funds in this contract available to msg.sender."
      },
      "isRegisteredSeller(address)": {
        "notice": "Returns true if the address provided is a registered seller"
      },
      "isSellerRegistrationRequired()": {
        "notice": "Returns whether sellers need to be registered to be able to accept payments"
      },
      "maxFundsAvailable(address)": {
        "notice": "Returns the maximum amount of funds available to a buyer"
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts Payment process directly by the buyer."
      },
      "paymentInfo(bytes32)": {
        "notice": "Returns all data stored in a payment"
      },
      "paymentState(bytes32)": {
        "notice": "Returns the state of a payment."
      },
      "paymentWindow()": {
        "notice": "Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator"
      },
      "refund(bytes32)": {
        "notice": "Moves buyer's provided funds to buyer's balance."
      },
      "refundAndWithdraw(bytes32)": {
        "notice": "Executes refund and withdraw in one transaction."
      },
      "registerAsSeller()": {
        "notice": "Registers msg.sender as seller so that he/she can accept payments."
      },
      "relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts the Payment process via relay-by-operator."
      },
      "splitFundingSources(address,uint256)": {
        "notice": "Splits the funds required to pay 'amount' into two source:  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract."
      },
      "verifyAssetTransferResult((bytes32,bool),bytes,address)": {
        "notice": "Verifies that the provided input struct has been signed  by the provided signer."
      },
      "verifyPayment((bytes32,uint256,uint16,uint256,uint256,address,address),bytes,address)": {
        "notice": "Verifies that the provided input struct has been signed  by the provided signer."
      },
      "withdraw()": {
        "notice": "Transfers ERC20 avaliable in this  contract's balanceOf[msg.sender] to msg.sender"
      }
    },
    "version": 1
  }
}