{
  "contractName": "IPaymentsNative",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyerRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "NewSeller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "Payin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "PaymentWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "wasSuccessful",
              "type": "bool"
            }
          ],
          "internalType": "struct IEIP712Verifier.AssetTransferResult",
          "name": "result",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "verifyAssetTransferResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "verifyPayment",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "wasSuccessful",
              "type": "bool"
            }
          ],
          "internalType": "struct IEIP712Verifier.AssetTransferResult",
          "name": "result",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "wasSuccessful",
              "type": "bool"
            }
          ],
          "internalType": "struct IEIP712Verifier.AssetTransferResult",
          "name": "result",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "finalizeAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refundAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSellerRegistrationRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isRegisteredSeller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum IPaymentsNative.States",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feesCollector",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymentsNative.Payment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentState",
      "outputs": [
        {
          "internalType": "enum IPaymentsNative.States",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "acceptsRefunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptedCurrency",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "enoughFundsAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "maxFundsAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "splitFundingSources",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "externalFunds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "localFunds",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        }
      ],
      "name": "checkPaymentInputs",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeBPS",
          "type": "uint256"
        }
      ],
      "name": "computeFeeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyerRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"NewSeller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"Payin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"PaymentWindow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedCurrency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"acceptsRefunds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"}],\"name\":\"checkPaymentInputs\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBPS\",\"type\":\"uint256\"}],\"name\":\"computeFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"enoughFundsAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"wasSuccessful\",\"type\":\"bool\"}],\"internalType\":\"struct IEIP712Verifier.AssetTransferResult\",\"name\":\"result\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"wasSuccessful\",\"type\":\"bool\"}],\"internalType\":\"struct IEIP712Verifier.AssetTransferResult\",\"name\":\"result\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"finalizeAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isRegisteredSeller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSellerRegistrationRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"maxFundsAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IPaymentsNative.States\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsNative.Payment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentState\",\"outputs\":[{\"internalType\":\"enum IPaymentsNative.States\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refundAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"splitFundingSources\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"externalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"localFunds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"wasSuccessful\",\"type\":\"bool\"}],\"internalType\":\"struct IEIP712Verifier.AssetTransferResult\",\"name\":\"result\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"verifyAssetTransferResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"verifyPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptedCurrency()\":{\"returns\":{\"_0\":\"the string describing the currency\"}},\"acceptsRefunds(bytes32)\":{\"details\":\"The payment must be in ASSET_TRANSFERRING and beyond expirationTime.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"true if the payment accepts a refund to the buyer.\"}},\"balanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the local balance\"}},\"checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))\":{\"params\":{\"inp\":\"The PaymentInput struct\"}},\"computeFeeAmount(uint256,uint256)\":{\"details\":\"Must return a value that is guaranteed to be less or equal to the provided amount\",\"params\":{\"amount\":\"The amount\",\"feeBPS\":\"The percentage fee expressed in Basis Points (bps).  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\"},\"returns\":{\"_0\":\"The fee amount\"}},\"enoughFundsAvailable(address,uint256)\":{\"details\":\"In more detail: returns true if the sum of the buyer's local balance in this contract,  plus the external balance in the native crypto, are larger or equal than 'amount'\",\"params\":{\"amount\":\"The amount that is queried\",\"buyer\":\"The address for which funds are queried\"},\"returns\":{\"_0\":\"Returns true if enough funds are available\"}},\"finalize((bytes32,bool),bytes)\":{\"details\":\"Can be executed by anyone, but the operator signature must be included as input param.  Seller or Buyer's balances are updated, allowing explicit withdrawal.  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\",\"params\":{\"operatorSignature\":\"The operator signature of result\",\"result\":\"The asset transfer result struct signed by the operator.\"}},\"finalizeAndWithdraw((bytes32,bool),bytes)\":{\"details\":\"Can be executed by anyone, but the operator signature must be included as input param.  It is, however, expected to be executed by the seller, in case of a successful asset transfer,  or the buyer, in case of a failed asset transfer.  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\",\"params\":{\"operatorSignature\":\"The operator signature of result\",\"result\":\"The asset transfer result struct signed by the operator.\"}},\"isRegisteredSeller(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"Returns whether the address is registered as seller\"}},\"isSellerRegistrationRequired()\":{\"returns\":{\"_0\":\"Returns true if sellers need to be registered to be able to accept payments\"}},\"maxFundsAvailable(address)\":{\"details\":\"In more detail: returns the sum of the buyer's local balance in this contract,  plus the external balance in the native crypto.\",\"params\":{\"buyer\":\"The address for which funds are queried\"},\"returns\":{\"_0\":\"the max funds available\"}},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must provide the correct amount via msg.value.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the funds  in this contract.  Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"inp\":\"The struct containing all required payment data\",\"operatorSignature\":\"The signature of 'inp' by the operator\"}},\"paymentInfo(bytes32)\":{\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the struct stored for the payment\"}},\"paymentState(bytes32)\":{\"details\":\"If payment is in ASSET_TRANSFERRING, it may be worth  checking acceptsRefunds ot check if it has gone beyond expirationTime.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the state of the payment.\"}},\"paymentWindow()\":{\"returns\":{\"_0\":\"the payment window in secs\"}},\"refund(bytes32)\":{\"details\":\"Anybody can call this function.  Requires acceptsRefunds == true to proceed.  After updating buyer's balance, he/she can later withdraw.  Moves payment to REFUNDED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"refundAndWithdraw(bytes32)\":{\"details\":\"Anybody can call this function.  Requires acceptsRefunds == true to proceed.  All of msg.sender's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId  Moves payment to REFUNDED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"splitFundingSources(address,uint256)\":{\"params\":{\"amount\":\"The amount to be split\",\"buyer\":\"The address for which the amount is to be split\"},\"returns\":{\"externalFunds\":\"The amount of funds required to be transferred from the external buyer balance\",\"localFunds\":\"The amount of local funds that will be used.\"}},\"verifyAssetTransferResult((bytes32,bool),bytes,address)\":{\"params\":{\"result\":\"The provided AssetTransferResult struct\",\"signature\":\"The provided signature of the input struct\",\"signer\":\"The signer's address that we want to verify\"},\"returns\":{\"_0\":\"Returns true if the signature corresponds to the signer  having signed the input struct\"}},\"verifyPayment((bytes32,uint256,uint16,uint256,uint256,address,address),bytes,address)\":{\"params\":{\"inp\":\"The provided PaymentInput struct\",\"signature\":\"The provided signature of the input struct\",\"signer\":\"The signer's address that we want to verify\"},\"returns\":{\"_0\":\"Returns true if the signature corresponds to the   provided signer having signed the input struct\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptedCurrency()\":{\"notice\":\"Returns a descriptor about the currency that this contract accepts\"},\"acceptsRefunds(bytes32)\":{\"notice\":\"Returns true if the payment accepts a refund to the buyer\"},\"balanceOf(address)\":{\"notice\":\"Returns the local balance of the provided address that is stored in this  contract, and hence, available for withdrawal.\"},\"checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))\":{\"notice\":\"Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled.\"},\"computeFeeAmount(uint256,uint256)\":{\"notice\":\"Safe computation of fee amount for a provided amount, feeBPS pair\"},\"enoughFundsAvailable(address,uint256)\":{\"notice\":\"Returns true if the 'amount' required for a payment is available to this contract.\"},\"finalize((bytes32,bool),bytes)\":{\"notice\":\"Relays the operator signature declaring that the asset transfer was successful or failed,  and updates balances of seller or buyer, respectively.\"},\"finalizeAndWithdraw((bytes32,bool),bytes)\":{\"notice\":\"Relays the operator signature declaring that the asset transfer was successful or failed,  updates balances of seller or buyer, respectively,  and proceeds to withdraw all funds in this contract available to msg.sender.\"},\"isRegisteredSeller(address)\":{\"notice\":\"Returns true if the address provided is a registered seller\"},\"isSellerRegistrationRequired()\":{\"notice\":\"Returns whether sellers need to be registered to be able to accept payments\"},\"maxFundsAvailable(address)\":{\"notice\":\"Returns the maximum amount of funds available to a buyer\"},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts Payment process by the buyer.\"},\"paymentInfo(bytes32)\":{\"notice\":\"Returns all data stored in a payment\"},\"paymentState(bytes32)\":{\"notice\":\"Returns the state of a payment.\"},\"paymentWindow()\":{\"notice\":\"Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator\"},\"refund(bytes32)\":{\"notice\":\"Moves buyer's provided funds to buyer's balance.\"},\"refundAndWithdraw(bytes32)\":{\"notice\":\"Executes refund and withdraw in one transaction.\"},\"registerAsSeller()\":{\"notice\":\"Registers msg.sender as seller so that he/she can accept payments.\"},\"splitFundingSources(address,uint256)\":{\"notice\":\"Splits the funds required to pay 'amount' into two sources:  - externalFunds: the amount of crypto required to be transferred from the external buyer balance  - localFunds: the amount of crypto required from the buyer's already available balance in this contract.\"},\"verifyAssetTransferResult((bytes32,bool),bytes,address)\":{\"notice\":\"Verifies that the provided AssetTransferResult struct   has been signed by the provided signer.\"},\"verifyPayment((bytes32,uint256,uint16,uint256,uint256,address,address),bytes,address)\":{\"notice\":\"Verifies that the provided PaymentInput struct has been signed  by the provided signer.\"},\"withdraw()\":{\"notice\":\"Transfers funds avaliable in this  contract's balanceOf[msg.sender] to msg.sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IPaymentsNative.sol\":\"IPaymentsNative\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2b7a01bbc90040fd4a48bc143ac5a192da3b9bfc559ac08a78eaca40bf49e436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8a02af79b7d1c4eaa385d3b9d26509ac2619eab43bfbbc2ef9ef74508f8146\",\"dweb:/ipfs/QmWhEKw9ZmDjc9qfLmJcrxgopoCvbBNyFhUCJSewhSpzRi\"]},\"openzeppelin-solidity/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x75800223458de145e6088276ab661222e22557d7518459e1ffc57bb5b0496542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://504433dd10f0037339624055d52df67de43408a4d429eb546c6cb17e5c5a6ae6\",\"dweb:/ipfs/QmQfRTjvbsn9kCc7MNC2E7X4tzpYw4sEPPMpdyWVi5QQNj\"]},\"project:/contracts/EIP712Verifier.sol\":{\"keccak256\":\"0xf8af70955d253fb479ff17c09557211f6dfcd60dc95a93e4d2f6d94b3852dc0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e4c841e7d5b1c4d85438c8e3c81e44988c175f3ec50edfa563c3d0c9134d5c3\",\"dweb:/ipfs/QmQan1Ede9QRCBXKurstQxTkHb1MHxPohRwL66oogJ7yg5\"]},\"project:/contracts/FeesCollectors.sol\":{\"keccak256\":\"0xe77672b8adae8002c45a6323b060580e7ea0c50f9b4eef9f2d842326b6344e0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd2a0cff50a33b934f31e5b0e8a600305583690d74b876144d5956e405a6377d\",\"dweb:/ipfs/QmXSJ285WZLwhA7CpPFz4rBE54ay4rwXs1dzWqNT4HnsQy\"]},\"project:/contracts/IEIP712Verifier.sol\":{\"keccak256\":\"0x35a89bb399a62e29ab6d9f8054196844ef00a92b24d3a60e26007c139ca377a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc86eb3cb197343a13489f60453df9ef15c55bb51f973e80d9af6bfe2e82377f\",\"dweb:/ipfs/QmZekEmLVm8kZX2bE6Yb3qox4TbR8UiRs3Wt7nF88ddbTL\"]},\"project:/contracts/IPaymentsNative.sol\":{\"keccak256\":\"0x7e44787fb63cbf36c0ebf1109576fe9a71b625922078ee5d5709b20b468452c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b67fad76f3d5d96ee45a64b3568f670d0106eed9f690c0aaeedd8c4d29c072e6\",\"dweb:/ipfs/QmU4pu3gVHffvgU7uHB3hwJWwcAD193V1EZVN1iAMvRtK4\"]},\"project:/contracts/Operators.sol\":{\"keccak256\":\"0x639b4583eda697dbb036df0be88eb366290a42bdc11e5e6a5a7b7ae33c9a23b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0c957ae82756bce400c0e619920f2efec0f46781b6a3c3152acb7e7b96ecf95\",\"dweb:/ipfs/QmaaKTKmtUuc2X2nFAuyxdfbmRU9CUzyhCVo9RexBc9yJH\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.12;\n\nimport \"./FeesCollectors.sol\";\nimport \"./EIP712Verifier.sol\";\n\n/**\n * @title Interface to Payments Contract in Native Cryptocurencies.\n * @author Freeverse.io, www.freeverse.io\n * @dev Upon transfer of cryptocurrency to this contract, it remain\n * locked until an Operator confirms the success of failure of the\n * asset transfer required to fulfil this payment.\n *\n * If no confirmation is received from the operator during the PaymentWindow,\n * all of buyer's received funds are made available to the buyer for refund.\n *\n * To start a payment, the signatures of both the buyer and the Operator are required.\n * The buyer executes the pay function, providing the operatorSig as input param.\n *\n * This contract maintains the balances of all users, it does not transfer them automatically.\n * Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender]\n * If a buyer has non-zero local balance at the moment of starting a new payment,\n * the contract reuses it, and only requires the provision of the \n * remainder required (if any) as msg.value\n *\n * Each payment has the following States Machine:\n * - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay\n * - ASSET_TRANSFERRING -> PAID, triggered by relaying assetTransferSuccess signed by operator\n * - ASSET_TRANSFERRING -> REFUNDED, triggered by relaying assetTransferFailed signed by operator\n * - ASSET_TRANSFERRING -> REFUNDED, triggered by a refund request after expirationTime\n *\n * NOTE: To ensure that the a payment process proceeds as expected when the payment starts,\n * upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime}\n * is stored in the payment struct, and used throught the payment, regardless of\n * any possible modifications to the contract's storage.\n *\n */\n\nimport \"./IEIP712Verifier.sol\";\n\ninterface IPaymentsNative is IEIP712Verifier {\n    event PaymentWindow(uint256 window);\n    event NewSeller(address indexed seller);\n    event BuyerRefunded(bytes32 indexed paymentId, address indexed buyer);\n    event Payin(\n        bytes32 indexed paymentId,\n        address indexed buyer,\n        address indexed seller\n    );\n    event Paid(bytes32 paymentId);\n    event Withdraw(address indexed user, uint256 amount);\n\n    enum States {\n        NotStarted,\n        AssetTransferring,\n        Refunded,\n        Paid\n    }\n\n    /**\n     * @notice Main struct stored with every payment.\n     *  feeBPS is the percentage fee expressed in Basis Points (bps), typical in finance\n     *  Examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n     */\n    struct Payment {\n        States state;\n        address buyer;\n        address seller;\n        address operator;\n        address feesCollector;\n        uint256 expirationTime;\n        uint16 feeBPS;\n        uint256 amount;\n    }\n\n    /**\n     * @notice Registers msg.sender as seller so that he/she can accept payments.\n     */\n    function registerAsSeller() external;\n\n    /**\n     * @notice Starts Payment process by the buyer.\n     * @dev Executed by the buyer, who relays the MetaTX with the operator's signature.\n     *  The buyer must provide the correct amount via msg.value.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the funds\n     *  in this contract.\n     *  Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param operatorSignature The signature of 'inp' by the operator\n     */\n    function pay(PaymentInput calldata inp, bytes calldata operatorSignature)\n        external\n        payable;\n\n    /**\n     * @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n     *  and updates balances of seller or buyer, respectively.\n     * @dev Can be executed by anyone, but the operator signature must be included as input param.\n     *  Seller or Buyer's balances are updated, allowing explicit withdrawal.\n     *  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n     * @param result The asset transfer result struct signed by the operator.\n     * @param operatorSignature The operator signature of result\n     */\n    function finalize(\n        AssetTransferResult calldata result,\n        bytes calldata operatorSignature\n    ) external;\n\n    /**\n     * @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n     *  updates balances of seller or buyer, respectively,\n     *  and proceeds to withdraw all funds in this contract available to msg.sender.\n     * @dev Can be executed by anyone, but the operator signature must be included as input param.\n     *  It is, however, expected to be executed by the seller, in case of a successful asset transfer,\n     *  or the buyer, in case of a failed asset transfer.\n     *  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n     * @param result The asset transfer result struct signed by the operator.\n     * @param operatorSignature The operator signature of result\n     */\n    function finalizeAndWithdraw(\n        AssetTransferResult calldata result,\n        bytes calldata operatorSignature\n    ) external;\n\n    /**\n     * @notice Moves buyer's provided funds to buyer's balance.\n     * @dev Anybody can call this function.\n     *  Requires acceptsRefunds == true to proceed.\n     *  After updating buyer's balance, he/she can later withdraw.\n     *  Moves payment to REFUNDED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refund(bytes32 paymentId) external;\n\n    /**\n     * @notice Executes refund and withdraw in one transaction.\n     * @dev Anybody can call this function.\n     *  Requires acceptsRefunds == true to proceed.\n     *  All of msg.sender's balance in the contract is withdrawn,\n     *  not only the part that was locked in this particular paymentId\n     *  Moves payment to REFUNDED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refundAndWithdraw(bytes32 paymentId) external;\n\n    /**\n     * @notice Transfers funds avaliable in this\n     *  contract's balanceOf[msg.sender] to msg.sender\n     */\n    function withdraw() external;\n\n    // VIEW FUNCTIONS\n\n    /**\n     * @notice Returns whether sellers need to be registered to be able to accept payments\n     * @return Returns true if sellers need to be registered to be able to accept payments\n     */\n    function isSellerRegistrationRequired() external view returns (bool);\n\n    /**\n     * @notice Returns true if the address provided is a registered seller\n     * @param addr the address that is queried\n     * @return Returns whether the address is registered as seller\n     */\n    function isRegisteredSeller(address addr) external view returns (bool);\n\n    /**\n     * @notice Returns the local balance of the provided address that is stored in this\n     *  contract, and hence, available for withdrawal.\n     * @param addr the address that is queried\n     * @return the local balance\n     */\n    function balanceOf(address addr) external view returns (uint256);\n\n    /**\n     * @notice Returns all data stored in a payment\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the struct stored for the payment\n     */\n    function paymentInfo(bytes32 paymentId)\n        external\n        view\n        returns (Payment memory);\n\n    /**\n     * @notice Returns the state of a payment.\n     * @dev If payment is in ASSET_TRANSFERRING, it may be worth\n     *  checking acceptsRefunds ot check if it has gone beyond expirationTime.\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the state of the payment.\n     */\n    function paymentState(bytes32 paymentId) external view returns (States);\n\n    /**\n     * @notice Returns true if the payment accepts a refund to the buyer\n     * @dev The payment must be in ASSET_TRANSFERRING and beyond expirationTime.\n     * @param paymentId The unique ID that identifies the payment.\n     * @return true if the payment accepts a refund to the buyer.\n     */\n    function acceptsRefunds(bytes32 paymentId) external view returns (bool);\n\n    /**\n     * @notice Returns the amount of seconds that a payment\n     *  can remain in ASSET_TRANSFERRING state without positive\n     *  or negative confirmation by the operator\n     * @return the payment window in secs\n     */\n    function paymentWindow() external view returns (uint256);\n\n    /**\n     * @notice Returns a descriptor about the currency that this contract accepts\n     * @return the string describing the currency\n     */\n    function acceptedCurrency() external view returns (string memory);\n\n    /**\n     * @notice Returns true if the 'amount' required for a payment is available to this contract.\n     * @dev In more detail: returns true if the sum of the buyer's local balance in this contract,\n     *  plus the external balance in the native crypto, are larger or equal than 'amount'\n     * @param buyer The address for which funds are queried\n     * @param amount The amount that is queried\n     * @return Returns true if enough funds are available\n     */\n    function enoughFundsAvailable(address buyer, uint256 amount)\n        external\n        view\n        returns (bool);\n\n    /**\n     * @notice Returns the maximum amount of funds available to a buyer\n     * @dev In more detail: returns the sum of the buyer's local balance in this contract,\n     *  plus the external balance in the native crypto.\n     * @param buyer The address for which funds are queried\n     * @return the max funds available\n     */\n    function maxFundsAvailable(address buyer) external view returns (uint256);\n\n    /**\n     * @notice Splits the funds required to pay 'amount' into two sources:\n     *  - externalFunds: the amount of crypto required to be transferred from the external buyer balance\n     *  - localFunds: the amount of crypto required from the buyer's already available balance in this contract.\n     * @param buyer The address for which the amount is to be split\n     * @param amount The amount to be split\n     * @return externalFunds The amount of funds required to be transferred from the external buyer balance\n     * @return localFunds The amount of local funds that will be used.\n     */\n    function splitFundingSources(address buyer, uint256 amount)\n        external\n        view\n        returns (uint256 externalFunds, uint256 localFunds);\n\n    /**\n     * @notice Reverts unless the requirements for a PaymentInput that\n     *  are common to both pay and relayedPay are fulfilled.\n     * @param inp The PaymentInput struct\n     */\n    function checkPaymentInputs(PaymentInput calldata inp) external view;\n\n    // PURE FUNCTIONS\n\n    /**\n     * @notice Safe computation of fee amount for a provided amount, feeBPS pair\n     * @dev Must return a value that is guaranteed to be less or equal to the provided amount\n     * @param amount The amount\n     * @param feeBPS The percentage fee expressed in Basis Points (bps).\n     *  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n     * @return The fee amount\n     */\n    function computeFeeAmount(uint256 amount, uint256 feeBPS)\n        external\n        pure\n        returns (uint256);\n}\n",
  "sourcePath": "/Users/toni/gits/cryptoPaymentsNative/contracts/IPaymentsNative.sol",
  "ast": {
    "absolutePath": "project:/contracts/IPaymentsNative.sol",
    "exportedSymbols": {
      "Context": [
        132
      ],
      "ECDSA": [
        276
      ],
      "EIP712": [
        414
      ],
      "EIP712Verifier": [
        527
      ],
      "FeesCollectors": [
        651
      ],
      "IEIP712Verifier": [
        703
      ],
      "IPaymentsNative": [
        920
      ],
      "Operators": [
        1077
      ],
      "Ownable": [
        109
      ]
    },
    "id": 921,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 705,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "absolutePath": "project:/contracts/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 706,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 652,
        "src": "58:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 707,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 528,
        "src": "89:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IEIP712Verifier.sol",
        "file": "./IEIP712Verifier.sol",
        "id": 708,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 704,
        "src": "1870:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 709,
              "name": "IEIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 703,
              "src": "1932:15:7"
            },
            "id": 710,
            "nodeType": "InheritanceSpecifier",
            "src": "1932:15:7"
          }
        ],
        "canonicalName": "IPaymentsNative",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 920,
        "linearizedBaseContracts": [
          920,
          703
        ],
        "name": "IPaymentsNative",
        "nameLocation": "1913:15:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 714,
            "name": "PaymentWindow",
            "nameLocation": "1960:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "1982:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "1974:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:16:7"
            },
            "src": "1954:36:7"
          },
          {
            "anonymous": false,
            "id": 718,
            "name": "NewSeller",
            "nameLocation": "2001:9:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2027:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "2011:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2010:24:7"
            },
            "src": "1995:40:7"
          },
          {
            "anonymous": false,
            "id": 724,
            "name": "BuyerRefunded",
            "nameLocation": "2046:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 720,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2076:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "2060:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 722,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2103:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "2087:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:50:7"
            },
            "src": "2040:70:7"
          },
          {
            "anonymous": false,
            "id": 732,
            "name": "Payin",
            "nameLocation": "2121:5:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2152:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2136:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2187:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2171:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 730,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2218:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2202:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2126:104:7"
            },
            "src": "2115:116:7"
          },
          {
            "anonymous": false,
            "id": 736,
            "name": "Paid",
            "nameLocation": "2242:4:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2255:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "2247:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2246:19:7"
            },
            "src": "2236:30:7"
          },
          {
            "anonymous": false,
            "id": 742,
            "name": "Withdraw",
            "nameLocation": "2277:8:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2302:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2286:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2286:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2316:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2308:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2285:38:7"
            },
            "src": "2271:53:7"
          },
          {
            "canonicalName": "IPaymentsNative.States",
            "id": 747,
            "members": [
              {
                "id": 743,
                "name": "NotStarted",
                "nameLocation": "2352:10:7",
                "nodeType": "EnumValue",
                "src": "2352:10:7"
              },
              {
                "id": 744,
                "name": "AssetTransferring",
                "nameLocation": "2372:17:7",
                "nodeType": "EnumValue",
                "src": "2372:17:7"
              },
              {
                "id": 745,
                "name": "Refunded",
                "nameLocation": "2399:8:7",
                "nodeType": "EnumValue",
                "src": "2399:8:7"
              },
              {
                "id": 746,
                "name": "Paid",
                "nameLocation": "2417:4:7",
                "nodeType": "EnumValue",
                "src": "2417:4:7"
              }
            ],
            "name": "States",
            "nameLocation": "2335:6:7",
            "nodeType": "EnumDefinition",
            "src": "2330:97:7"
          },
          {
            "canonicalName": "IPaymentsNative.Payment",
            "id": 765,
            "members": [
              {
                "constant": false,
                "id": 750,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "2692:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2685:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$747",
                  "typeString": "enum IPaymentsNative.States"
                },
                "typeName": {
                  "id": 749,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 748,
                    "name": "States",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 747,
                    "src": "2685:6:7"
                  },
                  "referencedDeclaration": 747,
                  "src": "2685:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$747",
                    "typeString": "enum IPaymentsNative.States"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 752,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "2715:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2707:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 751,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2707:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 754,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2738:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2730:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 753,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2730:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 756,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "2762:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2754:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 755,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2754:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 758,
                "mutability": "mutable",
                "name": "feesCollector",
                "nameLocation": "2788:13:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2780:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 757,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2780:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 760,
                "mutability": "mutable",
                "name": "expirationTime",
                "nameLocation": "2819:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2811:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 759,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2811:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 762,
                "mutability": "mutable",
                "name": "feeBPS",
                "nameLocation": "2850:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2843:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 761,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2843:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 764,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "2874:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2866:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 763,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2866:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nameLocation": "2667:7:7",
            "nodeType": "StructDefinition",
            "scope": 920,
            "src": "2660:227:7",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "2893:93:7",
              "text": " @notice Registers msg.sender as seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 769,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "3000:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3016:2:7"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3027:0:7"
            },
            "scope": 920,
            "src": "2991:37:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 770,
              "nodeType": "StructuredDocumentation",
              "src": "3034:676:7",
              "text": " @notice Starts Payment process by the buyer.\n @dev Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must provide the correct amount via msg.value.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the funds\n  in this contract.\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 778,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "3724:3:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "3750:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "3728:25:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$671_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 772,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 771,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 671,
                      "src": "3728:12:7"
                    },
                    "referencedDeclaration": 671,
                    "src": "3728:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$671_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "3770:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "3755:32:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3755:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3727:61:7"
            },
            "returnParameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3821:0:7"
            },
            "scope": 920,
            "src": "3715:107:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 779,
              "nodeType": "StructuredDocumentation",
              "src": "3828:590:7",
              "text": " @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n  and updates balances of seller or buyer, respectively.\n @dev Can be executed by anyone, but the operator signature must be included as input param.\n  Seller or Buyer's balances are updated, allowing explicit withdrawal.\n  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n @param result The asset transfer result struct signed by the operator.\n @param operatorSignature The operator signature of result"
            },
            "functionSelector": "96aa71b0",
            "id": 787,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalize",
            "nameLocation": "4432:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "4479:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "4450:35:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetTransferResult_$676_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.AssetTransferResult"
                  },
                  "typeName": {
                    "id": 781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 780,
                      "name": "AssetTransferResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 676,
                      "src": "4450:19:7"
                    },
                    "referencedDeclaration": 676,
                    "src": "4450:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetTransferResult_$676_storage_ptr",
                      "typeString": "struct IEIP712Verifier.AssetTransferResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "4510:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "4495:32:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4440:93:7"
            },
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4542:0:7"
            },
            "scope": 920,
            "src": "4423:120:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 788,
              "nodeType": "StructuredDocumentation",
              "src": "4549:754:7",
              "text": " @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n  updates balances of seller or buyer, respectively,\n  and proceeds to withdraw all funds in this contract available to msg.sender.\n @dev Can be executed by anyone, but the operator signature must be included as input param.\n  It is, however, expected to be executed by the seller, in case of a successful asset transfer,\n  or the buyer, in case of a failed asset transfer.\n  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n @param result The asset transfer result struct signed by the operator.\n @param operatorSignature The operator signature of result"
            },
            "functionSelector": "a1bc474d",
            "id": 796,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeAndWithdraw",
            "nameLocation": "5317:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "5375:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "5346:35:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetTransferResult_$676_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.AssetTransferResult"
                  },
                  "typeName": {
                    "id": 790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 789,
                      "name": "AssetTransferResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 676,
                      "src": "5346:19:7"
                    },
                    "referencedDeclaration": 676,
                    "src": "5346:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetTransferResult_$676_storage_ptr",
                      "typeString": "struct IEIP712Verifier.AssetTransferResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "5406:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "5391:32:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5391:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5336:93:7"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5438:0:7"
            },
            "scope": 920,
            "src": "5308:131:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 797,
              "nodeType": "StructuredDocumentation",
              "src": "5445:346:7",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n @dev Anybody can call this function.\n  Requires acceptsRefunds == true to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  Moves payment to REFUNDED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 802,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "5805:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "5820:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "5812:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5812:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5811:19:7"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5839:0:7"
            },
            "scope": 920,
            "src": "5796:44:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 803,
              "nodeType": "StructuredDocumentation",
              "src": "5846:416:7",
              "text": " @notice Executes refund and withdraw in one transaction.\n @dev Anybody can call this function.\n  Requires acceptsRefunds == true to proceed.\n  All of msg.sender's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n  Moves payment to REFUNDED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 808,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "6276:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "6302:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "6294:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6294:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6293:19:7"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6321:0:7"
            },
            "scope": 920,
            "src": "6267:55:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 809,
              "nodeType": "StructuredDocumentation",
              "src": "6328:115:7",
              "text": " @notice Transfers funds avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 812,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "6457:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6465:2:7"
            },
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6476:0:7"
            },
            "scope": 920,
            "src": "6448:29:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "6506:193:7",
              "text": " @notice Returns whether sellers need to be registered to be able to accept payments\n @return Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 818,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "6713:28:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6741:2:7"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "6767:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6767:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6766:6:7"
            },
            "scope": 920,
            "src": "6704:69:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 819,
              "nodeType": "StructuredDocumentation",
              "src": "6779:200:7",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return Returns whether the address is registered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 826,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "6993:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7020:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "7012:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7012:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7011:14:7"
            },
            "returnParameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "7049:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7048:6:7"
            },
            "scope": 920,
            "src": "6984:71:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 827,
              "nodeType": "StructuredDocumentation",
              "src": "7061:234:7",
              "text": " @notice Returns the local balance of the provided address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 834,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "7309:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7327:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "7319:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7319:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7318:14:7"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "7356:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7356:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7355:9:7"
            },
            "scope": 920,
            "src": "7300:65:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 835,
              "nodeType": "StructuredDocumentation",
              "src": "7371:179:7",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 843,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "7564:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "7584:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "7576:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7576:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7575:19:7"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "7642:14:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$765_memory_ptr",
                    "typeString": "struct IPaymentsNative.Payment"
                  },
                  "typeName": {
                    "id": 840,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 839,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 765,
                      "src": "7642:7:7"
                    },
                    "referencedDeclaration": 765,
                    "src": "7642:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$765_storage_ptr",
                      "typeString": "struct IPaymentsNative.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7641:16:7"
            },
            "scope": 920,
            "src": "7555:103:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 844,
              "nodeType": "StructuredDocumentation",
              "src": "7664:310:7",
              "text": " @notice Returns the state of a payment.\n @dev If payment is in ASSET_TRANSFERRING, it may be worth\n  checking acceptsRefunds ot check if it has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the state of the payment."
            },
            "functionSelector": "34b778ed",
            "id": 852,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "7988:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "8009:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8001:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8001:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8000:19:7"
            },
            "returnParameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8043:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$747",
                    "typeString": "enum IPaymentsNative.States"
                  },
                  "typeName": {
                    "id": 849,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 848,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 747,
                      "src": "8043:6:7"
                    },
                    "referencedDeclaration": 747,
                    "src": "8043:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$747",
                      "typeString": "enum IPaymentsNative.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8042:8:7"
            },
            "scope": 920,
            "src": "7979:72:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 853,
              "nodeType": "StructuredDocumentation",
              "src": "8057:298:7",
              "text": " @notice Returns true if the payment accepts a refund to the buyer\n @dev The payment must be in ASSET_TRANSFERRING and beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return true if the payment accepts a refund to the buyer."
            },
            "functionSelector": "244aa5d7",
            "id": 860,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptsRefunds",
            "nameLocation": "8369:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "8392:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "8384:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8384:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8383:19:7"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "8426:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8426:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8425:6:7"
            },
            "scope": 920,
            "src": "8360:72:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "8438:226:7",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window in secs"
            },
            "functionSelector": "cab55d56",
            "id": 866,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "8678:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8691:2:7"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "8717:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8717:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8716:9:7"
            },
            "scope": 920,
            "src": "8669:57:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 867,
              "nodeType": "StructuredDocumentation",
              "src": "8732:143:7",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 872,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "8889:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8905:2:7"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "8931:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8931:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8930:15:7"
            },
            "scope": 920,
            "src": "8880:66:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 873,
              "nodeType": "StructuredDocumentation",
              "src": "8952:464:7",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n @dev In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus the external balance in the native crypto, are larger or equal than 'amount'\n @param buyer The address for which funds are queried\n @param amount The amount that is queried\n @return Returns true if enough funds are available"
            },
            "functionSelector": "9cfd495c",
            "id": 882,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "9430:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "9459:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "9451:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9451:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9474:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "9466:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9466:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9450:31:7"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "9529:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9529:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9528:6:7"
            },
            "scope": 920,
            "src": "9421:114:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 883,
              "nodeType": "StructuredDocumentation",
              "src": "9541:329:7",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n @dev In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the external balance in the native crypto.\n @param buyer The address for which funds are queried\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 890,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "9884:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "9910:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "9902:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9902:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9901:15:7"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "9940:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9940:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9939:9:7"
            },
            "scope": 920,
            "src": "9875:74:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 891,
              "nodeType": "StructuredDocumentation",
              "src": "9955:595:7",
              "text": " @notice Splits the funds required to pay 'amount' into two sources:\n  - externalFunds: the amount of crypto required to be transferred from the external buyer balance\n  - localFunds: the amount of crypto required from the buyer's already available balance in this contract.\n @param buyer The address for which the amount is to be split\n @param amount The amount to be split\n @return externalFunds The amount of funds required to be transferred from the external buyer balance\n @return localFunds The amount of local funds that will be used."
            },
            "functionSelector": "317cb018",
            "id": 902,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "10564:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "10592:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "10584:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10584:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10607:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "10599:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10599:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10583:31:7"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "10670:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "10662:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10662:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "10693:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "10685:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10685:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10661:43:7"
            },
            "scope": 920,
            "src": "10555:150:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "10711:185:7",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled.\n @param inp The PaymentInput struct"
            },
            "functionSelector": "00f3b6e8",
            "id": 909,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "10910:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "10951:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "10929:25:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$671_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 904,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 671,
                      "src": "10929:12:7"
                    },
                    "referencedDeclaration": 671,
                    "src": "10929:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$671_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10928:27:7"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10969:0:7"
            },
            "scope": 920,
            "src": "10901:69:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 910,
              "nodeType": "StructuredDocumentation",
              "src": "10999:396:7",
              "text": " @notice Safe computation of fee amount for a provided amount, feeBPS pair\n @dev Must return a value that is guaranteed to be less or equal to the provided amount\n @param amount The amount\n @param feeBPS The percentage fee expressed in Basis Points (bps).\n  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n @return The fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 919,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "11409:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11434:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11426:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11426:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "11450:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11442:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11442:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11425:32:7"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11505:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11505:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11504:9:7"
            },
            "scope": 920,
            "src": "11400:114:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 921,
        "src": "1903:9613:7",
        "usedErrors": []
      }
    ],
    "src": "32:11485:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/IPaymentsNative.sol",
    "exportedSymbols": {
      "Context": [
        132
      ],
      "ECDSA": [
        276
      ],
      "EIP712": [
        414
      ],
      "EIP712Verifier": [
        527
      ],
      "FeesCollectors": [
        651
      ],
      "IEIP712Verifier": [
        703
      ],
      "IPaymentsNative": [
        920
      ],
      "Operators": [
        1077
      ],
      "Ownable": [
        109
      ]
    },
    "id": 921,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 705,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "absolutePath": "project:/contracts/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 706,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 652,
        "src": "58:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 707,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 528,
        "src": "89:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IEIP712Verifier.sol",
        "file": "./IEIP712Verifier.sol",
        "id": 708,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 921,
        "sourceUnit": 704,
        "src": "1870:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 709,
              "name": "IEIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 703,
              "src": "1932:15:7"
            },
            "id": 710,
            "nodeType": "InheritanceSpecifier",
            "src": "1932:15:7"
          }
        ],
        "canonicalName": "IPaymentsNative",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 920,
        "linearizedBaseContracts": [
          920,
          703
        ],
        "name": "IPaymentsNative",
        "nameLocation": "1913:15:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 714,
            "name": "PaymentWindow",
            "nameLocation": "1960:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 712,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "1982:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 714,
                  "src": "1974:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:16:7"
            },
            "src": "1954:36:7"
          },
          {
            "anonymous": false,
            "id": 718,
            "name": "NewSeller",
            "nameLocation": "2001:9:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 716,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2027:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 718,
                  "src": "2011:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2011:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2010:24:7"
            },
            "src": "1995:40:7"
          },
          {
            "anonymous": false,
            "id": 724,
            "name": "BuyerRefunded",
            "nameLocation": "2046:13:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 720,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2076:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "2060:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 719,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2060:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 722,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2103:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 724,
                  "src": "2087:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2059:50:7"
            },
            "src": "2040:70:7"
          },
          {
            "anonymous": false,
            "id": 732,
            "name": "Payin",
            "nameLocation": "2121:5:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2152:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2136:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "2187:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2171:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 730,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2218:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "2202:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2126:104:7"
            },
            "src": "2115:116:7"
          },
          {
            "anonymous": false,
            "id": 736,
            "name": "Paid",
            "nameLocation": "2242:4:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "2255:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 736,
                  "src": "2247:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2246:19:7"
            },
            "src": "2236:30:7"
          },
          {
            "anonymous": false,
            "id": 742,
            "name": "Withdraw",
            "nameLocation": "2277:8:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2302:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2286:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2286:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2316:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "2308:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2308:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2285:38:7"
            },
            "src": "2271:53:7"
          },
          {
            "canonicalName": "IPaymentsNative.States",
            "id": 747,
            "members": [
              {
                "id": 743,
                "name": "NotStarted",
                "nameLocation": "2352:10:7",
                "nodeType": "EnumValue",
                "src": "2352:10:7"
              },
              {
                "id": 744,
                "name": "AssetTransferring",
                "nameLocation": "2372:17:7",
                "nodeType": "EnumValue",
                "src": "2372:17:7"
              },
              {
                "id": 745,
                "name": "Refunded",
                "nameLocation": "2399:8:7",
                "nodeType": "EnumValue",
                "src": "2399:8:7"
              },
              {
                "id": 746,
                "name": "Paid",
                "nameLocation": "2417:4:7",
                "nodeType": "EnumValue",
                "src": "2417:4:7"
              }
            ],
            "name": "States",
            "nameLocation": "2335:6:7",
            "nodeType": "EnumDefinition",
            "src": "2330:97:7"
          },
          {
            "canonicalName": "IPaymentsNative.Payment",
            "id": 765,
            "members": [
              {
                "constant": false,
                "id": 750,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "2692:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2685:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$747",
                  "typeString": "enum IPaymentsNative.States"
                },
                "typeName": {
                  "id": 749,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 748,
                    "name": "States",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 747,
                    "src": "2685:6:7"
                  },
                  "referencedDeclaration": 747,
                  "src": "2685:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$747",
                    "typeString": "enum IPaymentsNative.States"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 752,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "2715:5:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2707:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 751,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2707:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 754,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "2738:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2730:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 753,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2730:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 756,
                "mutability": "mutable",
                "name": "operator",
                "nameLocation": "2762:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2754:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 755,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2754:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 758,
                "mutability": "mutable",
                "name": "feesCollector",
                "nameLocation": "2788:13:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2780:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 757,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2780:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 760,
                "mutability": "mutable",
                "name": "expirationTime",
                "nameLocation": "2819:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2811:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 759,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2811:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 762,
                "mutability": "mutable",
                "name": "feeBPS",
                "nameLocation": "2850:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2843:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 761,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "2843:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 764,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "2874:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 765,
                "src": "2866:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 763,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2866:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payment",
            "nameLocation": "2667:7:7",
            "nodeType": "StructDefinition",
            "scope": 920,
            "src": "2660:227:7",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 766,
              "nodeType": "StructuredDocumentation",
              "src": "2893:93:7",
              "text": " @notice Registers msg.sender as seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 769,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "3000:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3016:2:7"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3027:0:7"
            },
            "scope": 920,
            "src": "2991:37:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 770,
              "nodeType": "StructuredDocumentation",
              "src": "3034:676:7",
              "text": " @notice Starts Payment process by the buyer.\n @dev Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must provide the correct amount via msg.value.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the funds\n  in this contract.\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 778,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "3724:3:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 773,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "3750:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "3728:25:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$671_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 772,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 771,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 671,
                      "src": "3728:12:7"
                    },
                    "referencedDeclaration": 671,
                    "src": "3728:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$671_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "3770:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 778,
                  "src": "3755:32:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3755:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3727:61:7"
            },
            "returnParameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3821:0:7"
            },
            "scope": 920,
            "src": "3715:107:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 779,
              "nodeType": "StructuredDocumentation",
              "src": "3828:590:7",
              "text": " @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n  and updates balances of seller or buyer, respectively.\n @dev Can be executed by anyone, but the operator signature must be included as input param.\n  Seller or Buyer's balances are updated, allowing explicit withdrawal.\n  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n @param result The asset transfer result struct signed by the operator.\n @param operatorSignature The operator signature of result"
            },
            "functionSelector": "96aa71b0",
            "id": 787,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalize",
            "nameLocation": "4432:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "4479:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "4450:35:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetTransferResult_$676_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.AssetTransferResult"
                  },
                  "typeName": {
                    "id": 781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 780,
                      "name": "AssetTransferResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 676,
                      "src": "4450:19:7"
                    },
                    "referencedDeclaration": 676,
                    "src": "4450:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetTransferResult_$676_storage_ptr",
                      "typeString": "struct IEIP712Verifier.AssetTransferResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "4510:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 787,
                  "src": "4495:32:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4440:93:7"
            },
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4542:0:7"
            },
            "scope": 920,
            "src": "4423:120:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 788,
              "nodeType": "StructuredDocumentation",
              "src": "4549:754:7",
              "text": " @notice Relays the operator signature declaring that the asset transfer was successful or failed,\n  updates balances of seller or buyer, respectively,\n  and proceeds to withdraw all funds in this contract available to msg.sender.\n @dev Can be executed by anyone, but the operator signature must be included as input param.\n  It is, however, expected to be executed by the seller, in case of a successful asset transfer,\n  or the buyer, in case of a failed asset transfer.\n  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.\n @param result The asset transfer result struct signed by the operator.\n @param operatorSignature The operator signature of result"
            },
            "functionSelector": "a1bc474d",
            "id": 796,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeAndWithdraw",
            "nameLocation": "5317:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "5375:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "5346:35:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AssetTransferResult_$676_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.AssetTransferResult"
                  },
                  "typeName": {
                    "id": 790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 789,
                      "name": "AssetTransferResult",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 676,
                      "src": "5346:19:7"
                    },
                    "referencedDeclaration": 676,
                    "src": "5346:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetTransferResult_$676_storage_ptr",
                      "typeString": "struct IEIP712Verifier.AssetTransferResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "5406:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "5391:32:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5391:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5336:93:7"
            },
            "returnParameters": {
              "id": 795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5438:0:7"
            },
            "scope": 920,
            "src": "5308:131:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 797,
              "nodeType": "StructuredDocumentation",
              "src": "5445:346:7",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n @dev Anybody can call this function.\n  Requires acceptsRefunds == true to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  Moves payment to REFUNDED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 802,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "5805:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "5820:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 802,
                  "src": "5812:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5812:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5811:19:7"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5839:0:7"
            },
            "scope": 920,
            "src": "5796:44:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 803,
              "nodeType": "StructuredDocumentation",
              "src": "5846:416:7",
              "text": " @notice Executes refund and withdraw in one transaction.\n @dev Anybody can call this function.\n  Requires acceptsRefunds == true to proceed.\n  All of msg.sender's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n  Moves payment to REFUNDED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 808,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "6276:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "6302:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "6294:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6294:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6293:19:7"
            },
            "returnParameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6321:0:7"
            },
            "scope": 920,
            "src": "6267:55:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 809,
              "nodeType": "StructuredDocumentation",
              "src": "6328:115:7",
              "text": " @notice Transfers funds avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 812,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "6457:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6465:2:7"
            },
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6476:0:7"
            },
            "scope": 920,
            "src": "6448:29:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 813,
              "nodeType": "StructuredDocumentation",
              "src": "6506:193:7",
              "text": " @notice Returns whether sellers need to be registered to be able to accept payments\n @return Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 818,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "6713:28:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6741:2:7"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 818,
                  "src": "6767:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6767:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6766:6:7"
            },
            "scope": 920,
            "src": "6704:69:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 819,
              "nodeType": "StructuredDocumentation",
              "src": "6779:200:7",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return Returns whether the address is registered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 826,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "6993:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7020:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "7012:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7012:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7011:14:7"
            },
            "returnParameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 826,
                  "src": "7049:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7048:6:7"
            },
            "scope": 920,
            "src": "6984:71:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 827,
              "nodeType": "StructuredDocumentation",
              "src": "7061:234:7",
              "text": " @notice Returns the local balance of the provided address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 834,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "7309:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7327:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "7319:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7319:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7318:14:7"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "7356:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7356:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7355:9:7"
            },
            "scope": 920,
            "src": "7300:65:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 835,
              "nodeType": "StructuredDocumentation",
              "src": "7371:179:7",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 843,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "7564:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "7584:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "7576:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7576:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7575:19:7"
            },
            "returnParameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "7642:14:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$765_memory_ptr",
                    "typeString": "struct IPaymentsNative.Payment"
                  },
                  "typeName": {
                    "id": 840,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 839,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 765,
                      "src": "7642:7:7"
                    },
                    "referencedDeclaration": 765,
                    "src": "7642:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$765_storage_ptr",
                      "typeString": "struct IPaymentsNative.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7641:16:7"
            },
            "scope": 920,
            "src": "7555:103:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 844,
              "nodeType": "StructuredDocumentation",
              "src": "7664:310:7",
              "text": " @notice Returns the state of a payment.\n @dev If payment is in ASSET_TRANSFERRING, it may be worth\n  checking acceptsRefunds ot check if it has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the state of the payment."
            },
            "functionSelector": "34b778ed",
            "id": 852,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "7988:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "8009:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8001:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8001:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8000:19:7"
            },
            "returnParameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 850,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 852,
                  "src": "8043:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$747",
                    "typeString": "enum IPaymentsNative.States"
                  },
                  "typeName": {
                    "id": 849,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 848,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 747,
                      "src": "8043:6:7"
                    },
                    "referencedDeclaration": 747,
                    "src": "8043:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$747",
                      "typeString": "enum IPaymentsNative.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8042:8:7"
            },
            "scope": 920,
            "src": "7979:72:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 853,
              "nodeType": "StructuredDocumentation",
              "src": "8057:298:7",
              "text": " @notice Returns true if the payment accepts a refund to the buyer\n @dev The payment must be in ASSET_TRANSFERRING and beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return true if the payment accepts a refund to the buyer."
            },
            "functionSelector": "244aa5d7",
            "id": 860,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptsRefunds",
            "nameLocation": "8369:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "8392:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "8384:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8384:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8383:19:7"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "8426:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8426:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8425:6:7"
            },
            "scope": 920,
            "src": "8360:72:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 861,
              "nodeType": "StructuredDocumentation",
              "src": "8438:226:7",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window in secs"
            },
            "functionSelector": "cab55d56",
            "id": 866,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "8678:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8691:2:7"
            },
            "returnParameters": {
              "id": 865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 866,
                  "src": "8717:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8717:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8716:9:7"
            },
            "scope": 920,
            "src": "8669:57:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 867,
              "nodeType": "StructuredDocumentation",
              "src": "8732:143:7",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 872,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "8889:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8905:2:7"
            },
            "returnParameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "8931:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8931:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8930:15:7"
            },
            "scope": 920,
            "src": "8880:66:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 873,
              "nodeType": "StructuredDocumentation",
              "src": "8952:464:7",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n @dev In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus the external balance in the native crypto, are larger or equal than 'amount'\n @param buyer The address for which funds are queried\n @param amount The amount that is queried\n @return Returns true if enough funds are available"
            },
            "functionSelector": "9cfd495c",
            "id": 882,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "9430:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "9459:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "9451:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9451:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9474:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "9466:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9466:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9450:31:7"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "9529:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 879,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9529:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9528:6:7"
            },
            "scope": 920,
            "src": "9421:114:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 883,
              "nodeType": "StructuredDocumentation",
              "src": "9541:329:7",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n @dev In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the external balance in the native crypto.\n @param buyer The address for which funds are queried\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 890,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "9884:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "9910:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "9902:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9902:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9901:15:7"
            },
            "returnParameters": {
              "id": 889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 888,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 890,
                  "src": "9940:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9940:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9939:9:7"
            },
            "scope": 920,
            "src": "9875:74:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 891,
              "nodeType": "StructuredDocumentation",
              "src": "9955:595:7",
              "text": " @notice Splits the funds required to pay 'amount' into two sources:\n  - externalFunds: the amount of crypto required to be transferred from the external buyer balance\n  - localFunds: the amount of crypto required from the buyer's already available balance in this contract.\n @param buyer The address for which the amount is to be split\n @param amount The amount to be split\n @return externalFunds The amount of funds required to be transferred from the external buyer balance\n @return localFunds The amount of local funds that will be used."
            },
            "functionSelector": "317cb018",
            "id": 902,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "10564:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "10592:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "10584:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10584:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 895,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10607:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "10599:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10599:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10583:31:7"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "10670:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "10662:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10662:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "10693:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 902,
                  "src": "10685:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10685:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10661:43:7"
            },
            "scope": 920,
            "src": "10555:150:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 903,
              "nodeType": "StructuredDocumentation",
              "src": "10711:185:7",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled.\n @param inp The PaymentInput struct"
            },
            "functionSelector": "00f3b6e8",
            "id": 909,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "10910:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "10951:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 909,
                  "src": "10929:25:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$671_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 905,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 904,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 671,
                      "src": "10929:12:7"
                    },
                    "referencedDeclaration": 671,
                    "src": "10929:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$671_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10928:27:7"
            },
            "returnParameters": {
              "id": 908,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10969:0:7"
            },
            "scope": 920,
            "src": "10901:69:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 910,
              "nodeType": "StructuredDocumentation",
              "src": "10999:396:7",
              "text": " @notice Safe computation of fee amount for a provided amount, feeBPS pair\n @dev Must return a value that is guaranteed to be less or equal to the provided amount\n @param amount The amount\n @param feeBPS The percentage fee expressed in Basis Points (bps).\n  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps\n @return The fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 919,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "11409:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11434:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11426:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11426:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "11450:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11442:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11442:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11425:32:7"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "11505:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11505:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11504:9:7"
            },
            "scope": 920,
            "src": "11400:114:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 921,
        "src": "1903:9613:7",
        "usedErrors": []
      }
    ],
    "src": "32:11485:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-03-30T13:09:47.950Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptedCurrency()": {
        "returns": {
          "_0": "the string describing the currency"
        }
      },
      "acceptsRefunds(bytes32)": {
        "details": "The payment must be in ASSET_TRANSFERRING and beyond expirationTime.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "true if the payment accepts a refund to the buyer."
        }
      },
      "balanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the local balance"
        }
      },
      "checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))": {
        "params": {
          "inp": "The PaymentInput struct"
        }
      },
      "computeFeeAmount(uint256,uint256)": {
        "details": "Must return a value that is guaranteed to be less or equal to the provided amount",
        "params": {
          "amount": "The amount",
          "feeBPS": "The percentage fee expressed in Basis Points (bps).  feeBPS examples:  2.5% = 250 bps, 10% = 1000 bps, 100% = 10000 bps"
        },
        "returns": {
          "_0": "The fee amount"
        }
      },
      "enoughFundsAvailable(address,uint256)": {
        "details": "In more detail: returns true if the sum of the buyer's local balance in this contract,  plus the external balance in the native crypto, are larger or equal than 'amount'",
        "params": {
          "amount": "The amount that is queried",
          "buyer": "The address for which funds are queried"
        },
        "returns": {
          "_0": "Returns true if enough funds are available"
        }
      },
      "finalize((bytes32,bool),bytes)": {
        "details": "Can be executed by anyone, but the operator signature must be included as input param.  Seller or Buyer's balances are updated, allowing explicit withdrawal.  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.",
        "params": {
          "operatorSignature": "The operator signature of result",
          "result": "The asset transfer result struct signed by the operator."
        }
      },
      "finalizeAndWithdraw((bytes32,bool),bytes)": {
        "details": "Can be executed by anyone, but the operator signature must be included as input param.  It is, however, expected to be executed by the seller, in case of a successful asset transfer,  or the buyer, in case of a failed asset transfer.  Moves payment to PAID or REFUNDED state on transfer success/failure, respectively.",
        "params": {
          "operatorSignature": "The operator signature of result",
          "result": "The asset transfer result struct signed by the operator."
        }
      },
      "isRegisteredSeller(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "Returns whether the address is registered as seller"
        }
      },
      "isSellerRegistrationRequired()": {
        "returns": {
          "_0": "Returns true if sellers need to be registered to be able to accept payments"
        }
      },
      "maxFundsAvailable(address)": {
        "details": "In more detail: returns the sum of the buyer's local balance in this contract,  plus the external balance in the native crypto.",
        "params": {
          "buyer": "The address for which funds are queried"
        },
        "returns": {
          "_0": "the max funds available"
        }
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must provide the correct amount via msg.value.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the funds  in this contract.  Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "inp": "The struct containing all required payment data",
          "operatorSignature": "The signature of 'inp' by the operator"
        }
      },
      "paymentInfo(bytes32)": {
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the struct stored for the payment"
        }
      },
      "paymentState(bytes32)": {
        "details": "If payment is in ASSET_TRANSFERRING, it may be worth  checking acceptsRefunds ot check if it has gone beyond expirationTime.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the state of the payment."
        }
      },
      "paymentWindow()": {
        "returns": {
          "_0": "the payment window in secs"
        }
      },
      "refund(bytes32)": {
        "details": "Anybody can call this function.  Requires acceptsRefunds == true to proceed.  After updating buyer's balance, he/she can later withdraw.  Moves payment to REFUNDED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "refundAndWithdraw(bytes32)": {
        "details": "Anybody can call this function.  Requires acceptsRefunds == true to proceed.  All of msg.sender's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId  Moves payment to REFUNDED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "splitFundingSources(address,uint256)": {
        "params": {
          "amount": "The amount to be split",
          "buyer": "The address for which the amount is to be split"
        },
        "returns": {
          "externalFunds": "The amount of funds required to be transferred from the external buyer balance",
          "localFunds": "The amount of local funds that will be used."
        }
      },
      "verifyAssetTransferResult((bytes32,bool),bytes,address)": {
        "params": {
          "result": "The provided AssetTransferResult struct",
          "signature": "The provided signature of the input struct",
          "signer": "The signer's address that we want to verify"
        },
        "returns": {
          "_0": "Returns true if the signature corresponds to the signer  having signed the input struct"
        }
      },
      "verifyPayment((bytes32,uint256,uint16,uint256,uint256,address,address),bytes,address)": {
        "params": {
          "inp": "The provided PaymentInput struct",
          "signature": "The provided signature of the input struct",
          "signer": "The signer's address that we want to verify"
        },
        "returns": {
          "_0": "Returns true if the signature corresponds to the   provided signer having signed the input struct"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptedCurrency()": {
        "notice": "Returns a descriptor about the currency that this contract accepts"
      },
      "acceptsRefunds(bytes32)": {
        "notice": "Returns true if the payment accepts a refund to the buyer"
      },
      "balanceOf(address)": {
        "notice": "Returns the local balance of the provided address that is stored in this  contract, and hence, available for withdrawal."
      },
      "checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))": {
        "notice": "Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled."
      },
      "computeFeeAmount(uint256,uint256)": {
        "notice": "Safe computation of fee amount for a provided amount, feeBPS pair"
      },
      "enoughFundsAvailable(address,uint256)": {
        "notice": "Returns true if the 'amount' required for a payment is available to this contract."
      },
      "finalize((bytes32,bool),bytes)": {
        "notice": "Relays the operator signature declaring that the asset transfer was successful or failed,  and updates balances of seller or buyer, respectively."
      },
      "finalizeAndWithdraw((bytes32,bool),bytes)": {
        "notice": "Relays the operator signature declaring that the asset transfer was successful or failed,  updates balances of seller or buyer, respectively,  and proceeds to withdraw all funds in this contract available to msg.sender."
      },
      "isRegisteredSeller(address)": {
        "notice": "Returns true if the address provided is a registered seller"
      },
      "isSellerRegistrationRequired()": {
        "notice": "Returns whether sellers need to be registered to be able to accept payments"
      },
      "maxFundsAvailable(address)": {
        "notice": "Returns the maximum amount of funds available to a buyer"
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts Payment process by the buyer."
      },
      "paymentInfo(bytes32)": {
        "notice": "Returns all data stored in a payment"
      },
      "paymentState(bytes32)": {
        "notice": "Returns the state of a payment."
      },
      "paymentWindow()": {
        "notice": "Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator"
      },
      "refund(bytes32)": {
        "notice": "Moves buyer's provided funds to buyer's balance."
      },
      "refundAndWithdraw(bytes32)": {
        "notice": "Executes refund and withdraw in one transaction."
      },
      "registerAsSeller()": {
        "notice": "Registers msg.sender as seller so that he/she can accept payments."
      },
      "splitFundingSources(address,uint256)": {
        "notice": "Splits the funds required to pay 'amount' into two sources:  - externalFunds: the amount of crypto required to be transferred from the external buyer balance  - localFunds: the amount of crypto required from the buyer's already available balance in this contract."
      },
      "verifyAssetTransferResult((bytes32,bool),bytes,address)": {
        "notice": "Verifies that the provided AssetTransferResult struct   has been signed by the provided signer."
      },
      "verifyPayment((bytes32,uint256,uint16,uint256,uint256,address,address),bytes,address)": {
        "notice": "Verifies that the provided PaymentInput struct has been signed  by the provided signer."
      },
      "withdraw()": {
        "notice": "Transfers funds avaliable in this  contract's balanceOf[msg.sender] to msg.sender"
      }
    },
    "version": 1
  }
}