{
  "contractName": "PaymentsERC20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "currencyDescriptor",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "BuyerRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feesCollector",
          "type": "address"
        }
      ],
      "name": "DefaultFeesCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "DefaultOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "NewSeller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "Payin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "PaymentWindow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "feesCollector",
          "type": "address"
        }
      ],
      "name": "UniverseFeesCollector",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "UniverseOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "defaultFeesCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        }
      ],
      "name": "removeUniverseFeesCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        }
      ],
      "name": "removeUniverseOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feesCollector",
          "type": "address"
        }
      ],
      "name": "setDefaultFeesCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "setDefaultOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feesCollector",
          "type": "address"
        }
      ],
      "name": "setUniverseFeesCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "setUniverseOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        }
      ],
      "name": "universeFeesCollector",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "universeId",
          "type": "uint256"
        }
      ],
      "name": "universeOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "window",
          "type": "uint256"
        }
      ],
      "name": "setPaymentWindow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isRequired",
          "type": "bool"
        }
      ],
      "name": "setIsSellerRegistrationRequired",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAsSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "buyerSignature",
          "type": "bytes"
        }
      ],
      "name": "relayedPay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "operatorSignature",
          "type": "bytes"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "assetTransferSuccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "assetTransferFailed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "refundAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSellerRegistrationRequired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isRegisteredSeller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "erc20BalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum IPaymentsERC20.States",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feesCollector",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymentsERC20.Payment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "paymentId",
          "type": "bytes32"
        }
      ],
      "name": "paymentState",
      "outputs": [
        {
          "internalType": "enum IPaymentsERC20.States",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptedCurrency",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "enoughFundsAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "maxFundsAvailable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "splitFundingSources",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "externalFunds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "localFunds",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "paymentId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "feeBPS",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "universeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct IEIP712Verifier.PaymentInput",
          "name": "inp",
          "type": "tuple"
        }
      ],
      "name": "checkPaymentInputs",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeBPS",
          "type": "uint256"
        }
      ],
      "name": "computeFeeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"currencyDescriptor\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"BuyerRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"DefaultFeesCollector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"DefaultOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"NewSeller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"Payin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"PaymentWindow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"UniverseFeesCollector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"UniverseOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedCurrency\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"assetTransferFailed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"assetTransferSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"}],\"name\":\"checkPaymentInputs\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBPS\",\"type\":\"uint256\"}],\"name\":\"computeFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFeesCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"enoughFundsAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"erc20BalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isRegisteredSeller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSellerRegistrationRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"maxFundsAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"operatorSignature\",\"type\":\"bytes\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"enum IPaymentsERC20.States\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsERC20.Payment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"paymentState\",\"outputs\":[{\"internalType\":\"enum IPaymentsERC20.States\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"}],\"name\":\"refundAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"buyerSignature\",\"type\":\"bytes\"}],\"name\":\"relayedPay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"}],\"name\":\"removeUniverseFeesCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"}],\"name\":\"removeUniverseOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"setDefaultFeesCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"setDefaultOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isRequired\",\"type\":\"bool\"}],\"name\":\"setIsSellerRegistrationRequired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"setPaymentWindow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feesCollector\",\"type\":\"address\"}],\"name\":\"setUniverseFeesCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"setUniverseOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"splitFundingSources\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"externalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"localFunds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"}],\"name\":\"universeFeesCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"}],\"name\":\"universeOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"paymentId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"feeBPS\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"universeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct IEIP712Verifier.PaymentInput\",\"name\":\"inp\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptedCurrency()\":{\"returns\":{\"_0\":\"the string describing the currency\"}},\"allowance(address)\":{\"params\":{\"buyer\":\"the address of the buyer\"},\"returns\":{\"_0\":\"the amount allowed by buyer\"}},\"assetTransferFailed(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"assetTransferSuccess(bytes32)\":{\"details\":\"Moves payment to PAID state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"balanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the local balance\"}},\"computeFeeAmount(uint256,uint256)\":{\"returns\":{\"_0\":\"the fee amount\"}},\"enoughFundsAvailable(address,uint256)\":{\"returns\":{\"_0\":\"a bool, true is enough available\"}},\"erc20BalanceOf(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"the balance in the external ERC20 contract\"}},\"isRegisteredSeller(address)\":{\"params\":{\"addr\":\"the address that is queried\"},\"returns\":{\"_0\":\"isRegistered as seller\"}},\"maxFundsAvailable(address)\":{\"returns\":{\"_0\":\"the max funds available\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"inp\":\"The struct containing all required payment data\",\"operatorSignature\":\"The signature of 'inp' by the operator\"}},\"paymentInfo(bytes32)\":{\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the struct stored for the payment\"}},\"paymentState(bytes32)\":{\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"},\"returns\":{\"_0\":\"the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid\"}},\"paymentWindow()\":{\"returns\":{\"_0\":\"the payment window\"}},\"refund(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"refundAndWithdraw(bytes32)\":{\"details\":\"Moves payment to NOT_STARTED state.\",\"params\":{\"paymentId\":\"The unique ID that identifies the payment.\"}},\"relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"details\":\"Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.\",\"params\":{\"buyerSignature\":\"The signature of 'inp' by the buyer\",\"inp\":\"The struct containing all required payment data\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setIsSellerRegistrationRequired(bool)\":{\"params\":{\"isRequired\":\"(bool) if true, registration is required.\"}},\"setPaymentWindow(uint256)\":{\"params\":{\"window\":\"The amount of time available, in seconds.\"}},\"splitFundingSources(address,uint256)\":{\"returns\":{\"externalFunds\":\"- the amount of ERC20 required from the external ERC20 contract.\",\"localFunds\":\"- the amount of ERC20 local funds required. \"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptedCurrency()\":{\"notice\":\"Returns a descriptor about the currency that this contract accepts\"},\"allowance(address)\":{\"notice\":\"Returns the allowance that the buyer has approved  directly in the ERC20 contract in favour of this contract.\"},\"assetTransferFailed(bytes32)\":{\"notice\":\"Confirms the failure of asset transfer and refunds buyer.  Needs to be executed by the operator.  Buyer's balance is updated, allowing explicit withdrawal.  It resets all data related to this payment.\"},\"assetTransferSuccess(bytes32)\":{\"notice\":\"Confirms the asset transfer.  Needs to be executed by the operator.  Updates balances of seller and feesCollector.\"},\"balanceOf(address)\":{\"notice\":\"Returns the local ERC20 balance of address that is stored in this  contract, and hence, available for withdrawal.\"},\"checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))\":{\"notice\":\"Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled.\"},\"computeFeeAmount(uint256,uint256)\":{\"notice\":\"Safe compute fee amount  Returns a values that is guaranteed to be less or equal to total provided amount  The safety check should be unnecessary, since only feeBPS < 10000 are accepted  when receiving a payment.\"},\"enoughFundsAvailable(address,uint256)\":{\"notice\":\"Returns true if the 'amount' required for a payment is available to this contract.  In more detail: returns true if the sum of the buyer's local balance in this contract,  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\"},\"erc20()\":{\"notice\":\"Returns the address of the ERC20 contract from which  tokens are accepted for payments\"},\"erc20BalanceOf(address)\":{\"notice\":\"Returns ERC20 balance of address in the ERC20 contract\"},\"isRegisteredSeller(address)\":{\"notice\":\"Returns true if the address provided is a registered seller\"},\"isSellerRegistrationRequired()\":{\"notice\":\"Returns true if sellers need to be registered to be able to accept payments\"},\"maxFundsAvailable(address)\":{\"notice\":\"Returns the maximum amount of funds available to a buyer  In more detail: returns the sum of the buyer's local balance in this contract,  plus the funds available and approved in the ERC20 contract.\"},\"pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts Payment process directly by the buyer.  Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.\"},\"paymentInfo(bytes32)\":{\"notice\":\"Returns all data stored in a payment\"},\"paymentState(bytes32)\":{\"notice\":\"Returns the state of a payment.  It maps 1-to-1 with the stored variable, with the exeption of  an ASSET_TRANSFERRING that has gone beyond expirationTime.\"},\"paymentWindow()\":{\"notice\":\"Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator\"},\"refund(bytes32)\":{\"notice\":\"Moves buyer's provided funds to buyer's balance.  Anybody can call this function.  Requires current state == FAILED to proceed.  After updating buyer's balance, he/she can later withdraw.  It resets all data related to this payment.\"},\"refundAndWithdraw(bytes32)\":{\"notice\":\"Exectutes refund and withdraw in one transaction.  Needs to be called by buyer.  All of buyer's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId\"},\"registerAsSeller()\":{\"notice\":\"Registers msg.sender a seller so that he/she can accept payments.\"},\"relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)\":{\"notice\":\"Starts the Payment process via relay-by-operator.  Executed by an operator, who relays the MetaTX with the buyer's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract.\"},\"setIsSellerRegistrationRequired(bool)\":{\"notice\":\"Sets whether sellers are required to register in this contract before being,  able to accept payments. \"},\"setPaymentWindow(uint256)\":{\"notice\":\"Sets the amount of time available to the operator, after the payment starts,  to confirm either the success of the failure of the asset transfer.   After this time, the payment moves to FAILED, allowing buyer to withdraw.\"},\"splitFundingSources(address,uint256)\":{\"notice\":\"Splits the funds required to pay 'amount' into two source:  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\"},\"withdraw()\":{\"notice\":\"Transfers ERC20 avaliable in this  contract's balanceOf[msg.sender] to msg.sender\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Payments/PaymentsERC20.sol\":\"PaymentsERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2b7a01bbc90040fd4a48bc143ac5a192da3b9bfc559ac08a78eaca40bf49e436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8a02af79b7d1c4eaa385d3b9d26509ac2619eab43bfbbc2ef9ef74508f8146\",\"dweb:/ipfs/QmWhEKw9ZmDjc9qfLmJcrxgopoCvbBNyFhUCJSewhSpzRi\"]},\"openzeppelin-solidity/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x75800223458de145e6088276ab661222e22557d7518459e1ffc57bb5b0496542\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://504433dd10f0037339624055d52df67de43408a4d429eb546c6cb17e5c5a6ae6\",\"dweb:/ipfs/QmQfRTjvbsn9kCc7MNC2E7X4tzpYw4sEPPMpdyWVi5QQNj\"]},\"project:/contracts/Payments/EIP712Verifier.sol\":{\"keccak256\":\"0x256da69bed9a86b08119642269fea0e6ab887cf071dd17a396c3f7f4a8adca18\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f849a1708085404d863dc42ebbbee5ebb86ae578343f69ed6002d8f48146327b\",\"dweb:/ipfs/QmXArRWBduN99osdaj6hePM4CdubtsmArRBGYACLEhT3Yc\"]},\"project:/contracts/Payments/FeesCollectors.sol\":{\"keccak256\":\"0xd6daf1723b8e9d16f4685453b146516390199fcc59c1e4f077bbd803f1455d87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3fdad1ae9ac7b06f337713d22e5ddbcd446f5092c1750a8a9cd16d3ce81e6c5\",\"dweb:/ipfs/QmQ4e7WNR2ews5zTCe76us2iok29j4ABkDxT92XyEyTx2C\"]},\"project:/contracts/Payments/IEIP712Verifier.sol\":{\"keccak256\":\"0x2f510f3e2603c1f1d5a1e7419f45ca5a206e00692cd61b2ef2549c930074b904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c2ddef9db277df34e8adc44097505f3af7d8d228241bc5c3e4fea6f229c7222\",\"dweb:/ipfs/QmYmdQTYwUwNhRM55JqVVRq3RXTGWAvUY3BHAm8cdXTy4N\"]},\"project:/contracts/Payments/IPaymentsERC20.sol\":{\"keccak256\":\"0xc0b6f26ffafca96f1f7ac6241af44819dff45ead12185a5fa70b02f0a5ce6874\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96e8eb69b20e292db3c727eb44be03f08ad2d4bb127fc0db567720c46b139e33\",\"dweb:/ipfs/QmaXC5P8XqnzUpFohfKiT6WjLdvyCK8wTzQjkCv1qnSz9x\"]},\"project:/contracts/Payments/Operators.sol\":{\"keccak256\":\"0x5c22ace248a78e2d125de7c40523a462ce4e6c53439cb744318052f2f1dfb6d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07e1d416fc7d2ee78da7b5d4a699f3c8d5409676e6dfabb3032171bf3ea1f5d3\",\"dweb:/ipfs/QmZ7h7vaZqqyaiD8fLXKAaNvNAA4F9TZeVB85sAGP8ywL3\"]},\"project:/contracts/Payments/PaymentsERC20.sol\":{\"keccak256\":\"0xda2d19120812f5b3b1168aedeea7ab202de71a8d0c96c409e7b934ab4ce95adc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d4af7d7d00d853c4ece8532958fc5d9e5450b4ba43afd225e8358efe644a393\",\"dweb:/ipfs/QmQuQE5Yqi7ngemBC1TcKQoMaQJ5DCvCutADDV1jrni68r\"]}},\"version\":1}",
  "bytecode": "0x6101206040523480156200001257600080fd5b5060405162002ec738038062002ec78339810160408190526200003591620002fc565b604051806040016040528060128152602001714549503731322d46562d5061796d656e747360701b81525060405180604001604052806005815260200164302e302e3160d81b8152506000620000906200023c60201b60201c565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b031916339081179091556040519081527fec71ba738f211337eaf29e2d87bdb1b0928316c20db0a3a1108aa43321583b509060200160405180910390a1600380546001600160a01b031916339081179091556040519081527fa60019696f11f9aa952db763c0de585f819d10fcafcfbd301a27d02e9caa41b09060200160405180910390a1815160209283012081519183019190912060c082815260e08290524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81890181905281830197909752606081019590955260808086019390935230858301528051808603909201825293909201909252805190840120905261010052600580546001600160a01b0319166001600160a01b03851617905581516200021f916006919084019062000240565b5050620d2f00600755506008805460ff1916600117905562000439565b3390565b8280546200024e90620003fc565b90600052602060002090601f016020900481019282620002725760008555620002bd565b82601f106200028d57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bd578251825591602001919060010190620002a0565b50620002cb929150620002cf565b5090565b5b80821115620002cb5760008155600101620002d0565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200031057600080fd5b82516001600160a01b03811681146200032857600080fd5b602084810151919350906001600160401b03808211156200034857600080fd5b818601915086601f8301126200035d57600080fd5b815181811115620003725762000372620002e6565b604051601f8201601f19908116603f011681019083821181831017156200039d576200039d620002e6565b816040528281528986848701011115620003b657600080fd5b600093505b82841015620003da5784840186015181850187015292850192620003bb565b82841115620003ec5760008684830101525b8096505050505050509250929050565b600181811c908216806200041157607f821691505b602082108114156200043357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161010051612a496200047e6000396000612273015260006122c20152600061229d015260006122210152600061224a0152612a496000f3fe608060405234801561001057600080fd5b506004361061023c5760003560e01c8063715018a61161013b5780639cfd495c116100b8578063dca721001161007c578063dca7210014610519578063dd115ab21461052c578063f2cc55ee1461054c578063f2fde38b1461055d578063fd5773431461057057600080fd5b80639cfd495c146104c5578063b2685a3e146104d8578063b3080298146104eb578063c67eb9e5146104fe578063cab55d561461051157600080fd5b80637b018ab9116100ff5780637b018ab91461046a57806380ca11fc1461047d57806385a2910d1461048e5780638da5cb5b146104a1578063982ed326146104b257600080fd5b8063715018a6146103eb5780637249fbb6146103f3578063785e9e861461040657806378e96fb51461042b5780637ac83f9b1461045757600080fd5b80632593308b116101c9578063317cb0181161018d578063317cb0181461035f57806334b778ed146103875780633ccfd60b146103a75780633e5beab9146103af57806370a08231146103c257600080fd5b80632593308b146103005780632ab3433c146103135780632af41be4146103265780632ce10fcf1461033957806331784b6d1461034c57600080fd5b8063128b853211610210578063128b8532146102a257806314e50a0b146102aa5780631a29b6ab146102cd5780631c6d7675146102e0578063221a832e146102f557600080fd5b8062f3b6e81461024157806302519da31461025657806306968bd91461027c57806306a212ae1461028f575b600080fd5b61025461024f3660046124c8565b610583565b005b610269610264366004612500565b6107c1565b6040519081526020015b60405180910390f35b61025461028a36600461251b565b610846565b61025461029d36600461257d565b6108d9565b610254610d36565b6102bd6102b83660046125d2565b610d78565b6040519015158152602001610273565b6102546102db366004612648565b610ea5565b6102e8610ee2565b6040516102739190612665565b60085460ff166102bd565b61025461030e36600461251b565b610f74565b61025461032136600461257d565b610fbe565b6102696103343660046126ba565b611430565b61025461034736600461251b565b611464565b61025461035a36600461251b565b6114df565b61037261036d3660046126dc565b61156b565b60408051928352602083019190915201610273565b61039a61039536600461251b565b6115b9565b604051610273919061273e565b61025461160a565b6102696103bd366004612500565b611614565b6102696103d0366004612500565b6001600160a01b03166000908152600b602052604090205490565b61025461164d565b61025461040136600461251b565b6116c1565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610273565b6102bd610439366004612500565b6001600160a01b031660009081526009602052604090205460ff1690565b61025461046536600461274c565b6116fa565b61041361047836600461251b565b61178b565b6001546001600160a01b0316610413565b61025461049c36600461274c565b6117c3565b6000546001600160a01b0316610413565b6102546104c036600461251b565b61184c565b6102bd6104d33660046126dc565b6118ab565b6102546104e6366004612500565b6118c0565b6102546104f936600461251b565b611938565b61026961050c366004612500565b611b1e565b600754610269565b61041361052736600461251b565b611bf0565b61053f61053a36600461251b565b611c27565b6040516102739190612778565b6003546001600160a01b0316610413565b61025461056b366004612500565b611d11565b61025461057e366004612500565b611dfb565b61271061059660608301604084016127ee565b61ffff1611156105fb5760405162461bcd60e51b815260206004820152602560248201527f6665652063616e6e6f74206265206c6172676572207468616e203130302070656044820152641c98d95b9d60da1b60648201526084015b60405180910390fd5b600061060782356115b9565b600381111561061857610618612706565b1461066f5760405162461bcd60e51b815260206004820152602160248201527f7061796d656e7420696e20696e636f727265637420637572656e7420737461746044820152606560f81b60648201526084016105f2565b80608001354211156106c35760405162461bcd60e51b815260206004820152601860248201527f7061796d656e7420646561646c696e652065787069726564000000000000000060448201526064016105f2565b60085460ff161561074357600960006106e260e0840160c08501612500565b6001600160a01b0316815260208101919091526040016000205460ff166107435760405162461bcd60e51b81526020600482015260156024820152741cd95b1b195c881b9bdd081c9959da5cdd195c9959605a1b60448201526064016105f2565b61076061075660c0830160a08401612500565b82602001356118ab565b6107be5760405162461bcd60e51b815260206004820152602960248201527f6e6f7420656e6f7567682066756e647320617661696c61626c6520666f7220746044820152683434b990313abcb2b960b91b60648201526084016105f2565b50565b6005546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a08231906024015b60206040518083038186803b15801561080857600080fd5b505afa15801561081c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190612812565b92915050565b6000546001600160a01b031633146108705760405162461bcd60e51b81526004016105f29061282b565b60008181526002602090815260409182902080546001600160a01b031916905560015482518481526001600160a01b03909116918101919091527f01ab5ff875fd8edb498772244b76ffd53ac3b59cb6397e3c6654194e411ede6b91015b60405180910390a150565b336108e7606085013561178b565b6001600160a01b0316146109515760405162461bcd60e51b815260206004820152602b60248201527f6f70657261746f72206e6f7420617574686f72697a656420666f72207468697360448201526a081d5b9a5d995c9cd9525960aa1b60648201526084016105f2565b600261095d84356115b9565b600381111561096e5761096e612706565b141561097e5761097e8335611e73565b61098783610583565b61099d8383836102b860c0840160a08501612500565b6109e95760405162461bcd60e51b815260206004820152601960248201527f696e636f7272656374206275796572207369676e61747572650000000000000060448201526064016105f2565b6040805161010081019091528060018152602001610a0d60c0860160a08701612500565b6001600160a01b03168152602001610a2b60e0860160c08701612500565b6001600160a01b03168152336020820152604001610a4c6060860135611bf0565b6001600160a01b0316815260200160075442610a689190612876565b8152602001610a7d60608601604087016127ee565b61ffff1681526020858101359181019190915284356000908152600a9091526040902081518154829060ff19166001836003811115610abe57610abe612706565b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b03199283161790556060840151600284018054918416918316919091179055608084015160038401805491909316911617905560a080830151600483015560c08084015160058401805461ffff90921661ffff1990921691909117905560e0909301516006909201919091556000918291610b8c91610b8291908801908801612500565b866020013561156b565b90925090508115610c82576005546001600160a01b03166323b872dd610bb860c0880160a08901612500565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b158015610c0657600080fd5b505af1158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e919061288e565b610c825760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105f2565b80600b6000610c9760c0890160a08a01612500565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610cc691906128ab565b90915550610cdc905060e0860160c08701612500565b6001600160a01b0316610cf560c0870160a08801612500565b6001600160a01b031686600001357fe4a9c328b82280a42bddcf2971ded52a971269f3fa155694eec8e4c27f95e21860405160405180910390a45050505050565b33600081815260096020526040808220805460ff19166001179055517f258a7a0df6106f41c2e99c09f1b64931f5f284242bbc50272d5a752ac2f30dde9190a2565b600080610e8c85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e8692507f842d0bb1548581afe96170983041b67db4fde58372c89ca13c8b104222d6cc46915050893560208b0135610df160608d0160408e016127ee565b8c606001358d608001358e60a0016020810190610e0e9190612500565b8f60c0016020810190610e219190612500565b604080516020810199909952880196909652606087019490945261ffff909216608086015260a085015260c08401526001600160a01b0390811660e0840152166101008201526101200160405160208183030381529060405280519060200120611fec565b9061203a565b6001600160a01b03848116911614915050949350505050565b6000546001600160a01b03163314610ecf5760405162461bcd60e51b81526004016105f29061282b565b6008805460ff1916911515919091179055565b606060068054610ef1906128c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1d906128c2565b8015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b5050505050905090565b6002610f7f826115b9565b6003811115610f9057610f90612706565b14610fad5760405162461bcd60e51b81526004016105f2906128f7565b610fb681611e73565b6107be6120f0565b610fce60c0840160a08501612500565b6001600160a01b0316336001600160a01b03161461103a5760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792062757965722063616e206578656375746520746869732066756e636044820152633a34b7b760e11b60648201526084016105f2565b600261104684356115b9565b600381111561105757611057612706565b1415611067576110678335611e73565b61107083610583565b600061107f846060013561178b565b905061108d84848484610d78565b6110d95760405162461bcd60e51b815260206004820152601c60248201527f696e636f7272656374206f70657261746f72207369676e61747572650000000060448201526064016105f2565b60408051610100810190915280600181526020016110fd60c0870160a08801612500565b6001600160a01b0316815260200161111b60e0870160c08801612500565b6001600160a01b03168152602001826001600160a01b031681526020016111458660600135611bf0565b6001600160a01b03168152602001600754426111619190612876565b815260200161117660608701604088016127ee565b61ffff1681526020868101359181019190915285356000908152600a9091526040902081518154829060ff191660018360038111156111b7576111b7612706565b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b03199283161790556060840151600284018054918416918316919091179055608084015160038401805491909316911617905560a080830151600483015560c08084015160058401805461ffff90921661ffff1990921691909117905560e09093015160069092019190915560009182916112859161127b91908901908901612500565b876020013561156b565b9092509050811561137b576005546001600160a01b03166323b872dd6112b160c0890160a08a01612500565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b1580156112ff57600080fd5b505af1158015611313573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611337919061288e565b61137b5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105f2565b80600b600061139060c08a0160a08b01612500565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113bf91906128ab565b909155506113d5905060e0870160c08801612500565b6001600160a01b03166113ee60c0880160a08901612500565b6001600160a01b031687600001357fe4a9c328b82280a42bddcf2971ded52a971269f3fa155694eec8e4c27f95e21860405160405180910390a4505050505050565b600080612710611440848661293e565b61144a919061295d565b90508381111561145a578361145c565b805b949350505050565b6000818152600a60205260409020600201546001600160a01b0316331461149d5760405162461bcd60e51b81526004016105f29061297f565b6114a6816115b9565b60038111156114b7576114b7612706565b6001146114d65760405162461bcd60e51b81526004016105f2906129c2565b6107be81611e73565b6000546001600160a01b031633146115095760405162461bcd60e51b81526004016105f29061282b565b60008181526004602090815260409182902080546001600160a01b031916905560035482518481526001600160a01b03909116918101919091527f34bf92bbf741b75e3289761f6b95459b088de5b3282274572caf118e9c2617dc91016108ce565b6001600160a01b0382166000908152600b602052604081205481908084116115935783611595565b805b91508084116115a55760006115af565b6115af81856128ab565b9250509250929050565b6000818152600a602052604081205460ff1660018160038111156115df576115df612706565b1480156115fc57506000838152600a602052604090206004015442115b156108405750600292915050565b6116126120f0565b565b600554604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e906044016107f0565b6000546001600160a01b031633146116775760405162461bcd60e51b81526004016105f29061282b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60026116cc826115b9565b60038111156116dd576116dd612706565b146114d65760405162461bcd60e51b81526004016105f2906128f7565b6000546001600160a01b031633146117245760405162461bcd60e51b81526004016105f29061282b565b60008281526002602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f01ab5ff875fd8edb498772244b76ffd53ac3b59cb6397e3c6654194e411ede6b91015b60405180910390a15050565b6000818152600260205260408120546001600160a01b031680156117af57806117bc565b6001546001600160a01b03165b9392505050565b6000546001600160a01b031633146117ed5760405162461bcd60e51b81526004016105f29061282b565b60008281526004602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f34bf92bbf741b75e3289761f6b95459b088de5b3282274572caf118e9c2617dc910161177f565b6000546001600160a01b031633146118765760405162461bcd60e51b81526004016105f29061282b565b60078190556040518181527fb8931bd4946b9278bba3ac02a56a37159384a2a02d4c3416706f635b853d44f4906020016108ce565b6000816118b784611b1e565b10159392505050565b6000546001600160a01b031633146118ea5760405162461bcd60e51b81526004016105f29061282b565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527fa60019696f11f9aa952db763c0de585f819d10fcafcfbd301a27d02e9caa41b0906020016108ce565b6000818152600a6020526040808220815161010081019092528054829060ff16600381111561196957611969612706565b600381111561197a5761197a612706565b8152815461010090046001600160a01b03908116602083015260018301548116604083015260028301548116606080840191909152600384015482166080840152600484015460a0840152600584015461ffff1660c084015260069093015460e09092019190915290820151919250163314611a085760405162461bcd60e51b81526004016105f29061297f565b611a11826115b9565b6003811115611a2257611a22612706565b600114611a415760405162461bcd60e51b81526004016105f2906129c2565b6000828152600a60205260408120805460ff1916600317905560e082015160c0830151611a72919061ffff16611430565b9050808260e00151611a8491906128ab565b6040808401516001600160a01b03166000908152600b6020529081208054909190611ab0908490612876565b909155505060808201516001600160a01b03166000908152600b602052604081208054839290611ae1908490612876565b90915550506040518381527fe72fd4f49ae148a0d79f0e71ec9cae30076dbfde7b66f70cafd11416eae8dc629060200160405180910390a1505050565b600080611b2a83611614565b6005546040516370a0823160e01b81526001600160a01b038681166004830152929350600092909116906370a082319060240160206040518083038186803b158015611b7557600080fd5b505afa158015611b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bad9190612812565b90506000818310611bbe5781611bc0565b825b6001600160a01b0386166000908152600b6020526040902054909150611be7908290612876565b95945050505050565b6000818152600460205260408120546001600160a01b03168015611c1457806117bc565b6003546001600160a01b03169392505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000828152600a602052604090819020815161010081019092528054829060ff166003811115611c9a57611c9a612706565b6003811115611cab57611cab612706565b815281546001600160a01b03610100909104811660208301526001830154811660408301526002830154811660608301526003830154166080820152600482015460a0820152600582015461ffff1660c082015260069091015460e09091015292915050565b6000546001600160a01b03163314611d3b5760405162461bcd60e51b81526004016105f29061282b565b6001600160a01b038116611da05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611e255760405162461bcd60e51b81526004016105f29061282b565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fec71ba738f211337eaf29e2d87bdb1b0928316c20db0a3a1108aa43321583b50906020016108ce565b6000818152600a6020526040808220815161010081019092528054829060ff166003811115611ea457611ea4612706565b6003811115611eb557611eb5612706565b815281546001600160a01b03610100909104811660208084019190915260018401548216604080850191909152600285015483166060850152600385015483166080850152600485015460a0850152600585015461ffff1660c085015260069094015460e09384015291840151848301519091166000908152600b90925291812080549394509192611f48908490612876565b90915550506000828152600a6020908152604080832080546001600160a81b03191681556001810180546001600160a01b03199081169091556002820180548216905560038201805490911690556004810184905560058101805461ffff191690556006018390559083015190516001600160a01b039091169184917f5ff61db57638246b4e385e22ef7613d9bb0c21cc207e863676e3c7a49e39a17f9190a35050565b6000610840611ff961221d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000808451604114156120645750505060208201516040830151606084015160001a6120da565b8451604014156120925750505060408201516020830151906001600160ff1b0381169060ff1c601b016120da565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f2565b6120e686828585612310565b9695505050505050565b336000908152600b60205260409020548061214d5760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f60448201526064016105f2565b336000818152600b602052604080822091909155600554905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156121ac57600080fd5b505af11580156121c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e4919061288e565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250565b60007f000000000000000000000000000000000000000000000000000000000000000046141561226c57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082111561238d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f2565b8360ff16601b14806123a257508360ff16601c145b6123f95760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105f2565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa15801561244d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611be75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f2565b600060e082840312156124c257600080fd5b50919050565b600060e082840312156124da57600080fd5b6117bc83836124b0565b80356001600160a01b03811681146124fb57600080fd5b919050565b60006020828403121561251257600080fd5b6117bc826124e4565b60006020828403121561252d57600080fd5b5035919050565b60008083601f84011261254657600080fd5b50813567ffffffffffffffff81111561255e57600080fd5b60208301915083602082850101111561257657600080fd5b9250929050565b6000806000610100848603121561259357600080fd5b61259d85856124b0565b925060e084013567ffffffffffffffff8111156125b957600080fd5b6125c586828701612534565b9497909650939450505050565b60008060008061012085870312156125e957600080fd5b6125f386866124b0565b935060e085013567ffffffffffffffff81111561260f57600080fd5b61261b87828801612534565b909450925061262f905061010086016124e4565b905092959194509250565b80151581146107be57600080fd5b60006020828403121561265a57600080fd5b813561145a8161263a565b600060208083528351808285015260005b8181101561269257858101830151858201604001528201612676565b818111156126a4576000604083870101525b50601f01601f1916929092016040019392505050565b600080604083850312156126cd57600080fd5b50508035926020909101359150565b600080604083850312156126ef57600080fd5b6126f8836124e4565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b6004811061273a57634e487b7160e01b600052602160045260246000fd5b9052565b60208101610840828461271c565b6000806040838503121561275f57600080fd5b8235915061276f602084016124e4565b90509250929050565b60006101008201905061278c82845161271c565b602083015160018060a01b038082166020850152806040860151166040850152806060860151166060850152806080860151166080850152505060a083015160a083015261ffff60c08401511660c083015260e083015160e083015292915050565b60006020828403121561280057600080fd5b813561ffff8116811461145a57600080fd5b60006020828403121561282457600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561288957612889612860565b500190565b6000602082840312156128a057600080fd5b815161145a8161263a565b6000828210156128bd576128bd612860565b500390565b600181811c908216806128d657607f821691505b602082108114156124c257634e487b7160e01b600052602260045260246000fd5b60208082526027908201527f726566756e64207265717569726573207061796d656e7420696e206661696c656040820152666420737461746560c81b606082015260800190565b600081600019048311821515161561295857612958612860565b500290565b60008261297a57634e487b7160e01b600052601260045260246000fd5b500490565b60208082526023908201527f6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72696040820152621e995960ea1b606082015260800190565b60208082526031908201527f7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207460408201527072616e7366657272696e6720737461746560781b60608201526080019056fea2646970667358221220d613a5bd88232ed0668dbf5dcfbf2e345726eeba03938d81ba2527c5afc7b91064736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061023c5760003560e01c8063715018a61161013b5780639cfd495c116100b8578063dca721001161007c578063dca7210014610519578063dd115ab21461052c578063f2cc55ee1461054c578063f2fde38b1461055d578063fd5773431461057057600080fd5b80639cfd495c146104c5578063b2685a3e146104d8578063b3080298146104eb578063c67eb9e5146104fe578063cab55d561461051157600080fd5b80637b018ab9116100ff5780637b018ab91461046a57806380ca11fc1461047d57806385a2910d1461048e5780638da5cb5b146104a1578063982ed326146104b257600080fd5b8063715018a6146103eb5780637249fbb6146103f3578063785e9e861461040657806378e96fb51461042b5780637ac83f9b1461045757600080fd5b80632593308b116101c9578063317cb0181161018d578063317cb0181461035f57806334b778ed146103875780633ccfd60b146103a75780633e5beab9146103af57806370a08231146103c257600080fd5b80632593308b146103005780632ab3433c146103135780632af41be4146103265780632ce10fcf1461033957806331784b6d1461034c57600080fd5b8063128b853211610210578063128b8532146102a257806314e50a0b146102aa5780631a29b6ab146102cd5780631c6d7675146102e0578063221a832e146102f557600080fd5b8062f3b6e81461024157806302519da31461025657806306968bd91461027c57806306a212ae1461028f575b600080fd5b61025461024f3660046124c8565b610583565b005b610269610264366004612500565b6107c1565b6040519081526020015b60405180910390f35b61025461028a36600461251b565b610846565b61025461029d36600461257d565b6108d9565b610254610d36565b6102bd6102b83660046125d2565b610d78565b6040519015158152602001610273565b6102546102db366004612648565b610ea5565b6102e8610ee2565b6040516102739190612665565b60085460ff166102bd565b61025461030e36600461251b565b610f74565b61025461032136600461257d565b610fbe565b6102696103343660046126ba565b611430565b61025461034736600461251b565b611464565b61025461035a36600461251b565b6114df565b61037261036d3660046126dc565b61156b565b60408051928352602083019190915201610273565b61039a61039536600461251b565b6115b9565b604051610273919061273e565b61025461160a565b6102696103bd366004612500565b611614565b6102696103d0366004612500565b6001600160a01b03166000908152600b602052604090205490565b61025461164d565b61025461040136600461251b565b6116c1565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610273565b6102bd610439366004612500565b6001600160a01b031660009081526009602052604090205460ff1690565b61025461046536600461274c565b6116fa565b61041361047836600461251b565b61178b565b6001546001600160a01b0316610413565b61025461049c36600461274c565b6117c3565b6000546001600160a01b0316610413565b6102546104c036600461251b565b61184c565b6102bd6104d33660046126dc565b6118ab565b6102546104e6366004612500565b6118c0565b6102546104f936600461251b565b611938565b61026961050c366004612500565b611b1e565b600754610269565b61041361052736600461251b565b611bf0565b61053f61053a36600461251b565b611c27565b6040516102739190612778565b6003546001600160a01b0316610413565b61025461056b366004612500565b611d11565b61025461057e366004612500565b611dfb565b61271061059660608301604084016127ee565b61ffff1611156105fb5760405162461bcd60e51b815260206004820152602560248201527f6665652063616e6e6f74206265206c6172676572207468616e203130302070656044820152641c98d95b9d60da1b60648201526084015b60405180910390fd5b600061060782356115b9565b600381111561061857610618612706565b1461066f5760405162461bcd60e51b815260206004820152602160248201527f7061796d656e7420696e20696e636f727265637420637572656e7420737461746044820152606560f81b60648201526084016105f2565b80608001354211156106c35760405162461bcd60e51b815260206004820152601860248201527f7061796d656e7420646561646c696e652065787069726564000000000000000060448201526064016105f2565b60085460ff161561074357600960006106e260e0840160c08501612500565b6001600160a01b0316815260208101919091526040016000205460ff166107435760405162461bcd60e51b81526020600482015260156024820152741cd95b1b195c881b9bdd081c9959da5cdd195c9959605a1b60448201526064016105f2565b61076061075660c0830160a08401612500565b82602001356118ab565b6107be5760405162461bcd60e51b815260206004820152602960248201527f6e6f7420656e6f7567682066756e647320617661696c61626c6520666f7220746044820152683434b990313abcb2b960b91b60648201526084016105f2565b50565b6005546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a08231906024015b60206040518083038186803b15801561080857600080fd5b505afa15801561081c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190612812565b92915050565b6000546001600160a01b031633146108705760405162461bcd60e51b81526004016105f29061282b565b60008181526002602090815260409182902080546001600160a01b031916905560015482518481526001600160a01b03909116918101919091527f01ab5ff875fd8edb498772244b76ffd53ac3b59cb6397e3c6654194e411ede6b91015b60405180910390a150565b336108e7606085013561178b565b6001600160a01b0316146109515760405162461bcd60e51b815260206004820152602b60248201527f6f70657261746f72206e6f7420617574686f72697a656420666f72207468697360448201526a081d5b9a5d995c9cd9525960aa1b60648201526084016105f2565b600261095d84356115b9565b600381111561096e5761096e612706565b141561097e5761097e8335611e73565b61098783610583565b61099d8383836102b860c0840160a08501612500565b6109e95760405162461bcd60e51b815260206004820152601960248201527f696e636f7272656374206275796572207369676e61747572650000000000000060448201526064016105f2565b6040805161010081019091528060018152602001610a0d60c0860160a08701612500565b6001600160a01b03168152602001610a2b60e0860160c08701612500565b6001600160a01b03168152336020820152604001610a4c6060860135611bf0565b6001600160a01b0316815260200160075442610a689190612876565b8152602001610a7d60608601604087016127ee565b61ffff1681526020858101359181019190915284356000908152600a9091526040902081518154829060ff19166001836003811115610abe57610abe612706565b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b03199283161790556060840151600284018054918416918316919091179055608084015160038401805491909316911617905560a080830151600483015560c08084015160058401805461ffff90921661ffff1990921691909117905560e0909301516006909201919091556000918291610b8c91610b8291908801908801612500565b866020013561156b565b90925090508115610c82576005546001600160a01b03166323b872dd610bb860c0880160a08901612500565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b158015610c0657600080fd5b505af1158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e919061288e565b610c825760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105f2565b80600b6000610c9760c0890160a08a01612500565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610cc691906128ab565b90915550610cdc905060e0860160c08701612500565b6001600160a01b0316610cf560c0870160a08801612500565b6001600160a01b031686600001357fe4a9c328b82280a42bddcf2971ded52a971269f3fa155694eec8e4c27f95e21860405160405180910390a45050505050565b33600081815260096020526040808220805460ff19166001179055517f258a7a0df6106f41c2e99c09f1b64931f5f284242bbc50272d5a752ac2f30dde9190a2565b600080610e8c85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e8692507f842d0bb1548581afe96170983041b67db4fde58372c89ca13c8b104222d6cc46915050893560208b0135610df160608d0160408e016127ee565b8c606001358d608001358e60a0016020810190610e0e9190612500565b8f60c0016020810190610e219190612500565b604080516020810199909952880196909652606087019490945261ffff909216608086015260a085015260c08401526001600160a01b0390811660e0840152166101008201526101200160405160208183030381529060405280519060200120611fec565b9061203a565b6001600160a01b03848116911614915050949350505050565b6000546001600160a01b03163314610ecf5760405162461bcd60e51b81526004016105f29061282b565b6008805460ff1916911515919091179055565b606060068054610ef1906128c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1d906128c2565b8015610f6a5780601f10610f3f57610100808354040283529160200191610f6a565b820191906000526020600020905b815481529060010190602001808311610f4d57829003601f168201915b5050505050905090565b6002610f7f826115b9565b6003811115610f9057610f90612706565b14610fad5760405162461bcd60e51b81526004016105f2906128f7565b610fb681611e73565b6107be6120f0565b610fce60c0840160a08501612500565b6001600160a01b0316336001600160a01b03161461103a5760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792062757965722063616e206578656375746520746869732066756e636044820152633a34b7b760e11b60648201526084016105f2565b600261104684356115b9565b600381111561105757611057612706565b1415611067576110678335611e73565b61107083610583565b600061107f846060013561178b565b905061108d84848484610d78565b6110d95760405162461bcd60e51b815260206004820152601c60248201527f696e636f7272656374206f70657261746f72207369676e61747572650000000060448201526064016105f2565b60408051610100810190915280600181526020016110fd60c0870160a08801612500565b6001600160a01b0316815260200161111b60e0870160c08801612500565b6001600160a01b03168152602001826001600160a01b031681526020016111458660600135611bf0565b6001600160a01b03168152602001600754426111619190612876565b815260200161117660608701604088016127ee565b61ffff1681526020868101359181019190915285356000908152600a9091526040902081518154829060ff191660018360038111156111b7576111b7612706565b0217905550602082015181546001600160a01b0391821661010002610100600160a81b031990911617825560408301516001830180549183166001600160a01b03199283161790556060840151600284018054918416918316919091179055608084015160038401805491909316911617905560a080830151600483015560c08084015160058401805461ffff90921661ffff1990921691909117905560e09093015160069092019190915560009182916112859161127b91908901908901612500565b876020013561156b565b9092509050811561137b576005546001600160a01b03166323b872dd6112b160c0890160a08a01612500565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b1580156112ff57600080fd5b505af1158015611313573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611337919061288e565b61137b5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105f2565b80600b600061139060c08a0160a08b01612500565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113bf91906128ab565b909155506113d5905060e0870160c08801612500565b6001600160a01b03166113ee60c0880160a08901612500565b6001600160a01b031687600001357fe4a9c328b82280a42bddcf2971ded52a971269f3fa155694eec8e4c27f95e21860405160405180910390a4505050505050565b600080612710611440848661293e565b61144a919061295d565b90508381111561145a578361145c565b805b949350505050565b6000818152600a60205260409020600201546001600160a01b0316331461149d5760405162461bcd60e51b81526004016105f29061297f565b6114a6816115b9565b60038111156114b7576114b7612706565b6001146114d65760405162461bcd60e51b81526004016105f2906129c2565b6107be81611e73565b6000546001600160a01b031633146115095760405162461bcd60e51b81526004016105f29061282b565b60008181526004602090815260409182902080546001600160a01b031916905560035482518481526001600160a01b03909116918101919091527f34bf92bbf741b75e3289761f6b95459b088de5b3282274572caf118e9c2617dc91016108ce565b6001600160a01b0382166000908152600b602052604081205481908084116115935783611595565b805b91508084116115a55760006115af565b6115af81856128ab565b9250509250929050565b6000818152600a602052604081205460ff1660018160038111156115df576115df612706565b1480156115fc57506000838152600a602052604090206004015442115b156108405750600292915050565b6116126120f0565b565b600554604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e906044016107f0565b6000546001600160a01b031633146116775760405162461bcd60e51b81526004016105f29061282b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60026116cc826115b9565b60038111156116dd576116dd612706565b146114d65760405162461bcd60e51b81526004016105f2906128f7565b6000546001600160a01b031633146117245760405162461bcd60e51b81526004016105f29061282b565b60008281526002602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f01ab5ff875fd8edb498772244b76ffd53ac3b59cb6397e3c6654194e411ede6b91015b60405180910390a15050565b6000818152600260205260408120546001600160a01b031680156117af57806117bc565b6001546001600160a01b03165b9392505050565b6000546001600160a01b031633146117ed5760405162461bcd60e51b81526004016105f29061282b565b60008281526004602090815260409182902080546001600160a01b0319166001600160a01b0385169081179091558251858152918201527f34bf92bbf741b75e3289761f6b95459b088de5b3282274572caf118e9c2617dc910161177f565b6000546001600160a01b031633146118765760405162461bcd60e51b81526004016105f29061282b565b60078190556040518181527fb8931bd4946b9278bba3ac02a56a37159384a2a02d4c3416706f635b853d44f4906020016108ce565b6000816118b784611b1e565b10159392505050565b6000546001600160a01b031633146118ea5760405162461bcd60e51b81526004016105f29061282b565b600380546001600160a01b0319166001600160a01b0383169081179091556040519081527fa60019696f11f9aa952db763c0de585f819d10fcafcfbd301a27d02e9caa41b0906020016108ce565b6000818152600a6020526040808220815161010081019092528054829060ff16600381111561196957611969612706565b600381111561197a5761197a612706565b8152815461010090046001600160a01b03908116602083015260018301548116604083015260028301548116606080840191909152600384015482166080840152600484015460a0840152600584015461ffff1660c084015260069093015460e09092019190915290820151919250163314611a085760405162461bcd60e51b81526004016105f29061297f565b611a11826115b9565b6003811115611a2257611a22612706565b600114611a415760405162461bcd60e51b81526004016105f2906129c2565b6000828152600a60205260408120805460ff1916600317905560e082015160c0830151611a72919061ffff16611430565b9050808260e00151611a8491906128ab565b6040808401516001600160a01b03166000908152600b6020529081208054909190611ab0908490612876565b909155505060808201516001600160a01b03166000908152600b602052604081208054839290611ae1908490612876565b90915550506040518381527fe72fd4f49ae148a0d79f0e71ec9cae30076dbfde7b66f70cafd11416eae8dc629060200160405180910390a1505050565b600080611b2a83611614565b6005546040516370a0823160e01b81526001600160a01b038681166004830152929350600092909116906370a082319060240160206040518083038186803b158015611b7557600080fd5b505afa158015611b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bad9190612812565b90506000818310611bbe5781611bc0565b825b6001600160a01b0386166000908152600b6020526040902054909150611be7908290612876565b95945050505050565b6000818152600460205260408120546001600160a01b03168015611c1457806117bc565b6003546001600160a01b03169392505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526000828152600a602052604090819020815161010081019092528054829060ff166003811115611c9a57611c9a612706565b6003811115611cab57611cab612706565b815281546001600160a01b03610100909104811660208301526001830154811660408301526002830154811660608301526003830154166080820152600482015460a0820152600582015461ffff1660c082015260069091015460e09091015292915050565b6000546001600160a01b03163314611d3b5760405162461bcd60e51b81526004016105f29061282b565b6001600160a01b038116611da05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611e255760405162461bcd60e51b81526004016105f29061282b565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fec71ba738f211337eaf29e2d87bdb1b0928316c20db0a3a1108aa43321583b50906020016108ce565b6000818152600a6020526040808220815161010081019092528054829060ff166003811115611ea457611ea4612706565b6003811115611eb557611eb5612706565b815281546001600160a01b03610100909104811660208084019190915260018401548216604080850191909152600285015483166060850152600385015483166080850152600485015460a0850152600585015461ffff1660c085015260069094015460e09384015291840151848301519091166000908152600b90925291812080549394509192611f48908490612876565b90915550506000828152600a6020908152604080832080546001600160a81b03191681556001810180546001600160a01b03199081169091556002820180548216905560038201805490911690556004810184905560058101805461ffff191690556006018390559083015190516001600160a01b039091169184917f5ff61db57638246b4e385e22ef7613d9bb0c21cc207e863676e3c7a49e39a17f9190a35050565b6000610840611ff961221d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000808451604114156120645750505060208201516040830151606084015160001a6120da565b8451604014156120925750505060408201516020830151906001600160ff1b0381169060ff1c601b016120da565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f2565b6120e686828585612310565b9695505050505050565b336000908152600b60205260409020548061214d5760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f60448201526064016105f2565b336000818152600b602052604080822091909155600554905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156121ac57600080fd5b505af11580156121c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e4919061288e565b5060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a250565b60007f000000000000000000000000000000000000000000000000000000000000000046141561226c57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082111561238d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f2565b8360ff16601b14806123a257508360ff16601c145b6123f95760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105f2565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa15801561244d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611be75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f2565b600060e082840312156124c257600080fd5b50919050565b600060e082840312156124da57600080fd5b6117bc83836124b0565b80356001600160a01b03811681146124fb57600080fd5b919050565b60006020828403121561251257600080fd5b6117bc826124e4565b60006020828403121561252d57600080fd5b5035919050565b60008083601f84011261254657600080fd5b50813567ffffffffffffffff81111561255e57600080fd5b60208301915083602082850101111561257657600080fd5b9250929050565b6000806000610100848603121561259357600080fd5b61259d85856124b0565b925060e084013567ffffffffffffffff8111156125b957600080fd5b6125c586828701612534565b9497909650939450505050565b60008060008061012085870312156125e957600080fd5b6125f386866124b0565b935060e085013567ffffffffffffffff81111561260f57600080fd5b61261b87828801612534565b909450925061262f905061010086016124e4565b905092959194509250565b80151581146107be57600080fd5b60006020828403121561265a57600080fd5b813561145a8161263a565b600060208083528351808285015260005b8181101561269257858101830151858201604001528201612676565b818111156126a4576000604083870101525b50601f01601f1916929092016040019392505050565b600080604083850312156126cd57600080fd5b50508035926020909101359150565b600080604083850312156126ef57600080fd5b6126f8836124e4565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b6004811061273a57634e487b7160e01b600052602160045260246000fd5b9052565b60208101610840828461271c565b6000806040838503121561275f57600080fd5b8235915061276f602084016124e4565b90509250929050565b60006101008201905061278c82845161271c565b602083015160018060a01b038082166020850152806040860151166040850152806060860151166060850152806080860151166080850152505060a083015160a083015261ffff60c08401511660c083015260e083015160e083015292915050565b60006020828403121561280057600080fd5b813561ffff8116811461145a57600080fd5b60006020828403121561282457600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561288957612889612860565b500190565b6000602082840312156128a057600080fd5b815161145a8161263a565b6000828210156128bd576128bd612860565b500390565b600181811c908216806128d657607f821691505b602082108114156124c257634e487b7160e01b600052602260045260246000fd5b60208082526027908201527f726566756e64207265717569726573207061796d656e7420696e206661696c656040820152666420737461746560c81b606082015260800190565b600081600019048311821515161561295857612958612860565b500290565b60008261297a57634e487b7160e01b600052601260045260246000fd5b500490565b60208082526023908201527f6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72696040820152621e995960ea1b606082015260800190565b60208082526031908201527f7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207460408201527072616e7366657272696e6720737461746560781b60608201526080019056fea2646970667358221220d613a5bd88232ed0668dbf5dcfbf2e345726eeba03938d81ba2527c5afc7b91064736f6c63430008080033",
  "immutableReferences": {
    "360": [
      {
        "length": 32,
        "start": 8778
      }
    ],
    "362": [
      {
        "length": 32,
        "start": 8737
      }
    ],
    "364": [
      {
        "length": 32,
        "start": 8861
      }
    ],
    "366": [
      {
        "length": 32,
        "start": 8898
      }
    ],
    "368": [
      {
        "length": 32,
        "start": 8819
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2489:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "254:1146:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "300:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "309:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "312:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "302:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "302:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "302:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "275:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "284:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "271:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "271:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "296:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "267:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "264:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "325:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "344:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "338:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "329:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "417:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "426:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "429:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "419:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "419:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "419:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "376:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "387:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "402:3:11",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "407:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "398:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "398:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "411:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "394:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "394:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "383:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "383:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "373:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "373:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "363:70:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "442:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "452:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "466:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "476:2:11",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "470:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "487:39:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "511:9:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "522:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "507:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "501:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "501:25:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "491:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "535:28:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "553:2:11",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "557:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:10:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "561:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "545:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "545:18:11"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "539:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "590:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "602:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "592:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "592:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "592:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "578:6:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "586:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "575:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:14:11"
                  },
                  "nodeType": "YulIf",
                  "src": "572:34:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "615:32:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "629:9:11"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "640:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "625:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:22:11"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "619:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "695:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "704:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "707:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "697:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "697:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "697:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "674:2:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "678:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "670:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "670:13:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "685:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "666:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "666:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "659:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "659:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "656:55:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "720:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "736:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "730:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "730:9:11"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "724:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "762:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "764:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "764:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "764:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "754:2:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "758:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "751:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:10:11"
                  },
                  "nodeType": "YulIf",
                  "src": "748:36:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "793:17:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "807:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "803:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:7:11"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "797:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "819:23:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "839:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "833:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "833:9:11"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "823:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "851:71:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "873:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "897:2:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "901:4:11",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "893:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "893:13:11"
                                  },
                                  {
                                    "name": "_5",
                                    "nodeType": "YulIdentifier",
                                    "src": "908:2:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "889:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "889:22:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "913:2:11",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "885:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "885:31:11"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "918:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "881:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "881:40:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "869:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "869:53:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "855:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "981:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "983:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "983:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "983:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "940:10:11"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "952:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "937:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "937:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "960:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "972:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "957:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "957:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "934:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:46:11"
                  },
                  "nodeType": "YulIf",
                  "src": "931:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1019:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1023:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1012:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1012:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1012:22:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1050:6:11"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1058:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1043:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:18:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1043:18:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1107:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1116:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1119:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1109:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1109:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1109:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1084:2:11"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1088:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1080:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1080:11:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1093:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1076:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1076:20:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1098:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1073:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1070:53:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1132:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1141:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1136:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1197:83:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1226:6:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1234:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1222:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1222:14:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1238:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1218:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1218:23:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "1257:2:11"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1261:1:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1253:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1253:10:11"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1265:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1249:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1249:19:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1243:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1243:26:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1211:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1211:59:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1211:59:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1162:1:11"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1165:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1159:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1159:9:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1169:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1171:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1180:1:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1183:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1176:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1176:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1171:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1155:3:11",
                    "statements": []
                  },
                  "src": "1151:129:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1310:59:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "memPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "1339:6:11"
                                    },
                                    {
                                      "name": "_4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1347:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1335:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1335:15:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1352:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1331:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1331:24:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1357:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1324:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1324:35:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1324:35:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1295:1:11"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1298:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1292:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1292:9:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1289:80:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1378:16:11",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1388:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1378:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "212:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "223:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "235:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "243:6:11",
                "type": ""
              }
            ],
            "src": "146:1254:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1506:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1516:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1528:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1524:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1516:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1558:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1573:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1589:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1594:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1585:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1585:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1598:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1581:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1581:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1569:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1569:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1551:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1551:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1551:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1475:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1486:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1497:4:11",
                "type": ""
              }
            ],
            "src": "1405:203:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1826:276:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1836:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1848:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1859:3:11",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1844:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1844:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1836:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1879:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1890:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1872:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1872:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1872:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1917:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1928:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1913:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1913:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1933:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1906:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1906:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1906:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1960:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1971:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1956:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1956:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1976:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1949:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1949:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2003:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2014:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1999:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1999:18:11"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2019:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1992:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1992:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2046:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2042:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2042:19:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "2067:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2083:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2088:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2079:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2079:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2092:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2075:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2075:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2063:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2063:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2035:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:61:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2035:61:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1763:9:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1774:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1782:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1790:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1798:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1806:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1817:4:11",
                "type": ""
              }
            ],
            "src": "1613:489:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2162:325:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2172:22:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2186:1:11",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2189:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2182:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2182:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2172:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2203:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2233:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2239:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2229:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2229:12:11"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2207:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2280:31:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2282:27:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2296:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2304:4:11",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2292:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2292:17:11"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2282:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2260:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2253:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2250:61:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2370:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2391:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2398:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2403:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2394:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2394:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2384:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2384:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2384:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2435:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2438:4:11",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2428:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2428:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2428:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2463:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2466:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2456:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2456:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2456:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2326:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2349:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2357:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2346:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2346:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2323:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2323:38:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2320:161:11"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2142:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2151:6:11",
                "type": ""
              }
            ],
            "src": "2107:380:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:19717:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "89:86:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "129:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "138:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "141:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "110:3:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "115:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "106:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "106:16:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "124:3:11",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "102:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "99:46:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "154:15:11",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "163:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "154:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_struct_PaymentInput_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "63:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "71:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "79:5:11",
                "type": ""
              }
            ],
            "src": "14:161:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "281:147:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "328:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "337:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "340:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "330:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "330:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "330:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "302:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "311:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "298:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "298:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "323:3:11",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "294:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "291:53:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "353:69:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "403:9:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "414:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_PaymentInput_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "363:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "363:59:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "353:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_PaymentInput_$707_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "247:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "258:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "270:6:11",
                "type": ""
              }
            ],
            "src": "180:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "482:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "492:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "514:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "501:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "501:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "492:5:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "584:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "596:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "586:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "586:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "586:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "543:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "554:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "569:3:11",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "574:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "565:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "565:11:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "578:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "561:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "561:19:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "550:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "550:31:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "540:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "540:42:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:50:11"
                  },
                  "nodeType": "YulIf",
                  "src": "530:70:11"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "461:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "472:5:11",
                "type": ""
              }
            ],
            "src": "433:173:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "681:116:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "727:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "736:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "739:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "729:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "729:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "729:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "702:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "711:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "698:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "698:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "723:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "694:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "691:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "752:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "781:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "762:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "647:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "658:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "670:6:11",
                "type": ""
              }
            ],
            "src": "611:186:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "903:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "913:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "925:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "921:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "913:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "955:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "966:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "948:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "948:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "872:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "883:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "894:4:11",
                "type": ""
              }
            ],
            "src": "802:177:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1054:110:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1100:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1109:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1102:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1102:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1102:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1075:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1084:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1071:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1071:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1096:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1067:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1067:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1064:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1125:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1148:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1135:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1125:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1020:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1031:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1043:6:11",
                "type": ""
              }
            ],
            "src": "984:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1241:275:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1290:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1299:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1302:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1292:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1292:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1292:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1269:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1277:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1265:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1265:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1284:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1261:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1261:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1254:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1254:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1251:55:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1315:30:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1338:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1325:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1325:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1315:6:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1388:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1397:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1400:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1390:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1390:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1360:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1368:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1357:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1357:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1354:50:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1413:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1429:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1437:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1425:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1425:17:11"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "1413:8:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1494:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1503:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1506:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1496:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1496:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1496:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1465:6:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1473:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1461:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1461:19:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1482:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1457:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1457:30:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1489:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1454:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1454:39:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1451:59:11"
                }
              ]
            },
            "name": "abi_decode_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1204:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1212:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1220:8:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1230:6:11",
                "type": ""
              }
            ],
            "src": "1169:347:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1658:409:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1705:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1714:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1717:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1707:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1707:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1707:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1679:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1688:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1675:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1675:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1700:3:11",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1671:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1671:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1668:53:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1730:69:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1780:9:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1791:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_PaymentInput_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1740:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1740:59:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1730:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1808:47:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1839:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1850:3:11",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1835:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1835:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1822:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1822:33:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1812:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1898:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1907:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1910:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1900:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1900:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1900:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1870:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1878:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1867:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1864:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1923:84:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1979:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1990:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1975:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1975:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1999:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1949:25:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:58:11"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "1927:8:11",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "1937:8:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2016:18:11",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2026:8:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2016:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2043:18:11",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2053:8:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2043:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_PaymentInput_$707_calldata_ptrt_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1608:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1619:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1631:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1639:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1647:6:11",
                "type": ""
              }
            ],
            "src": "1521:546:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2226:467:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2273:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2282:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2285:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2275:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2275:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2275:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2247:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2256:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2243:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2243:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2268:3:11",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2239:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2236:53:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2298:69:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2348:9:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2359:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_PaymentInput_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2308:39:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:59:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2298:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2376:47:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2407:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2418:3:11",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2403:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2403:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2390:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:33:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2380:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2466:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2475:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2478:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2468:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2468:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2468:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2438:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2446:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2435:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2435:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2432:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2491:84:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2547:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2558:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2543:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2543:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2567:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2517:25:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:58:11"
                  },
                  "variables": [
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2495:8:11",
                      "type": ""
                    },
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "2505:8:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2584:18:11",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2594:8:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2584:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2611:18:11",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2621:8:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2611:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2638:49:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2671:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2682:3:11",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2667:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2667:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2648:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2648:39:11"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2638:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_PaymentInput_$707_calldata_ptrt_bytes_calldata_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2168:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2179:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2191:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2199:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2207:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2215:6:11",
                "type": ""
              }
            ],
            "src": "2072:621:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2793:92:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2803:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2815:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2826:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2811:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2811:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2803:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2845:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2870:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2863:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2863:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2856:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2856:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2838:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2838:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2838:41:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2762:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2773:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2784:4:11",
                "type": ""
              }
            ],
            "src": "2698:187:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2932:76:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2986:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2995:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2998:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2988:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2988:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2988:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2955:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2976:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2969:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2969:13:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2962:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2962:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2952:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2952:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2945:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2945:40:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2942:60:11"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2921:5:11",
                "type": ""
              }
            ],
            "src": "2890:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3080:174:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3126:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3135:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3138:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3128:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3128:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3128:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3101:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3110:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3097:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3097:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3122:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3093:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3093:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3090:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3151:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3177:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3164:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3164:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3155:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3218:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3196:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:28:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3196:28:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3233:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3243:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3233:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3046:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3057:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3069:6:11",
                "type": ""
              }
            ],
            "src": "3013:241:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3380:476:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3390:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3400:2:11",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3394:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3418:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3429:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3411:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3411:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3411:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3441:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3461:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3455:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3455:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3445:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3488:9:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3499:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3484:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3484:18:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3504:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3477:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3477:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3477:34:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3520:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3529:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3524:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3589:90:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3618:9:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3629:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3614:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3614:17:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3633:2:11",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3610:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3610:26:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3652:6:11"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3660:1:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3648:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3648:14:11"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3664:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3644:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3644:23:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3638:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3638:30:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3603:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3603:66:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3603:66:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3550:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3553:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3547:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3561:19:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3563:15:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3572:1:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3575:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3568:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3568:10:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3563:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3543:3:11",
                    "statements": []
                  },
                  "src": "3539:140:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3713:66:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3742:9:11"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3753:6:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3738:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3738:22:11"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3762:2:11",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3734:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3734:31:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3767:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3727:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3727:42:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3727:42:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3694:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3697:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3691:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3691:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3688:91:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3788:62:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3804:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3823:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3831:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3819:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3819:15:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3840:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3836:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3836:7:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3815:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3815:29:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3800:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3800:45:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3847:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3796:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3796:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3788:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3349:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3360:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3371:4:11",
                "type": ""
              }
            ],
            "src": "3259:597:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3931:110:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3977:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3986:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3989:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3979:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3979:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3979:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3952:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3961:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3948:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3948:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3973:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3944:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3944:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "3941:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4002:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4025:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4012:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4012:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4002:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3897:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3908:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3920:6:11",
                "type": ""
              }
            ],
            "src": "3861:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4133:161:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4179:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4188:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4191:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4181:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4181:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4181:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4154:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4163:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4150:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4150:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4175:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4146:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4146:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4143:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4204:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4227:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4214:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4214:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4204:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4246:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4273:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4284:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4269:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4269:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4256:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4256:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4246:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4091:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4102:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4114:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4122:6:11",
                "type": ""
              }
            ],
            "src": "4046:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4386:167:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4432:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4441:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4444:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4434:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4434:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4434:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4407:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4416:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4403:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4403:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4428:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4399:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4399:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "4396:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4457:39:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4486:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "4467:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4467:29:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4457:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4505:42:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4532:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4543:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4528:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4528:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4515:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:32:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4505:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4344:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4355:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4367:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4375:6:11",
                "type": ""
              }
            ],
            "src": "4299:254:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4687:119:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4697:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4709:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4720:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4705:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4705:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4697:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4739:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4750:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4732:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4732:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4732:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4777:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4788:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4773:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4773:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4793:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4766:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4766:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4766:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4648:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4659:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4667:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4678:4:11",
                "type": ""
              }
            ],
            "src": "4558:248:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4843:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4860:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4867:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4872:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4863:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4863:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4853:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4853:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4853:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4900:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4903:4:11",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4893:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4893:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4893:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4924:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4927:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4917:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4917:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4917:15:11"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "4811:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4991:186:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5033:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5054:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5061:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5066:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5057:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5057:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5047:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5047:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5047:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5098:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5101:4:11",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5091:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5091:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5091:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5126:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5129:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5119:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5119:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5119:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5014:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5021:1:11",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5011:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5011:12:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5004:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5004:20:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5001:143:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5160:3:11"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5165:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5153:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5153:18:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5153:18:11"
                }
              ]
            },
            "name": "abi_encode_enum_States",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4975:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4982:3:11",
                "type": ""
              }
            ],
            "src": "4943:234:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5291:92:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5301:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5313:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5324:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5309:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5309:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5301:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5359:6:11"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5367:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_States",
                      "nodeType": "YulIdentifier",
                      "src": "5336:22:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5336:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5336:41:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_States_$765__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5260:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5271:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5282:4:11",
                "type": ""
              }
            ],
            "src": "5182:201:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5489:102:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5499:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5511:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5522:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5507:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5507:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5499:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5541:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5556:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5572:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5577:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5568:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5568:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5581:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5564:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5564:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5552:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5552:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5534:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5534:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5534:51:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5458:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5469:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5480:4:11",
                "type": ""
              }
            ],
            "src": "5388:203:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5683:167:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5729:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5738:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5741:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5731:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5731:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5731:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5704:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5713:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5700:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5700:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5725:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5696:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5696:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5693:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5754:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5777:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5764:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5764:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5754:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5796:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5829:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5840:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5825:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5825:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "5806:18:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5806:38:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5796:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5641:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5652:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5664:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5672:6:11",
                "type": ""
              }
            ],
            "src": "5596:254:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6004:669:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6014:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6026:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6037:3:11",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6022:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6022:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6014:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6079:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6073:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6073:13:11"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6088:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_States",
                      "nodeType": "YulIdentifier",
                      "src": "6050:22:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6050:48:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6050:48:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6107:44:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6137:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6145:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6133:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6133:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6127:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6127:24:11"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "6111:12:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6160:29:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6178:3:11",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6183:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6174:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6174:11:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6187:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6170:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6170:19:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6164:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6209:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6220:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6205:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6205:20:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "6231:12:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6245:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6227:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6227:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6198:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6198:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6198:51:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6269:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6280:4:11",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6265:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6265:20:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6301:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6309:4:11",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6297:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6297:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "6291:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6291:24:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6317:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6287:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6287:33:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6258:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6258:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6258:63:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6341:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6352:4:11",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6337:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6337:20:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6373:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6381:4:11",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6369:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6369:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "6363:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6363:24:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6389:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6359:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6359:33:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6330:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6330:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6330:63:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6413:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6424:4:11",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6409:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6409:20:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6445:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6453:4:11",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6441:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6441:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "6435:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6435:24:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6461:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6431:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6431:33:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6402:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6402:63:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6402:63:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6485:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6496:4:11",
                            "type": "",
                            "value": "0xa0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6481:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6481:20:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6513:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6521:4:11",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6509:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6509:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6503:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6503:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6474:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6474:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6474:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6548:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6559:4:11",
                            "type": "",
                            "value": "0xc0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6544:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6544:20:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6580:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6588:4:11",
                                    "type": "",
                                    "value": "0xc0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6576:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6576:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "6570:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6570:24:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6596:6:11",
                            "type": "",
                            "value": "0xffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6566:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6566:37:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6537:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6537:67:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6537:67:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6624:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6635:4:11",
                            "type": "",
                            "value": "0xe0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6620:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6620:20:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6652:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6660:4:11",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6648:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6648:17:11"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6642:5:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6642:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6613:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6613:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6613:54:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Payment_$783_memory_ptr__to_t_struct$_Payment_$783_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5973:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5984:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5995:4:11",
                "type": ""
              }
            ],
            "src": "5855:818:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6747:203:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6793:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6802:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6805:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6795:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6795:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6795:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6768:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6777:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6764:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6764:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6789:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6760:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6760:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6757:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6818:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6844:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6831:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6831:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6822:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6904:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6913:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6916:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6906:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6906:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6906:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6876:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6887:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6894:6:11",
                                "type": "",
                                "value": "0xffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6883:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6883:18:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6873:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6873:29:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6866:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6866:37:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6863:57:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6929:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6939:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6929:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6713:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6724:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6736:6:11",
                "type": ""
              }
            ],
            "src": "6678:272:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7129:227:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7146:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7157:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7139:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7139:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7139:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7180:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7191:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7176:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7176:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7196:2:11",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7169:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7169:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7169:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7219:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7230:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7215:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7215:18:11"
                      },
                      {
                        "hexValue": "6665652063616e6e6f74206265206c6172676572207468616e20313030207065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7235:34:11",
                        "type": "",
                        "value": "fee cannot be larger than 100 pe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7208:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7208:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7208:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7290:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7301:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7286:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7286:18:11"
                      },
                      {
                        "hexValue": "7263656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7306:7:11",
                        "type": "",
                        "value": "rcent"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7279:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7279:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7279:35:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7323:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7335:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7346:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7331:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7331:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7323:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7106:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7120:4:11",
                "type": ""
              }
            ],
            "src": "6955:401:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7535:223:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7552:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7563:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7545:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7545:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7545:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7586:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7597:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7582:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7582:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7602:2:11",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7575:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7575:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7575:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7625:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7636:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7621:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7621:18:11"
                      },
                      {
                        "hexValue": "7061796d656e7420696e20696e636f727265637420637572656e742073746174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7641:34:11",
                        "type": "",
                        "value": "payment in incorrect curent stat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7614:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7614:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7614:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7696:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7707:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7692:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7692:18:11"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7712:3:11",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7685:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7685:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7685:31:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7725:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7737:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7748:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7733:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7733:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7725:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7512:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7526:4:11",
                "type": ""
              }
            ],
            "src": "7361:397:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7937:174:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7954:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7965:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7947:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7947:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7947:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7988:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7999:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7984:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7984:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8004:2:11",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7977:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7977:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7977:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8027:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8038:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8023:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8023:18:11"
                      },
                      {
                        "hexValue": "7061796d656e7420646561646c696e652065787069726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8043:26:11",
                        "type": "",
                        "value": "payment deadline expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8016:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8016:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8016:54:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8079:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8091:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8102:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8087:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8087:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8079:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7914:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7928:4:11",
                "type": ""
              }
            ],
            "src": "7763:348:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8290:171:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8307:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8318:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8300:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8300:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8300:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8341:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8352:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8337:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8337:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8357:2:11",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8330:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8330:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8330:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8380:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8391:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8376:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8376:18:11"
                      },
                      {
                        "hexValue": "73656c6c6572206e6f742072656769737465726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8396:23:11",
                        "type": "",
                        "value": "seller not registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8369:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8369:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8369:51:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8429:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8441:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8452:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8437:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8437:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8429:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8267:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8281:4:11",
                "type": ""
              }
            ],
            "src": "8116:345:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8640:231:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8657:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8668:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8650:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8650:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8650:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8691:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8702:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8687:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8687:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8707:2:11",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8680:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8680:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8680:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8730:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8741:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8726:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8726:18:11"
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682066756e647320617661696c61626c6520666f722074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8746:34:11",
                        "type": "",
                        "value": "not enough funds available for t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8719:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8719:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8719:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8801:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8812:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8797:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8797:18:11"
                      },
                      {
                        "hexValue": "686973206275796572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8817:11:11",
                        "type": "",
                        "value": "his buyer"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8790:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8790:39:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8790:39:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8838:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8850:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8861:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8846:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8846:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8838:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8617:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8631:4:11",
                "type": ""
              }
            ],
            "src": "8466:405:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8957:103:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9003:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9012:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9015:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9005:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9005:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9005:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8978:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8987:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8974:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8974:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8999:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8970:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8970:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "8967:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9028:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9044:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9038:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9038:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9028:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8923:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8934:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8946:6:11",
                "type": ""
              }
            ],
            "src": "8876:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9239:182:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9256:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9267:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9249:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9249:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9249:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9290:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9301:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9286:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9286:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9306:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9279:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9279:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9279:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9329:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9340:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9325:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9325:18:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9345:34:11",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9318:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9318:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9318:62:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9389:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9401:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9412:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9397:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9397:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9389:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9216:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9230:4:11",
                "type": ""
              }
            ],
            "src": "9065:356:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9555:145:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9565:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9577:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9588:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9573:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9573:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9565:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9607:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9618:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9600:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9600:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9600:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9645:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9656:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9641:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9641:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9665:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9681:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9686:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9677:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9677:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9690:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9673:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9673:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9661:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9661:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9634:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9634:60:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9634:60:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9516:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9527:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9535:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9546:4:11",
                "type": ""
              }
            ],
            "src": "9426:274:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9879:233:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9896:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9907:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9889:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9889:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9889:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9930:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9941:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9926:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9926:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9946:2:11",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9919:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9919:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9919:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9969:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9980:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9965:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9965:18:11"
                      },
                      {
                        "hexValue": "6f70657261746f72206e6f7420617574686f72697a656420666f722074686973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9985:34:11",
                        "type": "",
                        "value": "operator not authorized for this"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9958:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9958:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9958:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10040:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10051:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10036:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10036:18:11"
                      },
                      {
                        "hexValue": "20756e6976657273654964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10056:13:11",
                        "type": "",
                        "value": " universeId"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10029:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10029:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10029:41:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10079:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10091:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10102:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10087:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10087:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10079:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9856:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9870:4:11",
                "type": ""
              }
            ],
            "src": "9705:407:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10291:175:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10308:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10319:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10301:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10301:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10301:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10342:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10353:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10338:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10338:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10358:2:11",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10331:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10331:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10331:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10381:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10392:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10377:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10377:18:11"
                      },
                      {
                        "hexValue": "696e636f7272656374206275796572207369676e6174757265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10397:27:11",
                        "type": "",
                        "value": "incorrect buyer signature"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10370:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10370:55:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10370:55:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10434:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10446:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10457:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10442:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10442:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10434:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10268:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10282:4:11",
                "type": ""
              }
            ],
            "src": "10117:349:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10503:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10520:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10527:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10532:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10523:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10523:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10513:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10513:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10513:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10560:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10563:4:11",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10553:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10553:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10553:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10584:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10587:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10577:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10577:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10577:15:11"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10471:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10651:80:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10678:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10680:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10680:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10680:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10667:1:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10674:1:11"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10670:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10670:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10664:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10664:13:11"
                  },
                  "nodeType": "YulIf",
                  "src": "10661:39:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10709:16:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10720:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10723:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10716:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10716:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10709:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10634:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10637:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10643:3:11",
                "type": ""
              }
            ],
            "src": "10603:128:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10893:218:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10903:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10915:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10926:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10911:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10911:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10903:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10938:29:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10956:3:11",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10961:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10952:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10952:11:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10965:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10948:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10948:19:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10942:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10983:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10998:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11006:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10994:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10994:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10976:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10976:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10976:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11030:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11041:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11026:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11026:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11050:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11058:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11046:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11046:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11019:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11019:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11019:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11082:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11093:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11078:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11078:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11098:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11071:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11071:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11071:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10846:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10857:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10865:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10873:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10884:4:11",
                "type": ""
              }
            ],
            "src": "10736:375:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11194:167:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11240:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11249:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11252:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11242:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11242:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11242:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11215:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11224:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11211:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11211:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11236:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11207:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11207:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "11204:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11265:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11284:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11278:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11278:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11269:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11325:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "11303:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11303:28:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11303:28:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11340:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11350:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11340:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11160:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11171:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11183:6:11",
                "type": ""
              }
            ],
            "src": "11116:245:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11540:171:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11557:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11568:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11550:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11550:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11550:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11591:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11602:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11587:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11587:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11607:2:11",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11580:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11580:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11580:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11630:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11641:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11626:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11626:18:11"
                      },
                      {
                        "hexValue": "4552433230207472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11646:23:11",
                        "type": "",
                        "value": "ERC20 transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11619:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11619:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11619:51:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11679:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11691:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11702:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11687:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11687:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11679:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11517:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11531:4:11",
                "type": ""
              }
            ],
            "src": "11366:345:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11765:76:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11787:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11789:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11789:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11789:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11781:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11784:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11778:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11778:8:11"
                  },
                  "nodeType": "YulIf",
                  "src": "11775:34:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11818:17:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11830:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11833:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11826:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11826:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11818:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11747:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11750:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11756:4:11",
                "type": ""
              }
            ],
            "src": "11716:125:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12141:451:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12151:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12163:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12174:3:11",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12159:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12159:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12151:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12194:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12205:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12187:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12187:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12187:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12232:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12243:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12228:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12228:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12248:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12221:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12221:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12221:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12275:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12286:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12271:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12271:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12291:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12264:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12264:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12264:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12318:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12329:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12314:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12314:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "12338:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12346:6:11",
                            "type": "",
                            "value": "0xffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12334:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12334:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12307:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12307:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12307:47:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12374:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12385:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12370:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12370:19:11"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12391:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12363:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12363:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12363:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12418:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12429:3:11",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12414:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12414:19:11"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "12435:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12407:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12407:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12407:35:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12451:29:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12469:3:11",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12474:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12465:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12465:11:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12478:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12461:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12461:19:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12455:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12500:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12511:3:11",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12496:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12496:19:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value6",
                            "nodeType": "YulIdentifier",
                            "src": "12521:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12529:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12517:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12517:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12489:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12489:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12489:44:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12553:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12564:3:11",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12549:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12549:19:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value7",
                            "nodeType": "YulIdentifier",
                            "src": "12574:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12582:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12570:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12570:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12542:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12542:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12542:44:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_uint16_t_uint256_t_uint256_t_address_t_address__to_t_bytes32_t_bytes32_t_uint256_t_uint16_t_uint256_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12054:9:11",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "12065:6:11",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "12073:6:11",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "12081:6:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "12089:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12097:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12105:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12113:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12121:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12132:4:11",
                "type": ""
              }
            ],
            "src": "11846:746:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12652:325:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12662:22:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12676:1:11",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12679:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "12672:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12672:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "12662:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12693:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "12723:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12729:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12719:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12719:12:11"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "12697:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12770:31:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12772:27:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "12786:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12794:4:11",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "12782:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12782:17:11"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12772:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12750:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12743:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12743:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "12740:61:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12860:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12881:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12888:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12893:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "12884:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12884:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12874:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12874:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12874:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12925:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12928:4:11",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12918:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12918:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12918:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12953:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12956:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12946:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12946:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12946:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "12816:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "12839:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12847:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "12836:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12836:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "12813:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12813:38:11"
                  },
                  "nodeType": "YulIf",
                  "src": "12810:161:11"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "12632:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "12641:6:11",
                "type": ""
              }
            ],
            "src": "12597:380:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13156:229:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13173:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13184:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13166:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13166:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13166:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13207:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13218:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13203:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13203:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13223:2:11",
                        "type": "",
                        "value": "39"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13196:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13196:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13196:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13246:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13257:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13242:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13242:18:11"
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13262:34:11",
                        "type": "",
                        "value": "refund requires payment in faile"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13235:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13235:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13235:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13317:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13328:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13313:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13313:18:11"
                      },
                      {
                        "hexValue": "64207374617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13333:9:11",
                        "type": "",
                        "value": "d state"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13306:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13306:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13306:37:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13352:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13364:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13375:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13360:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13360:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13352:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13133:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13147:4:11",
                "type": ""
              }
            ],
            "src": "12982:403:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13564:226:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13581:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13592:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13574:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13574:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13574:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13615:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13626:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13611:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13611:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13631:2:11",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13604:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13604:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13604:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13654:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13665:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13650:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13650:18:11"
                      },
                      {
                        "hexValue": "6f6e6c792062757965722063616e206578656375746520746869732066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13670:34:11",
                        "type": "",
                        "value": "only buyer can execute this func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13643:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13643:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13643:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13725:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13736:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13721:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13721:18:11"
                      },
                      {
                        "hexValue": "74696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13741:6:11",
                        "type": "",
                        "value": "tion"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13714:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13714:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13714:34:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13757:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13769:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13780:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13765:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13765:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13757:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13541:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13555:4:11",
                "type": ""
              }
            ],
            "src": "13390:400:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13969:178:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13986:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13997:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13979:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13979:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13979:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14020:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14031:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14016:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14016:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14036:2:11",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14009:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14009:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14009:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14059:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14070:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14055:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14055:18:11"
                      },
                      {
                        "hexValue": "696e636f7272656374206f70657261746f72207369676e6174757265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14075:30:11",
                        "type": "",
                        "value": "incorrect operator signature"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14048:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14048:58:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14048:58:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14115:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14127:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14138:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14123:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14123:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14115:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13946:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13960:4:11",
                "type": ""
              }
            ],
            "src": "13795:352:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14204:116:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14263:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14265:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14265:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14265:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14235:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14228:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14228:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14221:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14221:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14243:1:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14254:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14250:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14250:6:11"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14258:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14246:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14246:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14240:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14240:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14217:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14217:45:11"
                  },
                  "nodeType": "YulIf",
                  "src": "14214:71:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14294:20:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14309:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14312:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14305:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14305:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14294:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14183:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14186:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14192:7:11",
                "type": ""
              }
            ],
            "src": "14152:168:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14371:171:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14402:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14423:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14430:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14435:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "14426:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14426:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14416:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14416:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14416:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14467:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14470:4:11",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14460:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14460:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14460:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14495:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14498:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14488:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14488:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14488:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14391:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14384:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14384:9:11"
                  },
                  "nodeType": "YulIf",
                  "src": "14381:132:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14522:14:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14531:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14534:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14527:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14527:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14522:1:11"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14356:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14359:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "14365:1:11",
                "type": ""
              }
            ],
            "src": "14325:217:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14721:225:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14738:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14749:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14731:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14731:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14731:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14772:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14783:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14768:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14768:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14788:2:11",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14761:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14761:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14761:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14811:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14822:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14807:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14807:18:11"
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f7269",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14827:34:11",
                        "type": "",
                        "value": "only payment operator is authori"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14800:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14800:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14800:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14882:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14893:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14878:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14878:18:11"
                      },
                      {
                        "hexValue": "7a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14898:5:11",
                        "type": "",
                        "value": "zed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14871:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14871:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14871:33:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14913:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14925:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14936:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14921:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14921:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14913:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14698:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14712:4:11",
                "type": ""
              }
            ],
            "src": "14547:399:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15125:239:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15142:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15153:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15135:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15135:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15135:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15176:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15187:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15172:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15172:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15192:2:11",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15165:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15165:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15165:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15215:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15226:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15211:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15211:18:11"
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e2061737365742074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15231:34:11",
                        "type": "",
                        "value": "payment not initially in asset t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15204:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15204:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15204:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15286:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15297:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15282:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15282:18:11"
                      },
                      {
                        "hexValue": "72616e7366657272696e67207374617465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15302:19:11",
                        "type": "",
                        "value": "ransferring state"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15275:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15275:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15275:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15331:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15343:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15354:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15339:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15339:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15331:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15102:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15116:4:11",
                "type": ""
              }
            ],
            "src": "14951:413:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15498:175:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15508:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15520:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15531:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15516:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15516:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15508:4:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15543:29:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15561:3:11",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15566:1:11",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15557:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15557:11:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15570:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15553:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15553:19:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "15547:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15588:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15603:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15611:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15599:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15599:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15581:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15581:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15581:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15635:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15646:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15631:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15631:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "15655:6:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "15663:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15651:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15651:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15624:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15624:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15624:43:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15459:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "15470:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15478:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15489:4:11",
                "type": ""
              }
            ],
            "src": "15369:304:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15779:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15789:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15801:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15812:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15797:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15797:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15789:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15831:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15842:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15824:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15824:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15824:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15748:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15759:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15770:4:11",
                "type": ""
              }
            ],
            "src": "15678:177:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16034:228:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16051:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16062:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16044:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16044:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16044:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16085:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16096:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16081:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16081:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16101:2:11",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16074:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16074:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16074:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16124:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16135:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16120:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16120:18:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16140:34:11",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16113:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16113:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16113:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16195:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16206:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16191:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16191:18:11"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16211:8:11",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16184:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16184:36:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16184:36:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16229:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16241:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16252:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16237:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16237:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16229:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16011:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16025:4:11",
                "type": ""
              }
            ],
            "src": "15860:402:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16441:181:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16458:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16469:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16451:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16451:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16451:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16492:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16503:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16488:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16488:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16508:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16481:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16481:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16481:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16531:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16542:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16527:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16527:18:11"
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16547:33:11",
                        "type": "",
                        "value": "ECDSA: invalid signature length"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16520:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16520:61:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16520:61:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16590:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16602:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16613:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16598:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16598:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16590:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16418:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16432:4:11",
                "type": ""
              }
            ],
            "src": "16267:355:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16801:182:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16818:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16829:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16811:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16811:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16811:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16852:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16863:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16848:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16848:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16868:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16841:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16841:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16841:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16891:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16902:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16887:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16887:18:11"
                      },
                      {
                        "hexValue": "63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16907:34:11",
                        "type": "",
                        "value": "cannot withdraw: balance is zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16880:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16880:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16880:62:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16951:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16963:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16974:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16959:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16959:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16951:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16778:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16792:4:11",
                "type": ""
              }
            ],
            "src": "16627:356:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17117:145:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17127:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17139:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17150:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17135:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17135:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17127:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17169:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17184:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17200:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17205:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "17196:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17196:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17209:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "17192:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17192:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17180:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17180:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17162:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17162:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17162:51:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17233:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17244:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17229:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17229:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17249:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17222:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17222:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17222:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17078:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17089:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17097:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17108:4:11",
                "type": ""
              }
            ],
            "src": "16988:274:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17515:144:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17532:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17541:3:11",
                            "type": "",
                            "value": "240"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17546:4:11",
                            "type": "",
                            "value": "6401"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "17537:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17537:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17525:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17525:27:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17525:27:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17572:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17577:1:11",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17568:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17568:11:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "17581:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17561:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17561:27:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17561:27:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "17608:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17613:2:11",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17604:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17604:12:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17618:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17597:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17597:28:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17597:28:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17634:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17645:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17650:2:11",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17641:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17641:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17634:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17483:3:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17488:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17496:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "17507:3:11",
                "type": ""
              }
            ],
            "src": "17267:392:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17838:224:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17855:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17866:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17848:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17848:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17848:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17889:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17900:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17885:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17885:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17905:2:11",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17878:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17878:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17878:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17928:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17939:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17924:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17924:18:11"
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17944:34:11",
                        "type": "",
                        "value": "ECDSA: invalid signature 's' val"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17917:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17917:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17917:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17999:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18010:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17995:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17995:18:11"
                      },
                      {
                        "hexValue": "7565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18015:4:11",
                        "type": "",
                        "value": "ue"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17988:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17988:32:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17988:32:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18029:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18041:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18052:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18037:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18037:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18029:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17815:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17829:4:11",
                "type": ""
              }
            ],
            "src": "17664:398:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18241:224:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18258:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18269:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18251:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18251:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18251:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18292:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18303:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18288:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18288:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18308:2:11",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18281:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18281:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18281:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18331:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18342:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18327:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18327:18:11"
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265202776272076616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18347:34:11",
                        "type": "",
                        "value": "ECDSA: invalid signature 'v' val"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18320:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18320:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18320:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18402:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18413:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18398:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18398:18:11"
                      },
                      {
                        "hexValue": "7565",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18418:4:11",
                        "type": "",
                        "value": "ue"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18391:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18391:32:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18391:32:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18432:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18444:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18455:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18440:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18440:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18432:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18218:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18232:4:11",
                "type": ""
              }
            ],
            "src": "18067:398:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18651:217:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18661:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18673:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18684:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18669:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18669:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18661:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18704:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18715:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18697:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18697:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18697:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18742:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18753:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18738:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18738:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18762:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18770:4:11",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18758:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18758:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18731:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18731:45:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18731:45:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18796:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18807:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18792:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18792:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "18812:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18785:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18785:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18785:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18839:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18850:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18835:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18835:18:11"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "18855:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18828:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18828:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18828:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18596:9:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "18607:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18615:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18623:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18631:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18642:4:11",
                "type": ""
              }
            ],
            "src": "18470:398:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19047:174:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19064:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19075:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19057:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19057:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19057:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19098:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19109:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19094:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19094:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19114:2:11",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19087:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19087:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19087:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19137:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19148:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19133:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19133:18:11"
                      },
                      {
                        "hexValue": "45434453413a20696e76616c6964207369676e6174757265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19153:26:11",
                        "type": "",
                        "value": "ECDSA: invalid signature"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19126:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19126:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19126:54:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19189:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19201:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19212:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19197:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19197:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19189:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19024:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19038:4:11",
                "type": ""
              }
            ],
            "src": "18873:348:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19439:276:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19449:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19461:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19472:3:11",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19457:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19457:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19449:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19492:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "19503:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19485:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19485:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19485:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19530:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19541:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19526:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19526:18:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "19546:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19519:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19519:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19519:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19573:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19584:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19569:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19569:18:11"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "19589:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19562:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19562:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19562:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19616:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19627:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19612:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19612:18:11"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "19632:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19605:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19605:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19605:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19659:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19670:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19655:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19655:19:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "19680:6:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19696:3:11",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19701:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "19692:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19692:11:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19705:1:11",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "19688:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19688:19:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "19676:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19676:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19648:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19648:61:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19648:61:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19376:9:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "19387:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "19395:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "19403:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "19411:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "19419:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19430:4:11",
                "type": ""
              }
            ],
            "src": "19226:489:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_struct_PaymentInput_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 224) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_struct$_PaymentInput_$707_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_struct_PaymentInput_calldata(headStart, dataEnd)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_PaymentInput_$707_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        value0 := abi_decode_struct_PaymentInput_calldata(headStart, dataEnd)\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_struct$_PaymentInput_$707_calldata_ptrt_bytes_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := abi_decode_struct_PaymentInput_calldata(headStart, dataEnd)\n        let offset := calldataload(add(headStart, 224))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        value3 := abi_decode_address(add(headStart, 256))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_States(value, pos)\n    {\n        if iszero(lt(value, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_States_$765__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_States(value0, headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_Payment_$783_memory_ptr__to_t_struct$_Payment_$783_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_enum_States(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 0x20), and(memberValue0, _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), _1))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), and(mload(add(value0, 0xc0)), 0xffff))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n    }\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"fee cannot be larger than 100 pe\")\n        mstore(add(headStart, 96), \"rcent\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"payment in incorrect curent stat\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"payment deadline expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"seller not registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"not enough funds available for t\")\n        mstore(add(headStart, 96), \"his buyer\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"operator not authorized for this\")\n        mstore(add(headStart, 96), \" universeId\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"incorrect buyer signature\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20 transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint256_t_uint16_t_uint256_t_uint256_t_address_t_address__to_t_bytes32_t_bytes32_t_uint256_t_uint16_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xffff))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 192), and(value6, _1))\n        mstore(add(headStart, 224), and(value7, _1))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"refund requires payment in faile\")\n        mstore(add(headStart, 96), \"d state\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"only buyer can execute this func\")\n        mstore(add(headStart, 96), \"tion\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"incorrect operator signature\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"only payment operator is authori\")\n        mstore(add(headStart, 96), \"zed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"payment not initially in asset t\")\n        mstore(add(headStart, 96), \"ransferring state\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"cannot withdraw: balance is zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 'v' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "2091:16415:10:-:0;;;2483:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2339:542:4;;;;;;;;;;;;;-1:-1:-1;;;2339:542:4;;;;;;;;;;;;;;;;-1:-1:-1;;;2339:542:4;;;867:17:0;887:12;:10;;;:12;;:::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:0;-1:-1:-1;;;;;909:18:0;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:0;942:43;;909:6;;942:43;-1:-1:-1;910:16:9;:29;;-1:-1:-1;;;;;;910:29:9;929:10;910:29;;;;;;954:27;;1551:51:11;;;954:27:9;;1539:2:11;1524:18;954:27:9;;;;;;;873:21:6;:34;;-1:-1:-1;;;;;;873:34:6;897:10;873:34;;;;;;922:32;;1551:51:11;;;922:32:6;;1539:2:11;1524:18;922:32:6;;;;;;;2425:22:4;;;;;;;2481:25;;;;;;;;;2640;;;;2675:31;;;;2735:13;2716:32;;;;-1:-1:-1;3399:159:4;;2535:95;3399:159;;;1872:25:11;;;1913:18;;;1906:34;;;;1956:18;;;1949:34;;;;1999:18;;;;1992:34;;;;3539:4:4;2042:19:11;;;2035:61;3399:159:4;;;;;;;;;;1844:19:11;;;;3399:159:4;;;3376:192;;;;;;2758:85;;2853:21;;2561:6:10;:21;;-1:-1:-1;;;;;;2561:21:10;-1:-1:-1;;;;;2561:21:10;;;;;2592:38;;;;:17;;:38;;;;;:::i;:::-;-1:-1:-1;;2657:7:10;2640:14;:24;-1:-1:-1;2674:29:10;:36;;-1:-1:-1;;2674:36:10;2706:4;2674:36;;;2091:16415;;586:96:2;665:10;;586:96::o;2091:16415:10:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2091:16415:10;;;-1:-1:-1;2091:16415:10;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:11;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1254;235:6;243;296:2;284:9;275:7;271:23;267:32;264:52;;;312:1;309;302:12;264:52;338:16;;-1:-1:-1;;;;;383:31:11;;373:42;;363:70;;429:1;426;419:12;363:70;476:2;507:18;;;501:25;452:5;;-1:-1:-1;476:2:11;-1:-1:-1;;;;;575:14:11;;;572:34;;;602:1;599;592:12;572:34;640:6;629:9;625:22;615:32;;685:7;678:4;674:2;670:13;666:27;656:55;;707:1;704;697:12;656:55;736:2;730:9;758:2;754;751:10;748:36;;;764:18;;:::i;:::-;839:2;833:9;807:2;893:13;;-1:-1:-1;;889:22:11;;;913:2;885:31;881:40;869:53;;;937:18;;;957:22;;;934:46;931:72;;;983:18;;:::i;:::-;1023:10;1019:2;1012:22;1058:2;1050:6;1043:18;1098:7;1093:2;1088;1084;1080:11;1076:20;1073:33;1070:53;;;1119:1;1116;1109:12;1070:53;1141:1;1132:10;;1151:129;1165:2;1162:1;1159:9;1151:129;;;1253:10;;;1249:19;;1243:26;1222:14;;;1218:23;;1211:59;1176:10;;;;1151:129;;;1298:2;1295:1;1292:9;1289:80;;;1357:1;1352:2;1347;1339:6;1335:15;1331:24;1324:35;1289:80;1388:6;1378:16;;;;;;;;146:1254;;;;;:::o;2107:380::-;2186:1;2182:12;;;;2229;;;2250:61;;2304:4;2296:6;2292:17;2282:27;;2250:61;2357:2;2349:6;2346:14;2326:18;2323:38;2320:161;;;2403:10;2398:3;2394:20;2391:1;2384:31;2438:4;2435:1;2428:15;2466:4;2463:1;2456:15;2320:161;;2107:380;;;:::o;:::-;2091:16415:10;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "2091:16415:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17309:634;;;;;;:::i;:::-;;:::i;:::-;;13050:124;;;;;;:::i;:::-;;:::i;:::-;;;948:25:11;;;936:2;921:18;13050:124:10;;;;;;;;1372:186:9;;;;;;:::i;:::-;;:::i;4493:1242:10:-;;;;;;:::i;:::-;;:::i;3664:128::-;;;:::i;807:620:5:-;;;;;;:::i;:::-;;:::i;:::-;;;2863:14:11;;2856:22;2838:41;;2826:2;2811:18;807:620:5;2698:187:11;3405:156:10;;;;;;:::i;:::-;;:::i;15043:107::-;;;:::i;:::-;;;;;;;:::i;11872:122::-;11958:29;;;;11872:122;;10381:247;;;;;;:::i;:::-;;:::i;6439:1263::-;;;;;;:::i;:::-;;:::i;18267:237::-;;;;;;:::i;:::-;;:::i;8998:384::-;;;;;;:::i;:::-;;:::i;1405:226:6:-;;;;;;:::i;:::-;;:::i;16799:356:10:-;;;;;;:::i;:::-;;:::i;:::-;;;;4732:25:11;;;4788:2;4773:18;;4766:34;;;;4705:18;16799:356:10;4558:248:11;14255:310:10;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10754:57::-;;;:::i;13416:134::-;;;;;;:::i;:::-;;:::i;12748:105::-;;;;;;:::i;:::-;-1:-1:-1;;;;;12830:16:10;12804:7;12830:16;;;:10;:16;;;;;;;12748:105;1700:145:0;;;:::i;9795:215:10:-;;;;;;:::i;:::-;;:::i;12431:79::-;12497:6;;-1:-1:-1;;;;;12497:6:10;12431:79;;;-1:-1:-1;;;;;5552:32:11;;;5534:51;;5522:2;5507:18;12431:79:10;5388:203:11;12180:120:10;;;;;;:::i;:::-;-1:-1:-1;;;;;12268:25:10;12245:4;12268:25;;;:19;:25;;;;;;;;;12180:120;1149:217:9;;;;;;:::i;:::-;;:::i;1669:257::-;;;;;;:::i;:::-;;:::i;1564:99::-;1640:16;;-1:-1:-1;;;;;1640:16:9;1564:99;;1152:247:6;;;;;;:::i;:::-;;:::i;1068:85:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;1068:85;;3053:137:10;;;;;;:::i;:::-;;:::i;15512:174::-;;;;;;:::i;:::-;;:::i;967:179:6:-;;;;;;:::i;:::-;;:::i;7976:648:10:-;;;;;;:::i;:::-;;:::i;15975:355::-;;;;;;:::i;:::-;;:::i;14794:95::-;14868:14;;14794:95;;1752:331:6;;;;;;:::i;:::-;;:::i;13740:151:10:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1637:109:6:-;1718:21;;-1:-1:-1;;;;;1718:21:6;1637:109;;1994:240:0;;;;;;:::i;:::-;;:::i;994:149:9:-;;;;;;:::i;:::-;;:::i;17309:634:10:-;17408:5;17394:10;;;;;;;;:::i;:::-;:19;;;;17386:69;;;;-1:-1:-1;;;17386:69:10;;7157:2:11;17386:69:10;;;7139:21:11;7196:2;7176:18;;;7169:30;7235:34;7215:18;;;7208:62;-1:-1:-1;;;7286:18:11;;;7279:35;7331:19;;17386:69:10;;;;;;;;;17517:17;17486:27;17499:13;;17486:12;:27::i;:::-;:48;;;;;;;;:::i;:::-;;17465:128;;;;-1:-1:-1;;;17465:128:10;;7563:2:11;17465:128:10;;;7545:21:11;7602:2;7582:18;;;7575:30;7641:34;7621:18;;;7614:62;-1:-1:-1;;;7692:18:11;;;7685:31;7733:19;;17465:128:10;7361:397:11;17465:128:10;17630:3;:14;;;17611:15;:33;;17603:70;;;;-1:-1:-1;;;17603:70:10;;7965:2:11;17603:70:10;;;7947:21:11;8004:2;7984:18;;;7977:30;8043:26;8023:18;;;8016:54;8087:18;;17603:70:10;7763:348:11;17603:70:10;17687:29;;;;17683:112;;;17738:19;:31;17758:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17738:31:10;;;;;;;;;;;;-1:-1:-1;17738:31:10;;;;17730:65;;;;-1:-1:-1;;;17730:65:10;;8318:2:11;17730:65:10;;;8300:21:11;8357:2;8337:18;;;8330:30;-1:-1:-1;;;8376:18:11;;;8369:51;8437:18;;17730:65:10;8116:345:11;17730:65:10;17826:43;17847:9;;;;;;;;:::i;:::-;17858:3;:10;;;17826:20;:43::i;:::-;17805:131;;;;-1:-1:-1;;;17805:131:10;;8668:2:11;17805:131:10;;;8650:21:11;8707:2;8687:18;;;8680:30;8746:34;8726:18;;;8719:62;-1:-1:-1;;;8797:18:11;;;8790:39;8846:19;;17805:131:10;8466:405:11;17805:131:10;17309:634;:::o;13050:124::-;13144:6;;13137:30;;-1:-1:-1;;;13137:30:10;;-1:-1:-1;;;;;5552:32:11;;;13137:30:10;;;5534:51:11;13111:7:10;;13144:6;;13137:24;;5507:18:11;;13137:30:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13130:37;13050:124;-1:-1:-1;;13050:124:10:o;1372:186:9:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1460:30:9::1;::::0;;;:18:::1;:30;::::0;;;;;;;;1453:37;;-1:-1:-1;;;;;;1453:37:9::1;::::0;;-1:-1:-1;1534:16:9;1505:46;;9600:25:11;;;-1:-1:-1;;;;;1534:16:9;;::::1;9641:18:11::0;;;9634:60;;;;1505:46:9::1;::::0;9573:18:11;1505:46:9::1;;;;;;;;1372:186:::0;:::o;4493:1242:10:-;4669:10;4633:32;4650:14;;;;4633:16;:32::i;:::-;-1:-1:-1;;;;;4633:46:10;;4612:136;;;;-1:-1:-1;;;4612:136:10;;9907:2:11;4612:136:10;;;9889:21:11;9946:2;9926:18;;;9919:30;9985:34;9965:18;;;9958:62;-1:-1:-1;;;10036:18:11;;;10029:41;10087:19;;4612:136:10;9705:407:11;4612:136:10;4793:13;4762:27;4775:13;;4762:12;:27::i;:::-;:44;;;;;;;;:::i;:::-;;4758:84;;;4820:22;4828:13;;4820:7;:22::i;:::-;4852:23;4871:3;4852:18;:23::i;:::-;4906:38;4913:3;4918:14;;4934:9;;;;;;;;:::i;4906:38::-;4885:110;;;;-1:-1:-1;;;4885:110:10;;10319:2:11;4885:110:10;;;10301:21:11;10358:2;10338:18;;;10331:30;10397:27;10377:18;;;10370:55;10442:18;;4885:110:10;10117:349:11;4885:110:10;5032:271;;;;;;;;;;5053:24;5032:271;;;;5091:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5032:271:10;;;;;5114:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5032:271:10;;;5138:10;5032:271;;;;;;5162:37;5184:14;;;;5162:21;:37::i;:::-;-1:-1:-1;;;;;5032:271:10;;;;;5231:14;;5213:15;:32;;;;:::i;:::-;5032:271;;;;5259:10;;;;;;;;:::i;:::-;5032:271;;;;;5283:10;;;;5032:271;;;;;;;5015:13;;-1:-1:-1;5005:24:10;;;:9;:24;;;;;;:298;;;;:24;;-1:-1:-1;;5005:298:10;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5005:298:10;;;;;;-1:-1:-1;;;;;5005:298:10;;;;;-1:-1:-1;;;;;;5005:298:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5005:298:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5005:298:10;;;;;;;;;;;;;;;;;;;;;;;;;;5354:76;;5387:9;;;;;;;;;:::i;:::-;5410:3;:10;;;5354:19;:76::i;:::-;5313:117;;-1:-1:-1;5313:117:10;-1:-1:-1;5444:12:10;;5440:186;;5504:6;;-1:-1:-1;;;;;5504:6:10;5497:27;5525:9;;;;;;;;:::i;:::-;5497:63;;-1:-1:-1;;;;;;5497:63:10;;;;;;;-1:-1:-1;;;;;10994:15:11;;;5497:63:10;;;10976:34:11;5544:4:10;11026:18:11;;;11019:43;11078:18;;;11071:34;;;10911:18;;5497:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5472:143;;;;-1:-1:-1;;;5472:143:10;;11568:2:11;5472:143:10;;;11550:21:11;11607:2;11587:18;;;11580:30;-1:-1:-1;;;11626:18:11;;;11619:51;11687:18;;5472:143:10;11366:345:11;5472:143:10;5660:10;5635;:21;5646:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5635:21:10;-1:-1:-1;;;;;5635:21:10;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;5717:10:10;;-1:-1:-1;5717:10:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;5685:43:10;5706:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5685:43:10;5691:3;:13;;;5685:43;;;;;;;;;;4602:1133;;4493:1242;;;:::o;3664:128::-;3731:10;3711:31;;;;:19;:31;;;;;;:38;;-1:-1:-1;;3711:38:10;3745:4;3711:38;;;3764:21;;;3711:31;3764:21;3664:128::o;807:620:5:-;943:4;959:23;985:393;1368:9;;985:393;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;985:374:5;;-1:-1:-1;578:162:5;;-1:-1:-1;;1105:13:5;;1140:10;;;;1172;;;;;;;;:::i;:::-;1204:3;:14;;;1240:3;:14;;;1276:3;:9;;;;;;;;;;:::i;:::-;1307:3;:10;;;;;;;;;;:::i;:::-;1042:293;;;;;;12187:25:11;;;;12228:18;;12221:34;;;;12271:18;;;12264:34;;;;12346:6;12334:19;;;12314:18;;;12307:47;12370:19;;;12363:35;12414:19;;;12407:35;-1:-1:-1;;;;;12517:15:11;;;12496:19;;;12489:44;12570:15;12549:19;;;12542:44;12159:19;;1042:293:5;;;;;;;;;;;;1015:334;;;;;;985:16;:374::i;:::-;:382;;:393::i;:::-;-1:-1:-1;;;;;1395:25:5;;;;;;;-1:-1:-1;;807:620:5;;;;;;:::o;3405:156:10:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;3512:29:10::1;:42:::0;;-1:-1:-1;;3512:42:10::1;::::0;::::1;;::::0;;;::::1;::::0;;3405:156::o;15043:107::-;15094:13;15126:17;15119:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15043:107;:::o;10381:247::-;10494:13;10467:23;10480:9;10467:12;:23::i;:::-;:40;;;;;;;;:::i;:::-;;10446:126;;;;-1:-1:-1;;;10446:126:10;;;;;;;:::i;:::-;10582:18;10590:9;10582:7;:18::i;:::-;10610:11;:9;:11::i;6439:1263::-;6579:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6565:23:10;:10;-1:-1:-1;;;;;6565:23:10;;6544:106;;;;-1:-1:-1;;;6544:106:10;;13592:2:11;6544:106:10;;;13574:21:11;13631:2;13611:18;;;13604:30;13670:34;13650:18;;;13643:62;-1:-1:-1;;;13721:18:11;;;13714:34;13765:19;;6544:106:10;13390:400:11;6544:106:10;6695:13;6664:27;6677:13;;6664:12;:27::i;:::-;:44;;;;;;;;:::i;:::-;;6660:84;;;6722:22;6730:13;;6722:7;:22::i;:::-;6754:23;6773:3;6754:18;:23::i;:::-;6787:16;6806:32;6823:3;:14;;;6806:16;:32::i;:::-;6787:51;;6869:40;6876:3;6881:17;;6900:8;6869:6;:40::i;:::-;6848:115;;;;-1:-1:-1;;;6848:115:10;;13997:2:11;6848:115:10;;;13979:21:11;14036:2;14016:18;;;14009:30;14075;14055:18;;;14048:58;14123:18;;6848:115:10;13795:352:11;6848:115:10;7001:269;;;;;;;;;;7022:24;7001:269;;;;7060:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7001:269:10;;;;;7083:10;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7001:269:10;;;;;7107:8;-1:-1:-1;;;;;7001:269:10;;;;;7129:37;7151:3;:14;;;7129:21;:37::i;:::-;-1:-1:-1;;;;;7001:269:10;;;;;7198:14;;7180:15;:32;;;;:::i;:::-;7001:269;;;;7226:10;;;;;;;;:::i;:::-;7001:269;;;;;7250:10;;;;7001:269;;;;;;;6984:13;;-1:-1:-1;6974:24:10;;;:9;:24;;;;;;:296;;;;:24;;-1:-1:-1;;6974:296:10;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;6974:296:10;;;;;;-1:-1:-1;;;;;6974:296:10;;;;;-1:-1:-1;;;;;;6974:296:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6974:296:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6974:296:10;;;;;;;;;;;;;;;;;;;;;;;;;;7321:76;;7354:9;;;;;;;;;:::i;:::-;7377:3;:10;;;7321:19;:76::i;:::-;7280:117;;-1:-1:-1;7280:117:10;-1:-1:-1;7411:12:10;;7407:186;;7471:6;;-1:-1:-1;;;;;7471:6:10;7464:27;7492:9;;;;;;;;:::i;:::-;7464:63;;-1:-1:-1;;;;;;7464:63:10;;;;;;;-1:-1:-1;;;;;10994:15:11;;;7464:63:10;;;10976:34:11;7511:4:10;11026:18:11;;;11019:43;11078:18;;;11071:34;;;10911:18;;7464:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7439:143;;;;-1:-1:-1;;;7439:143:10;;11568:2:11;7439:143:10;;;11550:21:11;11607:2;11587:18;;;11580:30;-1:-1:-1;;;11626:18:11;;;11619:51;11687:18;;7439:143:10;11366:345:11;7439:143:10;7627:10;7602;:21;7613:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7602:21:10;-1:-1:-1;;;;;7602:21:10;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;7684:10:10;;-1:-1:-1;7684:10:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;7652:43:10;7673:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7652:43:10;7658:3;:13;;;7652:43;;;;;;;;;;6534:1168;;;6439:1263;;;:::o;18267:237::-;18370:7;;18433:5;18414:15;18423:6;18414;:15;:::i;:::-;18413:25;;;;:::i;:::-;18393:45;;18469:6;18456:9;:19;;18455:42;;18491:6;18455:42;;;18479:9;18455:42;18448:49;18267:237;-1:-1:-1;;;;18267:237:10:o;8998:384::-;9100:20;;;;:9;:20;;;;;:29;;;-1:-1:-1;;;;;9100:29:10;9086:10;:43;9065:125;;;;-1:-1:-1;;;9065:125:10;;;;;;;:::i;:::-;9249:23;9262:9;9249:12;:23::i;:::-;9221:51;;;;;;;;:::i;:::-;:24;:51;9200:147;;;;-1:-1:-1;;;9200:147:10;;;;;;;:::i;:::-;9357:18;9365:9;9357:7;:18::i;1405:226:6:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1518:35:6::1;::::0;;;:23:::1;:35;::::0;;;;;;;;1511:42;;-1:-1:-1;;;;;;1511:42:6::1;::::0;;1602:21:::1;::::0;1568:56;;9600:25:11;;;-1:-1:-1;;;;;1602:21:6;;::::1;9641:18:11::0;;;9634:60;;;;1568:56:6::1;::::0;9573:18:11;1568:56:6::1;9426:274:11::0;16799:356:10;-1:-1:-1;;;;;16984:17:10;;16904:21;16984:17;;;:10;:17;;;;;;16904:21;;17025;;;17024:47;;17065:6;17024:47;;;17050:12;17024:47;17011:60;;17107:12;17098:6;:21;17097:51;;17147:1;17097:51;;;17123:21;17132:12;17123:6;:21;:::i;:::-;17081:67;;16951:204;16799:356;;;;;:::o;14255:310::-;14317:6;14350:20;;;:9;:20;;;;;:26;;;;14403:5;:33;;;;;;;;:::i;:::-;;:102;;;;-1:-1:-1;14470:20:10;;;;:9;:20;;;;;:35;;;14452:15;:53;14403:102;14386:150;;;-1:-1:-1;14523:13:10;;14255:310;-1:-1:-1;;14255:310:10:o;10754:57::-;10793:11;:9;:11::i;:::-;10754:57::o;13416:134::-;13504:6;;13497:46;;-1:-1:-1;;;13497:46:10;;-1:-1:-1;;;;;15599:15:11;;;13497:46:10;;;15581:34:11;13537:4:10;15631:18:11;;;15624:43;13471:7:10;;13504:6;;13497:24;;15516:18:11;;13497:46:10;15369:304:11;1700:145:0;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:0;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:0::1;::::0;;1700:145::o;9795:215:10:-;9897:13;9870:23;9883:9;9870:12;:23::i;:::-;:40;;;;;;;;:::i;:::-;;9849:126;;;;-1:-1:-1;;;9849:126:10;;;;;;;:::i;1149:217:9:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1265:30:9::1;::::0;;;:18:::1;:30;::::0;;;;;;;;:41;;-1:-1:-1;;;;;;1265:41:9::1;-1:-1:-1::0;;;;;1265:41:9;::::1;::::0;;::::1;::::0;;;1321:38;;9600:25:11;;;9641:18;;;9634:60;1321:38:9::1;::::0;9573:18:11;1321:38:9::1;;;;;;;;1149:217:::0;;:::o;1669:257::-;1760:7;1808:30;;;:18;:30;;;;;;-1:-1:-1;;;;;1808:30:9;1855:28;;:64;;1905:14;1855:64;;;1886:16;;-1:-1:-1;;;;;1886:16:9;1855:64;1848:71;1669:257;-1:-1:-1;;;1669:257:9:o;1152:247:6:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1278:35:6::1;::::0;;;:23:::1;:35;::::0;;;;;;;;:51;;-1:-1:-1;;;;;;1278:51:6::1;-1:-1:-1::0;;;;;1278:51:6;::::1;::::0;;::::1;::::0;;;1344:48;;9600:25:11;;;9641:18;;;9634:60;1344:48:6::1;::::0;9573:18:11;1344:48:6::1;9426:274:11::0;3053:137:10;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;3124:14:10::1;:23:::0;;;3162:21:::1;::::0;948:25:11;;;3162:21:10::1;::::0;936:2:11;921:18;3162:21:10::1;802:177:11::0;15512:174:10;15618:4;15673:6;15645:24;15663:5;15645:17;:24::i;:::-;:34;;;15512:174;-1:-1:-1;;;15512:174:10:o;967:179:6:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1052:21:6::1;:37:::0;;-1:-1:-1;;;;;;1052:37:6::1;-1:-1:-1::0;;;;;1052:37:6;::::1;::::0;;::::1;::::0;;;1104:35:::1;::::0;5534:51:11;;;1104:35:6::1;::::0;5522:2:11;5507:18;1104:35:6::1;5388:203:11::0;7976:648:10;8044:16;8063:20;;;:9;:20;;;;;;8044:39;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;8044:39:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8128:10;;;;;;-1:-1:-1;8114:24:10;:10;:24;8093:106;;;;-1:-1:-1;;;8093:106:10;;;;;;;:::i;:::-;8258:23;8271:9;8258:12;:23::i;:::-;8230:51;;;;;;;;:::i;:::-;:24;:51;8209:147;;;;-1:-1:-1;;;8209:147:10;;;;;;;:::i;:::-;8366:20;;;;:9;:20;;;;;:40;;-1:-1:-1;;8366:40:10;8395:11;8366:40;;;8453:8;;;;8471;;;;8436:45;;8453:8;8463:17;;8436:16;:45::i;:::-;8416:65;;8527:9;8516:1;:8;;;:20;;;;:::i;:::-;8502:8;;;;;-1:-1:-1;;;;;8491:20:10;;;;;:10;:20;;;;;:46;;:20;;;:46;;;;;:::i;:::-;;;;-1:-1:-1;;8558:15:10;;;;-1:-1:-1;;;;;8547:27:10;;;;;:10;:27;;;;;:40;;8578:9;;8547:27;:40;;8578:9;;8547:40;:::i;:::-;;;;-1:-1:-1;;8602:15:10;;948:25:11;;;8602:15:10;;936:2:11;921:18;8602:15:10;;;;;;;8034:590;;7976:648;:::o;15975:355::-;16038:7;16057:16;16076;16086:5;16076:9;:16::i;:::-;16132:6;;16125:31;;-1:-1:-1;;;16125:31:10;;-1:-1:-1;;;;;5552:32:11;;;16125:31:10;;;5534:51:11;16057:35:10;;-1:-1:-1;16102:20:10;;16132:6;;;;16125:24;;5507:18:11;;16125:31:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16102:54;;16166:25;16206:12;16195:8;:23;16194:75;;16257:12;16194:75;;;16234:8;16194:75;-1:-1:-1;;;;;16286:17:10;;;;;;:10;:17;;;;;;16166:103;;-1:-1:-1;16286:37:10;;16166:103;;16286:37;:::i;:::-;16279:44;15975:355;-1:-1:-1;;;;;15975:355:10:o;1752:331:6:-;1848:7;1901:35;;;:23;:35;;;;;;-1:-1:-1;;;;;1901:35:6;1965:33;;:111;;2057:19;1965:111;;;2017:21;;-1:-1:-1;;;;;2017:21:6;1946:130;1752:331;-1:-1:-1;;;1752:331:6:o;13740:151:10:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13864:20:10;;;;:9;:20;;;;;;;13857:27;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;13857:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13740:151;-1:-1:-1;;13740:151:10:o;1994:240:0:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:0;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:0;;16062:2:11;2074:73:0::1;::::0;::::1;16044:21:11::0;16101:2;16081:18;;;16074:30;16140:34;16120:18;;;16113:62;-1:-1:-1;;;16191:18:11;;;16184:36;16237:19;;2074:73:0::1;15860:402:11::0;2074:73:0::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:0;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:0::1;-1:-1:-1::0;;;;;2210:17:0;;;::::1;::::0;;;::::1;::::0;;1994:240::o;994:149:9:-;1114:7:0;1140:6;-1:-1:-1;;;;;1140:6:0;665:10:2;1280:23:0;1272:68;;;;-1:-1:-1;;;1272:68:0;;;;;;;:::i;:::-;1069:16:9::1;:27:::0;;-1:-1:-1;;;;;;1069:27:9::1;-1:-1:-1::0;;;;;1069:27:9;::::1;::::0;;::::1;::::0;;;1111:25:::1;::::0;5534:51:11;;;1111:25:9::1;::::0;5522:2:11;5507:18;1111:25:9::1;5388:203:11::0;10982:226:10;11036:16;11055:20;;;:9;:20;;;;;;11036:39;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;11036:39:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11108:8;;;;11096:7;;;;11085:19;;;11036:39;11085:19;;;:10;:19;;;;;;:31;;11036:39;;-1:-1:-1;11108:8:10;;11085:31;;11108:8;;11085:31;:::i;:::-;;;;-1:-1:-1;;11133:20:10;;;;:9;:20;;;;;;;;11126:27;;-1:-1:-1;;;;;;11126:27:10;;;-1:-1:-1;11126:27:10;;;;-1:-1:-1;;;;;;11126:27:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11126:27:10;;;;;;;;11193:7;;;;11168:33;;-1:-1:-1;;;;;11168:33:10;;;;11133:20;;11168:33;;11133:20;11168:33;11026:182;10982:226;:::o;4200:165:4:-;4277:7;4303:55;4325:20;:18;:20::i;:::-;4347:10;5093:57:3;;-1:-1:-1;;;5093:57:3;;;17525:27:11;17568:11;;;17561:27;;;17604:12;;;17597:28;;;5057:7:3;;17641:12:11;;5093:57:3;;;;;;;;;;;;5083:68;;;;;;5076:75;;4964:194;;;;;1064:1459;1142:7;1217:9;1236;1255:7;1470:9;:16;1490:2;1470:22;1466:1011;;;-1:-1:-1;;;1752:4:3;1737:20;;1731:27;1801:4;1786:20;;1780:27;1858:4;1843:20;;1837:27;1834:1;1829:36;1466:1011;;;1899:9;:16;1919:2;1899:22;1895:582;;;-1:-1:-1;;;2186:4:3;2171:20;;2165:27;2235:4;2220:20;;2214:27;;-1:-1:-1;;;;;2263:75:3;;;2368:3;2364:12;2378:2;2360:21;1895:582;;;2425:41;;-1:-1:-1;;;2425:41:3;;16469:2:11;2425:41:3;;;16451:21:11;16508:2;16488:18;;;16481:30;16547:33;16527:18;;;16520:61;16598:18;;2425:41:3;16267:355:11;1895:582:3;2494:22;2502:4;2508:1;2511;2514;2494:7;:22::i;:::-;2487:29;1064:1459;-1:-1:-1;;;;;;1064:1459:3:o;11450:282:10:-;11517:10;11489:14;11506:22;;;:10;:22;;;;;;11546:10;11538:55;;;;-1:-1:-1;;;11538:55:10;;16829:2:11;11538:55:10;;;16811:21:11;;;16848:18;;;16841:30;16907:34;16887:18;;;16880:62;16959:18;;11538:55:10;16627:356:11;11538:55:10;11614:10;11628:1;11603:22;;;:10;:22;;;;;;:26;;;;11646:6;;11639:43;;-1:-1:-1;;;11639:43:10;;;;;17162:51:11;;;;17229:18;;;17222:34;;;-1:-1:-1;;;;;11646:6:10;;11639:23;;17135:18:11;;11639:43:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11697:28:10;;948:25:11;;;11706:10:10;;11697:28;;936:2:11;921:18;11697:28:10;;;;;;;11479:253;11450:282::o;2967:275:4:-;3020:7;3060:16;3043:13;:33;3039:197;;;-1:-1:-1;3099:24:4;;2967:275::o;3039:197::-;-1:-1:-1;3399:159:4;;;3183:10;3399:159;;;;19485:25:11;;;;3195:12:4;19526:18:11;;;19519:34;3209:15:4;19569:18:11;;;19562:34;3500:13:4;19612:18:11;;;19605:34;3539:4:4;19655:19:11;;;;19648:61;;;;3399:159:4;;;;;;;;;;19457:19:11;;;;3399:159:4;;;3376:192;;;;;;2967:275::o;2656:1414:3:-;2741:7;3656:66;3642:80;;;3634:127;;;;-1:-1:-1;;;3634:127:3;;17866:2:11;3634:127:3;;;17848:21:11;17905:2;17885:18;;;17878:30;17944:34;17924:18;;;17917:62;-1:-1:-1;;;17995:18:11;;;17988:32;18037:19;;3634:127:3;17664:398:11;3634:127:3;3779:1;:7;;3784:2;3779:7;:18;;;;3790:1;:7;;3795:2;3790:7;3779:18;3771:65;;;;-1:-1:-1;;;3771:65:3;;18269:2:11;3771:65:3;;;18251:21:11;18308:2;18288:18;;;18281:30;18347:34;18327:18;;;18320:62;-1:-1:-1;;;18398:18:11;;;18391:32;18440:19;;3771:65:3;18067:398:11;3771:65:3;3948:24;;;3931:14;3948:24;;;;;;;;;18697:25:11;;;18770:4;18758:17;;18738:18;;;18731:45;;;;18792:18;;;18785:34;;;18835:18;;;18828:34;;;3948:24:3;;18669:19:11;;3948:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3948:24:3;;-1:-1:-1;;3948:24:3;;;-1:-1:-1;;;;;;;3990:20:3;;3982:57;;;;-1:-1:-1;;;3982:57:3;;19075:2:11;3982:57:3;;;19057:21:11;19114:2;19094:18;;;19087:30;19153:26;19133:18;;;19126:54;19197:18;;3982:57:3;18873:348:11;14:161;79:5;124:3;115:6;110:3;106:16;102:26;99:46;;;141:1;138;131:12;99:46;-1:-1:-1;163:6:11;14:161;-1:-1:-1;14:161:11:o;180:248::-;270:6;323:3;311:9;302:7;298:23;294:33;291:53;;;340:1;337;330:12;291:53;363:59;414:7;403:9;363:59;:::i;433:173::-;501:20;;-1:-1:-1;;;;;550:31:11;;540:42;;530:70;;596:1;593;586:12;530:70;433:173;;;:::o;611:186::-;670:6;723:2;711:9;702:7;698:23;694:32;691:52;;;739:1;736;729:12;691:52;762:29;781:9;762:29;:::i;984:180::-;1043:6;1096:2;1084:9;1075:7;1071:23;1067:32;1064:52;;;1112:1;1109;1102:12;1064:52;-1:-1:-1;1135:23:11;;984:180;-1:-1:-1;984:180:11:o;1169:347::-;1220:8;1230:6;1284:3;1277:4;1269:6;1265:17;1261:27;1251:55;;1302:1;1299;1292:12;1251:55;-1:-1:-1;1325:20:11;;1368:18;1357:30;;1354:50;;;1400:1;1397;1390:12;1354:50;1437:4;1429:6;1425:17;1413:29;;1489:3;1482:4;1473:6;1465;1461:19;1457:30;1454:39;1451:59;;;1506:1;1503;1496:12;1451:59;1169:347;;;;;:::o;1521:546::-;1631:6;1639;1647;1700:3;1688:9;1679:7;1675:23;1671:33;1668:53;;;1717:1;1714;1707:12;1668:53;1740:59;1791:7;1780:9;1740:59;:::i;:::-;1730:69;;1850:3;1839:9;1835:19;1822:33;1878:18;1870:6;1867:30;1864:50;;;1910:1;1907;1900:12;1864:50;1949:58;1999:7;1990:6;1979:9;1975:22;1949:58;:::i;:::-;1521:546;;2026:8;;-1:-1:-1;1923:84:11;;-1:-1:-1;;;;1521:546:11:o;2072:621::-;2191:6;2199;2207;2215;2268:3;2256:9;2247:7;2243:23;2239:33;2236:53;;;2285:1;2282;2275:12;2236:53;2308:59;2359:7;2348:9;2308:59;:::i;:::-;2298:69;;2418:3;2407:9;2403:19;2390:33;2446:18;2438:6;2435:30;2432:50;;;2478:1;2475;2468:12;2432:50;2517:58;2567:7;2558:6;2547:9;2543:22;2517:58;:::i;:::-;2594:8;;-1:-1:-1;2491:84:11;-1:-1:-1;2648:39:11;;-1:-1:-1;2682:3:11;2667:19;;2648:39;:::i;:::-;2638:49;;2072:621;;;;;;;:::o;2890:118::-;2976:5;2969:13;2962:21;2955:5;2952:32;2942:60;;2998:1;2995;2988:12;3013:241;3069:6;3122:2;3110:9;3101:7;3097:23;3093:32;3090:52;;;3138:1;3135;3128:12;3090:52;3177:9;3164:23;3196:28;3218:5;3196:28;:::i;3259:597::-;3371:4;3400:2;3429;3418:9;3411:21;3461:6;3455:13;3504:6;3499:2;3488:9;3484:18;3477:34;3529:1;3539:140;3553:6;3550:1;3547:13;3539:140;;;3648:14;;;3644:23;;3638:30;3614:17;;;3633:2;3610:26;3603:66;3568:10;;3539:140;;;3697:6;3694:1;3691:13;3688:91;;;3767:1;3762:2;3753:6;3742:9;3738:22;3734:31;3727:42;3688:91;-1:-1:-1;3840:2:11;3819:15;-1:-1:-1;;3815:29:11;3800:45;;;;3847:2;3796:54;;3259:597;-1:-1:-1;;;3259:597:11:o;4046:248::-;4114:6;4122;4175:2;4163:9;4154:7;4150:23;4146:32;4143:52;;;4191:1;4188;4181:12;4143:52;-1:-1:-1;;4214:23:11;;;4284:2;4269:18;;;4256:32;;-1:-1:-1;4046:248:11:o;4299:254::-;4367:6;4375;4428:2;4416:9;4407:7;4403:23;4399:32;4396:52;;;4444:1;4441;4434:12;4396:52;4467:29;4486:9;4467:29;:::i;:::-;4457:39;4543:2;4528:18;;;;4515:32;;-1:-1:-1;;;4299:254:11:o;4811:127::-;4872:10;4867:3;4863:20;4860:1;4853:31;4903:4;4900:1;4893:15;4927:4;4924:1;4917:15;4943:234;5021:1;5014:5;5011:12;5001:143;;5066:10;5061:3;5057:20;5054:1;5047:31;5101:4;5098:1;5091:15;5129:4;5126:1;5119:15;5001:143;5153:18;;4943:234::o;5182:201::-;5324:2;5309:18;;5336:41;5313:9;5359:6;5336:41;:::i;5596:254::-;5664:6;5672;5725:2;5713:9;5704:7;5700:23;5696:32;5693:52;;;5741:1;5738;5731:12;5693:52;5777:9;5764:23;5754:33;;5806:38;5840:2;5829:9;5825:18;5806:38;:::i;:::-;5796:48;;5596:254;;;;;:::o;5855:818::-;5995:4;6037:3;6026:9;6022:19;6014:27;;6050:48;6088:9;6079:6;6073:13;6050:48;:::i;:::-;6145:4;6137:6;6133:17;6127:24;6187:1;6183;6178:3;6174:11;6170:19;6245:2;6231:12;6227:21;6220:4;6209:9;6205:20;6198:51;6317:2;6309:4;6301:6;6297:17;6291:24;6287:33;6280:4;6269:9;6265:20;6258:63;6389:2;6381:4;6373:6;6369:17;6363:24;6359:33;6352:4;6341:9;6337:20;6330:63;6461:2;6453:4;6445:6;6441:17;6435:24;6431:33;6424:4;6413:9;6409:20;6402:63;;;6521:4;6513:6;6509:17;6503:24;6496:4;6485:9;6481:20;6474:54;6596:6;6588:4;6580:6;6576:17;6570:24;6566:37;6559:4;6548:9;6544:20;6537:67;6660:4;6652:6;6648:17;6642:24;6635:4;6624:9;6620:20;6613:54;5855:818;;;;:::o;6678:272::-;6736:6;6789:2;6777:9;6768:7;6764:23;6760:32;6757:52;;;6805:1;6802;6795:12;6757:52;6844:9;6831:23;6894:6;6887:5;6883:18;6876:5;6873:29;6863:57;;6916:1;6913;6906:12;8876:184;8946:6;8999:2;8987:9;8978:7;8974:23;8970:32;8967:52;;;9015:1;9012;9005:12;8967:52;-1:-1:-1;9038:16:11;;8876:184;-1:-1:-1;8876:184:11:o;9065:356::-;9267:2;9249:21;;;9286:18;;;9279:30;9345:34;9340:2;9325:18;;9318:62;9412:2;9397:18;;9065:356::o;10471:127::-;10532:10;10527:3;10523:20;10520:1;10513:31;10563:4;10560:1;10553:15;10587:4;10584:1;10577:15;10603:128;10643:3;10674:1;10670:6;10667:1;10664:13;10661:39;;;10680:18;;:::i;:::-;-1:-1:-1;10716:9:11;;10603:128::o;11116:245::-;11183:6;11236:2;11224:9;11215:7;11211:23;11207:32;11204:52;;;11252:1;11249;11242:12;11204:52;11284:9;11278:16;11303:28;11325:5;11303:28;:::i;11716:125::-;11756:4;11784:1;11781;11778:8;11775:34;;;11789:18;;:::i;:::-;-1:-1:-1;11826:9:11;;11716:125::o;12597:380::-;12676:1;12672:12;;;;12719;;;12740:61;;12794:4;12786:6;12782:17;12772:27;;12740:61;12847:2;12839:6;12836:14;12816:18;12813:38;12810:161;;;12893:10;12888:3;12884:20;12881:1;12874:31;12928:4;12925:1;12918:15;12956:4;12953:1;12946:15;12982:403;13184:2;13166:21;;;13223:2;13203:18;;;13196:30;13262:34;13257:2;13242:18;;13235:62;-1:-1:-1;;;13328:2:11;13313:18;;13306:37;13375:3;13360:19;;12982:403::o;14152:168::-;14192:7;14258:1;14254;14250:6;14246:14;14243:1;14240:21;14235:1;14228:9;14221:17;14217:45;14214:71;;;14265:18;;:::i;:::-;-1:-1:-1;14305:9:11;;14152:168::o;14325:217::-;14365:1;14391;14381:132;;14435:10;14430:3;14426:20;14423:1;14416:31;14470:4;14467:1;14460:15;14498:4;14495:1;14488:15;14381:132;-1:-1:-1;14527:9:11;;14325:217::o;14547:399::-;14749:2;14731:21;;;14788:2;14768:18;;;14761:30;14827:34;14822:2;14807:18;;14800:62;-1:-1:-1;;;14893:2:11;14878:18;;14871:33;14936:3;14921:19;;14547:399::o;14951:413::-;15153:2;15135:21;;;15192:2;15172:18;;;15165:30;15231:34;15226:2;15211:18;;15204:62;-1:-1:-1;;;15297:2:11;15282:18;;15275:47;15354:3;15339:19;;14951:413::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"./FeesCollectors.sol\";\nimport \"./EIP712Verifier.sol\";\n\n/**\n * @notice Payments Contract in ERC20.\n *\n * Upon transfer of ERC20 tokens to this contract, these remain\n * locked until an Operator confirms the success of failure of the\n * asset transfer required to fulfil this payment.\n *\n * If no confirmation is recevied from the operator during the PaymentWindow,\n * all of buyer's received tokens are made available to the buyer for refund.\n *\n * To start a payment, the signatures of both the buyer and the Operator are required.\n * - in the 'relayedPay' method, the Operator is the msg.sender, and the buyerSig is provided;\n * - in the 'pay' method, the buyer is the msg.sender, and the operatorSig is provided.\n *\n * This contract maintains the balances of all users, it does not transfer them automatically.\n * Users need to explicitly call the 'withdraw' method, which withdraws balanceOf[msg.sender]\n * If a buyer has non-zero local balance at the moment of starting a new payment, \n * the contract reuses it, and only transfers the remainder required (if any) \n * from the external ERC20 contract. \n *\n * Each payment has the following States Machine:\n * - NOT_STARTED -> ASSET_TRANSFERRING, triggered by pay/relayedPay\n * - ASSET_TRANSFERRING -> PAID, triggered by assetTransferSuccess\n * - ASSET_TRANSFERRING -> FAILED, triggered implicitly by now > expirationTime\n * - ASSET_TRANSFERRING -> NOT_STARTED, triggered by assetTransferFailure\n * - FAILED -> NOT_STARTED, triggered by refund or refundAndWithdraw\n * - FAILED -> ASSET_TRANSFERRING, triggered by new pay/relayedPay\n *\n * NOTE: To ensure that the a payment process proceeds as expected when the payment starts,\n * upon acceptance of a pay/relatedPay, the following data: {operator, feesCollector, expirationTime}\n * is stored in the payment struct, and used throught the payment, regardless of\n * any possible modifications to the contract's storage.\n *\n */\n\nimport \"./IPaymentsERC20.sol\";\n\ncontract PaymentsERC20 is IPaymentsERC20, FeesCollectors, EIP712Verifier {\n\n    address private _erc20;\n    string private _acceptedCurrency;\n    uint256 private _paymentWindow;\n    bool private _isSellerRegistrationRequired;\n    mapping(address => bool) private _isRegisteredSeller;\n    mapping(bytes32 => Payment) private _payments;\n    mapping(address => uint256) private _balanceOf;\n\n    constructor(address erc20Address, string memory currencyDescriptor) {\n        _erc20 = erc20Address;\n        _acceptedCurrency = currencyDescriptor;\n        _paymentWindow = 10 days;\n        _isSellerRegistrationRequired = true;\n    }\n\n    /**\n     * @notice Sets the amount of time available to the operator, after the payment starts,\n     *  to confirm either the success of the failure of the asset transfer. \n     *  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n     * @param window The amount of time available, in seconds.\n     */\n    function setPaymentWindow(uint256 window) external onlyOwner {\n        _paymentWindow = window;\n        emit PaymentWindow(window);\n    }\n\n    /**\n     * @notice Sets whether sellers are required to register in this contract before being,\n     *  able to accept payments. \n     * @param isRequired (bool) if true, registration is required.\n     */\n    function setIsSellerRegistrationRequired(bool isRequired)\n        external\n        onlyOwner\n    {\n        _isSellerRegistrationRequired = isRequired;\n    }\n\n    /**\n     * @notice Registers msg.sender a seller so that he/she can accept payments.\n     */\n    function registerAsSeller() external {\n        _isRegisteredSeller[msg.sender] = true;\n        emit NewSeller(msg.sender);\n    }\n\n    /**\n     * @notice Starts the Payment process via relay-by-operator.\n     *  Executed by an operator, who relays the MetaTX with the buyer's signature.\n     *  The buyer must have approved the amount to this contract before.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the ERC20\n     *  in this contract.\n     * @dev Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param buyerSignature The signature of 'inp' by the buyer\n     */\n    function relayedPay(\n        PaymentInput calldata inp,\n        bytes calldata buyerSignature\n    ) external {\n        require(\n            universeOperator(inp.universeId) == msg.sender,\n            \"operator not authorized for this universeId\"\n        );\n        if (paymentState(inp.paymentId) == States.Failed)\n            _refund(inp.paymentId);\n        checkPaymentInputs(inp);\n        require(\n            verify(inp, buyerSignature, inp.buyer),\n            \"incorrect buyer signature\"\n        );\n        _payments[inp.paymentId] = Payment(\n            States.AssetTransferring,\n            inp.buyer,\n            inp.seller,\n            msg.sender,\n            universeFeesCollector(inp.universeId),\n            block.timestamp + _paymentWindow,\n            inp.feeBPS,\n            inp.amount\n        );\n        (uint256 newFunds, uint256 localFunds) = splitFundingSources(\n            inp.buyer,\n            inp.amount\n        );\n        if (newFunds > 0) {\n            require(\n                IERC20(_erc20).transferFrom(inp.buyer, address(this), newFunds),\n                \"ERC20 transfer failed\"\n            );\n        }\n        _balanceOf[inp.buyer] -= localFunds;\n        emit Payin(inp.paymentId, inp.buyer, inp.seller);\n    }\n\n    /**\n     * @notice Starts Payment process directly by the buyer.\n     *  Executed by the buyer, who relays the MetaTX with the operator's signature.\n     *  The buyer must have approved the amount to this contract before.\n     *  If all requirements are fulfilled, it stores the data relevant\n     *  for the next steps of the payment, and it locks the ERC20\n     *  in this contract.\n     * @dev Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     *  Moves payment to ASSET_TRANSFERRING state.\n     * @param inp The struct containing all required payment data\n     * @param operatorSignature The signature of 'inp' by the operator\n     */\n    function pay(PaymentInput calldata inp, bytes calldata operatorSignature)\n        external\n    {\n        require(\n            msg.sender == inp.buyer,\n            \"only buyer can execute this function\"\n        );\n        if (paymentState(inp.paymentId) == States.Failed)\n            _refund(inp.paymentId);\n        checkPaymentInputs(inp);\n        address operator = universeOperator(inp.universeId);\n        require(\n            verify(inp, operatorSignature, operator),\n            \"incorrect operator signature\"\n        );\n\n        _payments[inp.paymentId] = Payment(\n            States.AssetTransferring,\n            inp.buyer,\n            inp.seller,\n            operator,\n            universeFeesCollector(inp.universeId),\n            block.timestamp + _paymentWindow,\n            inp.feeBPS,\n            inp.amount\n        );\n        (uint256 newFunds, uint256 localFunds) = splitFundingSources(\n            inp.buyer,\n            inp.amount\n        );\n        if (newFunds > 0) {\n            require(\n                IERC20(_erc20).transferFrom(inp.buyer, address(this), newFunds),\n                \"ERC20 transfer failed\"\n            );\n        }\n        _balanceOf[inp.buyer] -= localFunds;\n        emit Payin(inp.paymentId, inp.buyer, inp.seller);\n    }\n\n    /**\n     * @notice Confirms the asset transfer.\n     *  Needs to be executed by the operator.\n     *  Updates balances of seller and feesCollector.\n     * @dev Moves payment to PAID state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function assetTransferSuccess(bytes32 paymentId) external {\n        Payment memory p = _payments[paymentId];\n        require(\n            msg.sender == p.operator,\n            \"only payment operator is authorized\"\n        );\n        require(\n            States.AssetTransferring == paymentState(paymentId),\n            \"payment not initially in asset transferring state\"\n        );\n        _payments[paymentId].state = States.Paid;\n        uint256 feeAmount = computeFeeAmount(p.amount, uint256(p.feeBPS));\n        _balanceOf[p.seller] += (p.amount - feeAmount);\n        _balanceOf[p.feesCollector] += feeAmount;\n        emit Paid(paymentId);\n    }\n\n    /**\n     * @notice Confirms the failure of asset transfer and refunds buyer.\n     *  Needs to be executed by the operator.\n     *  Buyer's balance is updated, allowing explicit withdrawal.\n     *  It resets all data related to this payment.\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function assetTransferFailed(bytes32 paymentId) external {\n        require(\n            msg.sender == _payments[paymentId].operator,\n            \"only payment operator is authorized\"\n        );\n        require(\n            States.AssetTransferring == paymentState(paymentId),\n            \"payment not initially in asset transferring state\"\n        );\n        _refund(paymentId);\n    }\n\n    /**\n     * @notice Moves buyer's provided funds to buyer's balance.\n     *  Anybody can call this function.\n     *  Requires current state == FAILED to proceed.\n     *  After updating buyer's balance, he/she can later withdraw.\n     *  It resets all data related to this payment.\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refund(bytes32 paymentId) external {\n        require(\n            paymentState(paymentId) == States.Failed,\n            \"refund requires payment in failed state\"\n        );\n        _refund(paymentId);\n    }\n\n    /**\n     * @notice Exectutes refund and withdraw in one transaction.\n     *  Needs to be called by buyer.\n     *  All of buyer's balance in the contract is withdrawn,\n     *  not only the part that was locked in this particular paymentId\n     * @dev Moves payment to NOT_STARTED state.\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function refundAndWithdraw(bytes32 paymentId) external {\n        require(\n            paymentState(paymentId) == States.Failed,\n            \"refund requires payment in failed state\"\n        );\n        _refund(paymentId);\n        _withdraw();\n    }\n\n    /**\n     * @notice Transfers ERC20 avaliable in this\n     *  contract's balanceOf[msg.sender] to msg.sender\n     */\n    function withdraw() external {\n        _withdraw();\n    }\n\n    // PRIVATE FUNCTIONS\n\n    /**\n     * @dev Executes refund, moves to NOT_STARTED state\n     * @param paymentId The unique ID that identifies the payment.\n     */\n    function _refund(bytes32 paymentId) private {\n        Payment memory p = _payments[paymentId];\n        _balanceOf[p.buyer] += p.amount;\n        delete _payments[paymentId];\n        emit BuyerRefunded(paymentId, p.buyer);\n    }\n\n    /**\n     * @dev (private) Transfers ERC20 avaliable in this\n     *  contract's balanceOf[msg.sender] to msg.sender\n     *  Follows standard Checks-Effects-Interactions pattern\n     *  to protect against re-entrancy attacks.\n     */\n    function _withdraw() private {\n        uint256 amount = _balanceOf[msg.sender];\n        require(amount > 0, \"cannot withdraw: balance is zero\");\n        _balanceOf[msg.sender] = 0;\n        IERC20(_erc20).transfer(msg.sender, amount);\n        emit Withdraw(msg.sender, amount);\n    }\n\n    // VIEW FUNCTIONS\n\n    /**\n     * @notice Returns true if sellers need to be registered to be able to accept payments\n     */    \n    function isSellerRegistrationRequired() external view returns (bool) {\n        return _isSellerRegistrationRequired;\n    }\n\n    /**\n     * @notice Returns true if the address provided is a registered seller\n     * @param addr the address that is queried\n     * @return isRegistered as seller\n     */    \n    function isRegisteredSeller(address addr) external view returns (bool) {\n        return _isRegisteredSeller[addr];\n    }\n\n    /**\n     * @notice Returns the address of the ERC20 contract from which\n     *  tokens are accepted for payments\n     */\n    function erc20() external view returns (address) {\n        return _erc20;\n    }\n\n    /**\n     * @notice Returns the local ERC20 balance of address that is stored in this\n     *  contract, and hence, available for withdrawal.\n     * @param addr the address that is queried\n     * @return the local balance\n     */\n    function balanceOf(address addr) external view returns (uint256) {\n        return _balanceOf[addr];\n    }\n\n    /**\n     * @notice Returns ERC20 balance of address in the ERC20 contract\n     * @param addr the address that is queried\n     * @return the balance in the external ERC20 contract\n     */\n    function erc20BalanceOf(address addr) external view returns (uint256) {\n        return IERC20(_erc20).balanceOf(addr);\n    }\n\n    /**\n     * @notice Returns the allowance that the buyer has approved\n     *  directly in the ERC20 contract in favour of this contract.\n     * @param buyer the address of the buyer\n     * @return the amount allowed by buyer\n     */\n    function allowance(address buyer) public view returns (uint256) {\n        return IERC20(_erc20).allowance(buyer, address(this));\n    }\n\n    /**\n     * @notice Returns all data stored in a payment\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the struct stored for the payment\n     */\n    function paymentInfo(bytes32 paymentId)\n        external\n        view\n        returns (Payment memory)\n    {\n        return _payments[paymentId];\n    }\n\n    /**\n     * @notice Returns the state of a payment.\n     *  It maps 1-to-1 with the stored variable, with the exeption of\n     *  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n     * @param paymentId The unique ID that identifies the payment.\n     * @return the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid\n     */\n    function paymentState(bytes32 paymentId) public view returns (States) {\n        States state = _payments[paymentId].state;\n        if (\n            state == States.AssetTransferring &&\n            block.timestamp > _payments[paymentId].expirationTime\n        ) return States.Failed;\n        return state;\n    }\n\n    /**\n     * @notice Returns the amount of seconds that a payment\n     *  can remain in ASSET_TRANSFERRING state without positive\n     *  or negative confirmation by the operator\n     * @return the payment window\n     */\n    function paymentWindow() external view returns (uint256) {\n        return _paymentWindow;\n    }\n\n    /**\n     * @notice Returns a descriptor about the currency that this contract accepts\n     * @return the string describing the currency\n     */\n    function acceptedCurrency() external view returns (string memory) {\n        return _acceptedCurrency;\n    }\n\n    /**\n     * @notice Returns true if the 'amount' required for a payment is available to this contract.\n     *  In more detail: returns true if the sum of the buyer's local balance in this contract,\n     *  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n     * @return a bool, true is enough available\n     */\n    function enoughFundsAvailable(address buyer, uint256 amount)\n        public\n        view\n        returns (bool)\n    {\n        return maxFundsAvailable(buyer) >= amount;\n    }\n\n    /**\n     * @notice Returns the maximum amount of funds available to a buyer\n     *  In more detail: returns the sum of the buyer's local balance in this contract,\n     *  plus the funds available and approved in the ERC20 contract.\n     * @return the max funds available\n     */\n    function maxFundsAvailable(address buyer) public view returns (uint256) {\n        uint256 approved = allowance(buyer);\n        uint256 erc20Balance = IERC20(_erc20).balanceOf(buyer);\n        uint256 externalAvailable = (approved < erc20Balance)\n            ? approved\n            : erc20Balance;\n        return _balanceOf[buyer] + externalAvailable;\n    }\n\n    /**\n     * @notice Splits the funds required to pay 'amount' into two source:\n     *  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n     *  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n     * @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n     * @return localFunds - the amount of ERC20 local funds required. \n     */\n    function splitFundingSources(address buyer, uint256 amount)\n        public\n        view\n        returns (uint256 externalFunds, uint256 localFunds)\n    {\n        uint256 localBalance = _balanceOf[buyer];\n        localFunds = (amount > localBalance) ? localBalance : amount;\n        externalFunds = (amount > localBalance) ? amount - localBalance : 0;\n    }\n\n    /**\n     * @notice Reverts unless the requirements for a PaymentInput that\n     *  are common to both pay and relayedPay are fulfilled.\n     */\n    function checkPaymentInputs(PaymentInput calldata inp) public view {\n        require(inp.feeBPS <= 10000, \"fee cannot be larger than 100 percent\");\n        require(\n            paymentState(inp.paymentId) == States.NotStarted,\n            \"payment in incorrect curent state\"\n        );\n        require(block.timestamp <= inp.validUntil, \"payment deadline expired\");\n        if (_isSellerRegistrationRequired)\n            require(_isRegisteredSeller[inp.seller], \"seller not registered\");\n        require(\n            enoughFundsAvailable(inp.buyer, inp.amount),\n            \"not enough funds available for this buyer\"\n        );\n    }\n\n    // PURE FUNCTIONS\n\n    /**\n     * @notice Safe compute fee amount\n     *  Returns a values that is guaranteed to be less or equal to total provided amount\n     *  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n     *  when receiving a payment.\n     * @return the fee amount\n     */\n    function computeFeeAmount(uint256 amount, uint256 feeBPS)\n        public\n        pure\n        returns (uint256)\n    {\n        uint256 feeAmount = (amount * feeBPS) / 10000;\n        return (feeAmount <= amount) ? feeAmount : amount;\n    }\n}\n",
  "sourcePath": "/Users/toni/gits/cryptoPayments/contracts/Payments/PaymentsERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/Payments/PaymentsERC20.sol",
    "exportedSymbols": {
      "Context": [
        210
      ],
      "ECDSA": [
        354
      ],
      "EIP712": [
        492
      ],
      "EIP712Verifier": [
        563
      ],
      "FeesCollectors": [
        687
      ],
      "IEIP712Verifier": [
        720
      ],
      "IERC20": [
        187
      ],
      "IPaymentsERC20": [
        967
      ],
      "Operators": [
        1091
      ],
      "Ownable": [
        109
      ],
      "PaymentsERC20": [
        2011
      ]
    },
    "id": 2012,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1093,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 1094,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2012,
        "sourceUnit": 188,
        "src": "58:64:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 1095,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2012,
        "sourceUnit": 688,
        "src": "123:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 1096,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2012,
        "sourceUnit": 564,
        "src": "154:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/IPaymentsERC20.sol",
        "file": "./IPaymentsERC20.sol",
        "id": 1097,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2012,
        "sourceUnit": 968,
        "src": "2059:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1098,
              "name": "IPaymentsERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 967,
              "src": "2117:14:10"
            },
            "id": 1099,
            "nodeType": "InheritanceSpecifier",
            "src": "2117:14:10"
          },
          {
            "baseName": {
              "id": 1100,
              "name": "FeesCollectors",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 687,
              "src": "2133:14:10"
            },
            "id": 1101,
            "nodeType": "InheritanceSpecifier",
            "src": "2133:14:10"
          },
          {
            "baseName": {
              "id": 1102,
              "name": "EIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 563,
              "src": "2149:14:10"
            },
            "id": 1103,
            "nodeType": "InheritanceSpecifier",
            "src": "2149:14:10"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2011,
        "linearizedBaseContracts": [
          2011,
          563,
          492,
          687,
          1091,
          109,
          210,
          967,
          720
        ],
        "name": "PaymentsERC20",
        "nameLocation": "2100:13:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1105,
            "mutability": "mutable",
            "name": "_erc20",
            "nameLocation": "2187:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2171:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1104,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2171:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1107,
            "mutability": "mutable",
            "name": "_acceptedCurrency",
            "nameLocation": "2214:17:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2199:32:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1106,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2199:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1109,
            "mutability": "mutable",
            "name": "_paymentWindow",
            "nameLocation": "2253:14:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2237:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2237:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1111,
            "mutability": "mutable",
            "name": "_isSellerRegistrationRequired",
            "nameLocation": "2286:29:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2273:42:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1110,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2273:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1115,
            "mutability": "mutable",
            "name": "_isRegisteredSeller",
            "nameLocation": "2354:19:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2321:52:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1114,
              "keyType": {
                "id": 1112,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2329:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2321:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1113,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2340:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1120,
            "mutability": "mutable",
            "name": "_payments",
            "nameLocation": "2415:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2379:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
              "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment)"
            },
            "typeName": {
              "id": 1119,
              "keyType": {
                "id": 1116,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2387:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2379:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment)"
              },
              "valueType": {
                "id": 1118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1117,
                  "name": "Payment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 783,
                  "src": "2398:7:10"
                },
                "referencedDeclaration": 783,
                "src": "2398:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                  "typeString": "struct IPaymentsERC20.Payment"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1124,
            "mutability": "mutable",
            "name": "_balanceOf",
            "nameLocation": "2466:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2430:46:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1123,
              "keyType": {
                "id": 1121,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2438:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2430:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1122,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2449:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1147,
              "nodeType": "Block",
              "src": "2551:166:10",
              "statements": [
                {
                  "expression": {
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1131,
                      "name": "_erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "2561:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1132,
                      "name": "erc20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "2570:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2561:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:21:10"
                },
                {
                  "expression": {
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1135,
                      "name": "_acceptedCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1107,
                      "src": "2592:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1136,
                      "name": "currencyDescriptor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "2612:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2592:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "2592:38:10"
                },
                {
                  "expression": {
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1139,
                      "name": "_paymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "2640:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2657:7:10",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_864000_by_1",
                        "typeString": "int_const 864000"
                      },
                      "value": "10"
                    },
                    "src": "2640:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:24:10"
                },
                {
                  "expression": {
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1143,
                      "name": "_isSellerRegistrationRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "2674:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2706:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2674:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "2674:36:10"
                }
              ]
            },
            "id": 1148,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "2503:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "2495:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "currencyDescriptor",
                  "nameLocation": "2531:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "2517:32:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2494:56:10"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2551:0:10"
            },
            "scope": 2011,
            "src": "2483:234:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              789
            ],
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "3114:76:10",
              "statements": [
                {
                  "expression": {
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1156,
                      "name": "_paymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "3124:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1157,
                      "name": "window",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1151,
                      "src": "3141:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3124:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:23:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1161,
                        "name": "window",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "3176:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1160,
                      "name": "PaymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "3162:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3162:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "EmitStatement",
                  "src": "3157:26:10"
                }
              ]
            },
            "documentation": {
              "id": 1149,
              "nodeType": "StructuredDocumentation",
              "src": "2723:325:10",
              "text": " @notice Sets the amount of time available to the operator, after the payment starts,\n  to confirm either the success of the failure of the asset transfer. \n  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n @param window The amount of time available, in seconds."
            },
            "functionSelector": "982ed326",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1154,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1153,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "3104:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3104:9:10"
              }
            ],
            "name": "setPaymentWindow",
            "nameLocation": "3062:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "3087:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "3079:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:16:10"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3114:0:10"
            },
            "scope": 2011,
            "src": "3053:137:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              795
            ],
            "body": {
              "id": 1177,
              "nodeType": "Block",
              "src": "3502:59:10",
              "statements": [
                {
                  "expression": {
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1173,
                      "name": "_isSellerRegistrationRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "3512:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1174,
                      "name": "isRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "3544:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3512:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1176,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:42:10"
                }
              ]
            },
            "documentation": {
              "id": 1166,
              "nodeType": "StructuredDocumentation",
              "src": "3196:204:10",
              "text": " @notice Sets whether sellers are required to register in this contract before being,\n  able to accept payments. \n @param isRequired (bool) if true, registration is required."
            },
            "functionSelector": "1a29b6ab",
            "id": 1178,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1170,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "3488:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3488:9:10"
              }
            ],
            "name": "setIsSellerRegistrationRequired",
            "nameLocation": "3414:31:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "isRequired",
                  "nameLocation": "3451:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "3446:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3446:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3445:17:10"
            },
            "returnParameters": {
              "id": 1172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3502:0:10"
            },
            "scope": 2011,
            "src": "3405:156:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              799
            ],
            "body": {
              "id": 1194,
              "nodeType": "Block",
              "src": "3701:91:10",
              "statements": [
                {
                  "expression": {
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1182,
                        "name": "_isRegisteredSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "3711:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1185,
                      "indexExpression": {
                        "expression": {
                          "id": 1183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3731:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3731:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3711:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3745:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3711:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "3711:38:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3774:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3774:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1189,
                      "name": "NewSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "3764:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3764:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "EmitStatement",
                  "src": "3759:26:10"
                }
              ]
            },
            "documentation": {
              "id": 1179,
              "nodeType": "StructuredDocumentation",
              "src": "3567:92:10",
              "text": " @notice Registers msg.sender a seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 1195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "3673:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3689:2:10"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3701:0:10"
            },
            "scope": 2011,
            "src": "3664:128:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              808
            ],
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "4602:1133:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1206,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "4650:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                  "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 700,
                              "src": "4650:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1205,
                            "name": "universeOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "4633:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4633:32:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1209,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4669:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4669:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4633:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f70657261746f72206e6f7420617574686f72697a656420666f72207468697320756e6976657273654964",
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4693:45:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8",
                          "typeString": "literal_string \"operator not authorized for this universeId\""
                        },
                        "value": "operator not authorized for this universeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8",
                          "typeString": "literal_string \"operator not authorized for this universeId\""
                        }
                      ],
                      "id": 1204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4612:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4612:136:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1214,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:136:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    },
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1216,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "4775:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 694,
                          "src": "4775:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1215,
                        "name": "paymentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "4762:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                          "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4762:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1219,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "4793:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                          "typeString": "type(enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "4793:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "src": "4762:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1227,
                  "nodeType": "IfStatement",
                  "src": "4758:84:10",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1223,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "4828:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 694,
                          "src": "4828:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1222,
                        "name": "_refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "4820:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4820:22:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1226,
                    "nodeType": "ExpressionStatement",
                    "src": "4820:22:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1229,
                        "name": "inp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "4871:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                          "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                          "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                        }
                      ],
                      "id": 1228,
                      "name": "checkPaymentInputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1982,
                      "src": "4852:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$707_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IEIP712Verifier.PaymentInput calldata) view"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:23:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1234,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "4913:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          {
                            "id": 1235,
                            "name": "buyerSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "4918:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 1236,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "4934:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "4934:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1233,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "4906:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$707_calldata_ptr_$_t_bytes_calldata_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct IEIP712Verifier.PaymentInput calldata,bytes calldata,address) view returns (bool)"
                          }
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4906:38:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206275796572207369676e6174757265",
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4958:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b",
                          "typeString": "literal_string \"incorrect buyer signature\""
                        },
                        "value": "incorrect buyer signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b",
                          "typeString": "literal_string \"incorrect buyer signature\""
                        }
                      ],
                      "id": 1232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4885:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:110:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:110:10"
                },
                {
                  "expression": {
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1242,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "5005:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                          "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1245,
                      "indexExpression": {
                        "expression": {
                          "id": 1243,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5015:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "5015:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5005:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_storage",
                        "typeString": "struct IPaymentsERC20.Payment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1247,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "5053:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 762,
                          "src": "5053:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        {
                          "expression": {
                            "id": 1249,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "5091:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 704,
                          "src": "5091:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1251,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "5114:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 706,
                          "src": "5114:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5138:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5138:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1256,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "5184:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                  "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 700,
                              "src": "5184:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1255,
                            "name": "universeFeesCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "5162:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5162:37:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1259,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "5213:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5213:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1261,
                            "name": "_paymentWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "5231:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5213:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1263,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "5259:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 698,
                          "src": "5259:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 1265,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "5283:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 696,
                          "src": "5283:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1246,
                        "name": "Payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "5032:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Payment_$783_storage_ptr_$",
                          "typeString": "type(struct IPaymentsERC20.Payment storage pointer)"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5032:271:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                        "typeString": "struct IPaymentsERC20.Payment memory"
                      }
                    },
                    "src": "5005:298:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "5005:298:10"
                },
                {
                  "assignments": [
                    1271,
                    1273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1271,
                      "mutability": "mutable",
                      "name": "newFunds",
                      "nameLocation": "5322:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1318,
                      "src": "5314:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5314:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1273,
                      "mutability": "mutable",
                      "name": "localFunds",
                      "nameLocation": "5340:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1318,
                      "src": "5332:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5332:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1280,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1275,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5387:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "5387:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1277,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5410:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 696,
                        "src": "5410:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1274,
                      "name": "splitFundingSources",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1926,
                      "src": "5354:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5354:76:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5313:117:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1281,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1271,
                      "src": "5444:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5455:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5444:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1301,
                  "nodeType": "IfStatement",
                  "src": "5440:186:10",
                  "trueBody": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "5458:168:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1289,
                                    "name": "inp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1199,
                                    "src": "5525:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                      "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                    }
                                  },
                                  "id": 1290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 704,
                                  "src": "5525:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1293,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "5544:4:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    ],
                                    "id": 1292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5536:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1291,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5536:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5536:13:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1295,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1271,
                                  "src": "5551:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1286,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1105,
                                      "src": "5504:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1285,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "5497:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5497:14:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$187",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 168,
                                "src": "5497:27:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5497:63:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5578:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1284,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5472:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5472:143:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "ExpressionStatement",
                        "src": "5472:143:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1302,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "5635:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1305,
                      "indexExpression": {
                        "expression": {
                          "id": 1303,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5646:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "5646:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5635:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1306,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "5660:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5635:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "5635:35:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1310,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5691:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "5691:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1312,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5706:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "5706:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1314,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5717:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 706,
                        "src": "5717:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1309,
                      "name": "Payin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "5685:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5685:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "EmitStatement",
                  "src": "5680:48:10"
                }
              ]
            },
            "documentation": {
              "id": 1196,
              "nodeType": "StructuredDocumentation",
              "src": "3798:690:10",
              "text": " @notice Starts the Payment process via relay-by-operator.\n  Executed by an operator, who relays the MetaTX with the buyer's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param buyerSignature The signature of 'inp' by the buyer"
            },
            "functionSelector": "06a212ae",
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "relayedPay",
            "nameLocation": "4502:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "4544:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "4522:25:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1198,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1197,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "4522:12:10"
                    },
                    "referencedDeclaration": 707,
                    "src": "4522:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "buyerSignature",
                  "nameLocation": "4572:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "4557:29:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4557:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4512:80:10"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4602:0:10"
            },
            "scope": 2011,
            "src": "4493:1242:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              817
            ],
            "body": {
              "id": 1445,
              "nodeType": "Block",
              "src": "6534:1168:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1329,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6565:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6565:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1331,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "6579:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 704,
                          "src": "6579:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6565:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792062757965722063616e206578656375746520746869732066756e6374696f6e",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6602:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3",
                          "typeString": "literal_string \"only buyer can execute this function\""
                        },
                        "value": "only buyer can execute this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3",
                          "typeString": "literal_string \"only buyer can execute this function\""
                        }
                      ],
                      "id": 1328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6544:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6544:106:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "6544:106:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1338,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "6677:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 694,
                          "src": "6677:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1337,
                        "name": "paymentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "6664:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                          "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6664:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1341,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "6695:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                          "typeString": "type(enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "6695:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "src": "6664:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1349,
                  "nodeType": "IfStatement",
                  "src": "6660:84:10",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1345,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "6730:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 694,
                          "src": "6730:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1344,
                        "name": "_refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "6722:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 1347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6722:22:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1348,
                    "nodeType": "ExpressionStatement",
                    "src": "6722:22:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1351,
                        "name": "inp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "6773:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                          "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                          "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                        }
                      ],
                      "id": 1350,
                      "name": "checkPaymentInputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1982,
                      "src": "6754:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$707_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IEIP712Verifier.PaymentInput calldata) view"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6754:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "6754:23:10"
                },
                {
                  "assignments": [
                    1355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1355,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "6795:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1445,
                      "src": "6787:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1354,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6787:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1360,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1357,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "6823:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "universeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 700,
                        "src": "6823:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1356,
                      "name": "universeOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1090,
                      "src": "6806:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6806:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6787:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1363,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "6876:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          {
                            "id": 1364,
                            "name": "operatorSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1325,
                            "src": "6881:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 1365,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "6900:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1362,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "6869:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$707_calldata_ptr_$_t_bytes_calldata_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct IEIP712Verifier.PaymentInput calldata,bytes calldata,address) view returns (bool)"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6869:40:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206f70657261746f72207369676e6174757265",
                        "id": 1367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6923:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c",
                          "typeString": "literal_string \"incorrect operator signature\""
                        },
                        "value": "incorrect operator signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c",
                          "typeString": "literal_string \"incorrect operator signature\""
                        }
                      ],
                      "id": 1361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6848:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6848:115:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "6848:115:10"
                },
                {
                  "expression": {
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1370,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "6974:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                          "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1373,
                      "indexExpression": {
                        "expression": {
                          "id": 1371,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "6984:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "6984:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6974:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_storage",
                        "typeString": "struct IPaymentsERC20.Payment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1375,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "7022:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 762,
                          "src": "7022:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        {
                          "expression": {
                            "id": 1377,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "7060:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 704,
                          "src": "7060:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1379,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "7083:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 706,
                          "src": "7083:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1381,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1355,
                          "src": "7107:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1383,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1323,
                                "src": "7151:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                  "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 700,
                              "src": "7151:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1382,
                            "name": "universeFeesCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "7129:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7129:37:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1386,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "7180:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7180:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1388,
                            "name": "_paymentWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7198:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7180:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1390,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "7226:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 698,
                          "src": "7226:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 1392,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "7250:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 696,
                          "src": "7250:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1374,
                        "name": "Payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "7001:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Payment_$783_storage_ptr_$",
                          "typeString": "type(struct IPaymentsERC20.Payment storage pointer)"
                        }
                      },
                      "id": 1394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7001:269:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                        "typeString": "struct IPaymentsERC20.Payment memory"
                      }
                    },
                    "src": "6974:296:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "id": 1396,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:296:10"
                },
                {
                  "assignments": [
                    1398,
                    1400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1398,
                      "mutability": "mutable",
                      "name": "newFunds",
                      "nameLocation": "7289:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1445,
                      "src": "7281:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1397,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7281:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1400,
                      "mutability": "mutable",
                      "name": "localFunds",
                      "nameLocation": "7307:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1445,
                      "src": "7299:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1399,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7299:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1407,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1402,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7354:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "7354:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1404,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7377:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 696,
                        "src": "7377:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1401,
                      "name": "splitFundingSources",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1926,
                      "src": "7321:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7321:76:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7280:117:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1408,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "7411:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7422:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7411:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1428,
                  "nodeType": "IfStatement",
                  "src": "7407:186:10",
                  "trueBody": {
                    "id": 1427,
                    "nodeType": "Block",
                    "src": "7425:168:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1416,
                                    "name": "inp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1323,
                                    "src": "7492:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                      "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                    }
                                  },
                                  "id": 1417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 704,
                                  "src": "7492:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1420,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "7511:4:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    ],
                                    "id": 1419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7503:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1418,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7503:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7503:13:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1422,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1398,
                                  "src": "7518:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1413,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1105,
                                      "src": "7471:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1412,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "7464:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7464:14:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$187",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 168,
                                "src": "7464:27:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7464:63:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7545:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1411,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7439:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7439:143:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1426,
                        "nodeType": "ExpressionStatement",
                        "src": "7439:143:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1429,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "7602:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1432,
                      "indexExpression": {
                        "expression": {
                          "id": 1430,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7613:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "7613:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7602:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1433,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "7627:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7602:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1435,
                  "nodeType": "ExpressionStatement",
                  "src": "7602:35:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1437,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7658:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "7658:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1439,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7673:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "7673:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1441,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7684:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 706,
                        "src": "7684:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1436,
                      "name": "Payin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "7652:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7652:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1444,
                  "nodeType": "EmitStatement",
                  "src": "7647:48:10"
                }
              ]
            },
            "documentation": {
              "id": 1320,
              "nodeType": "StructuredDocumentation",
              "src": "5741:693:10",
              "text": " @notice Starts Payment process directly by the buyer.\n  Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 1446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "6448:3:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "6474:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "6452:25:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1322,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1321,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "6452:12:10"
                    },
                    "referencedDeclaration": 707,
                    "src": "6452:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "6494:17:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "6479:32:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1324,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6451:61:10"
            },
            "returnParameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6534:0:10"
            },
            "scope": 2011,
            "src": "6439:1263:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              823
            ],
            "body": {
              "id": 1520,
              "nodeType": "Block",
              "src": "8034:590:10",
              "statements": [
                {
                  "assignments": [
                    1454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1454,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "8059:1:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1520,
                      "src": "8044:16:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                        "typeString": "struct IPaymentsERC20.Payment"
                      },
                      "typeName": {
                        "id": 1453,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1452,
                          "name": "Payment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 783,
                          "src": "8044:7:10"
                        },
                        "referencedDeclaration": 783,
                        "src": "8044:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                          "typeString": "struct IPaymentsERC20.Payment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1458,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1455,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "8063:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                        "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1457,
                    "indexExpression": {
                      "id": 1456,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "8073:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8063:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8044:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1460,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8114:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8114:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1462,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "8128:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                              "typeString": "struct IPaymentsERC20.Payment memory"
                            }
                          },
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 774,
                          "src": "8128:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8114:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72697a6564",
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8152:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        },
                        "value": "only payment operator is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        }
                      ],
                      "id": 1459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8093:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8093:106:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "8093:106:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1469,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "8230:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 762,
                          "src": "8230:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1472,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
                              "src": "8271:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1471,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "8258:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8258:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "8230:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207472616e7366657272696e67207374617465",
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8295:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        },
                        "value": "payment not initially in asset transferring state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        }
                      ],
                      "id": 1468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8209:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8209:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1477,
                  "nodeType": "ExpressionStatement",
                  "src": "8209:147:10"
                },
                {
                  "expression": {
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1478,
                          "name": "_payments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1120,
                          "src": "8366:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                            "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                          }
                        },
                        "id": 1480,
                        "indexExpression": {
                          "id": 1479,
                          "name": "paymentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1449,
                          "src": "8376:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8366:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$783_storage",
                          "typeString": "struct IPaymentsERC20.Payment storage ref"
                        }
                      },
                      "id": 1481,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "8366:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1482,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "8395:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                          "typeString": "type(enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Paid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 764,
                      "src": "8395:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "src": "8366:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "8366:40:10"
                },
                {
                  "assignments": [
                    1487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1487,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "8424:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1520,
                      "src": "8416:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1486,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8416:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1497,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1489,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "8453:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "8453:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1493,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1454,
                              "src": "8471:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                                "typeString": "struct IPaymentsERC20.Payment memory"
                              }
                            },
                            "id": 1494,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeBPS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 780,
                            "src": "8471:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8463:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1491,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8463:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8463:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1488,
                      "name": "computeFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2010,
                      "src": "8436:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8436:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8416:65:10"
                },
                {
                  "expression": {
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1498,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "8491:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1501,
                      "indexExpression": {
                        "expression": {
                          "id": 1499,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "8502:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 772,
                        "src": "8502:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8491:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1502,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1454,
                              "src": "8516:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                                "typeString": "struct IPaymentsERC20.Payment memory"
                              }
                            },
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 782,
                            "src": "8516:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1504,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "8527:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8516:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1506,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8515:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8491:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "8491:46:10"
                },
                {
                  "expression": {
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1509,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "8547:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1512,
                      "indexExpression": {
                        "expression": {
                          "id": 1510,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "8558:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feesCollector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 776,
                        "src": "8558:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8547:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1513,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "8578:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8547:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "8547:40:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1517,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "8607:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1516,
                      "name": "Paid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "8602:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8602:15:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1519,
                  "nodeType": "EmitStatement",
                  "src": "8597:20:10"
                }
              ]
            },
            "documentation": {
              "id": 1447,
              "nodeType": "StructuredDocumentation",
              "src": "7708:263:10",
              "text": " @notice Confirms the asset transfer.\n  Needs to be executed by the operator.\n  Updates balances of seller and feesCollector.\n @dev Moves payment to PAID state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "b3080298",
            "id": 1521,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferSuccess",
            "nameLocation": "7985:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1449,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "8014:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1521,
                  "src": "8006:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8006:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8005:19:10"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8034:0:10"
            },
            "scope": 2011,
            "src": "7976:648:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              829
            ],
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "9055:327:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1528,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9086:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9086:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1530,
                              "name": "_payments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "9100:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                                "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                              }
                            },
                            "id": 1532,
                            "indexExpression": {
                              "id": 1531,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "9110:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9100:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$783_storage",
                              "typeString": "struct IPaymentsERC20.Payment storage ref"
                            }
                          },
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 774,
                          "src": "9100:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9086:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72697a6564",
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9143:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        },
                        "value": "only payment operator is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        }
                      ],
                      "id": 1527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9065:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9065:125:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "9065:125:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1539,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "9221:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 762,
                          "src": "9221:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1542,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "9262:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1541,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "9249:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9249:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "9221:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207472616e7366657272696e67207374617465",
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9286:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        },
                        "value": "payment not initially in asset transferring state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        }
                      ],
                      "id": 1538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9200:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9200:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "9200:147:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1549,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "9365:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1548,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "9357:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9357:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "9357:18:10"
                }
              ]
            },
            "documentation": {
              "id": 1522,
              "nodeType": "StructuredDocumentation",
              "src": "8630:363:10",
              "text": " @notice Confirms the failure of asset transfer and refunds buyer.\n  Needs to be executed by the operator.\n  Buyer's balance is updated, allowing explicit withdrawal.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2ce10fcf",
            "id": 1553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferFailed",
            "nameLocation": "9007:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1524,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9035:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "9027:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1523,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9027:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9026:19:10"
            },
            "returnParameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9055:0:10"
            },
            "scope": 2011,
            "src": "8998:384:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              835
            ],
            "body": {
              "id": 1573,
              "nodeType": "Block",
              "src": "9839:171:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1561,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1556,
                              "src": "9883:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1560,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "9870:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9870:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1563,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "9897:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Failed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 763,
                          "src": "9897:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "9870:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c6564207374617465",
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9924:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        },
                        "value": "refund requires payment in failed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        }
                      ],
                      "id": 1559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9849:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9849:126:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1568,
                  "nodeType": "ExpressionStatement",
                  "src": "9849:126:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1570,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "9993:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1569,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "9985:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9985:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "9985:18:10"
                }
              ]
            },
            "documentation": {
              "id": 1554,
              "nodeType": "StructuredDocumentation",
              "src": "9388:402:10",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n  Anybody can call this function.\n  Requires current state == FAILED to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 1574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "9804:6:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9819:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "9811:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9811:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9810:19:10"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9839:0:10"
            },
            "scope": 2011,
            "src": "9795:215:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              841
            ],
            "body": {
              "id": 1597,
              "nodeType": "Block",
              "src": "10436:192:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1582,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1577,
                              "src": "10480:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1581,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "10467:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10467:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1584,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "10494:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Failed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 763,
                          "src": "10494:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "10467:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c6564207374617465",
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10521:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        },
                        "value": "refund requires payment in failed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        }
                      ],
                      "id": 1580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10446:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10446:126:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "10446:126:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1591,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1577,
                        "src": "10590:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1590,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "10582:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10582:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "10582:18:10"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1594,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1680,
                      "src": "10610:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10610:11:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1596,
                  "nodeType": "ExpressionStatement",
                  "src": "10610:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1575,
              "nodeType": "StructuredDocumentation",
              "src": "10016:360:10",
              "text": " @notice Exectutes refund and withdraw in one transaction.\n  Needs to be called by buyer.\n  All of buyer's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 1598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "10390:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1577,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "10416:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1598,
                  "src": "10408:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1576,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10408:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10407:19:10"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10436:0:10"
            },
            "scope": 2011,
            "src": "10381:247:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              845
            ],
            "body": {
              "id": 1605,
              "nodeType": "Block",
              "src": "10783:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1602,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1680,
                      "src": "10793:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10793:11:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "10793:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1599,
              "nodeType": "StructuredDocumentation",
              "src": "10634:115:10",
              "text": " @notice Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 1606,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "10763:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10771:2:10"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10783:0:10"
            },
            "scope": 2011,
            "src": "10754:57:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1638,
              "nodeType": "Block",
              "src": "11026:182:10",
              "statements": [
                {
                  "assignments": [
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1614,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "11051:1:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1638,
                      "src": "11036:16:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                        "typeString": "struct IPaymentsERC20.Payment"
                      },
                      "typeName": {
                        "id": 1613,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1612,
                          "name": "Payment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 783,
                          "src": "11036:7:10"
                        },
                        "referencedDeclaration": 783,
                        "src": "11036:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                          "typeString": "struct IPaymentsERC20.Payment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1618,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1615,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "11055:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                        "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1617,
                    "indexExpression": {
                      "id": 1616,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1609,
                      "src": "11065:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11055:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11036:39:10"
                },
                {
                  "expression": {
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1619,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "11085:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1622,
                      "indexExpression": {
                        "expression": {
                          "id": 1620,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "11096:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1621,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 770,
                        "src": "11096:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11085:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1623,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "11108:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                          "typeString": "struct IPaymentsERC20.Payment memory"
                        }
                      },
                      "id": 1624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 782,
                      "src": "11108:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11085:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1626,
                  "nodeType": "ExpressionStatement",
                  "src": "11085:31:10"
                },
                {
                  "expression": {
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11126:27:10",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1627,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "11133:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                          "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1629,
                      "indexExpression": {
                        "id": 1628,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1609,
                        "src": "11143:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11133:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_storage",
                        "typeString": "struct IPaymentsERC20.Payment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1631,
                  "nodeType": "ExpressionStatement",
                  "src": "11126:27:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1633,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1609,
                        "src": "11182:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1634,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "11193:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 770,
                        "src": "11193:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1632,
                      "name": "BuyerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "11168:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11168:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1637,
                  "nodeType": "EmitStatement",
                  "src": "11163:38:10"
                }
              ]
            },
            "documentation": {
              "id": 1607,
              "nodeType": "StructuredDocumentation",
              "src": "10843:134:10",
              "text": " @dev Executes refund, moves to NOT_STARTED state\n @param paymentId The unique ID that identifies the payment."
            },
            "id": 1639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refund",
            "nameLocation": "10991:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "11007:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1639,
                  "src": "10999:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10999:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10998:19:10"
            },
            "returnParameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11026:0:10"
            },
            "scope": 2011,
            "src": "10982:226:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1679,
              "nodeType": "Block",
              "src": "11479:253:10",
              "statements": [
                {
                  "assignments": [
                    1644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1644,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "11497:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1679,
                      "src": "11489:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11489:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1649,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1645,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "11506:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1648,
                    "indexExpression": {
                      "expression": {
                        "id": 1646,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "11517:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11517:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11506:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11489:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1651,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1644,
                          "src": "11546:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11555:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11546:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f",
                        "id": 1654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11558:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84",
                          "typeString": "literal_string \"cannot withdraw: balance is zero\""
                        },
                        "value": "cannot withdraw: balance is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84",
                          "typeString": "literal_string \"cannot withdraw: balance is zero\""
                        }
                      ],
                      "id": 1650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11538:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11538:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1656,
                  "nodeType": "ExpressionStatement",
                  "src": "11538:55:10"
                },
                {
                  "expression": {
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1657,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "11603:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1660,
                      "indexExpression": {
                        "expression": {
                          "id": 1658,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11614:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11614:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11603:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11628:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11603:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1663,
                  "nodeType": "ExpressionStatement",
                  "src": "11603:26:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1668,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11663:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11663:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1670,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "11675:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1665,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "11646:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1664,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "11639:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11639:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 136,
                      "src": "11639:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11639:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1672,
                  "nodeType": "ExpressionStatement",
                  "src": "11639:43:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1674,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11706:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11706:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1676,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "11718:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1673,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "11697:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11697:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1678,
                  "nodeType": "EmitStatement",
                  "src": "11692:33:10"
                }
              ]
            },
            "documentation": {
              "id": 1640,
              "nodeType": "StructuredDocumentation",
              "src": "11214:231:10",
              "text": " @dev (private) Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks."
            },
            "id": 1680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "11459:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11468:2:10"
            },
            "returnParameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11479:0:10"
            },
            "scope": 2011,
            "src": "11450:282:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              851
            ],
            "body": {
              "id": 1688,
              "nodeType": "Block",
              "src": "11941:53:10",
              "statements": [
                {
                  "expression": {
                    "id": 1686,
                    "name": "_isSellerRegistrationRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1111,
                    "src": "11958:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1685,
                  "id": 1687,
                  "nodeType": "Return",
                  "src": "11951:36:10"
                }
              ]
            },
            "documentation": {
              "id": 1681,
              "nodeType": "StructuredDocumentation",
              "src": "11761:102:10",
              "text": " @notice Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 1689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "11881:28:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11909:2:10"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1684,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1689,
                  "src": "11935:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1683,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11935:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11934:6:10"
            },
            "scope": 2011,
            "src": "11872:122:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              859
            ],
            "body": {
              "id": 1701,
              "nodeType": "Block",
              "src": "12251:49:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1697,
                      "name": "_isRegisteredSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "12268:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1699,
                    "indexExpression": {
                      "id": 1698,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "12288:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12268:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1696,
                  "id": 1700,
                  "nodeType": "Return",
                  "src": "12261:32:10"
                }
              ]
            },
            "documentation": {
              "id": 1690,
              "nodeType": "StructuredDocumentation",
              "src": "12000:171:10",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return isRegistered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 1702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "12189:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1692,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "12216:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "12208:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12208:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12207:14:10"
            },
            "returnParameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1695,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "12245:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12245:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12244:6:10"
            },
            "scope": 2011,
            "src": "12180:120:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              865
            ],
            "body": {
              "id": 1710,
              "nodeType": "Block",
              "src": "12480:30:10",
              "statements": [
                {
                  "expression": {
                    "id": 1708,
                    "name": "_erc20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1105,
                    "src": "12497:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1707,
                  "id": 1709,
                  "nodeType": "Return",
                  "src": "12490:13:10"
                }
              ]
            },
            "documentation": {
              "id": 1703,
              "nodeType": "StructuredDocumentation",
              "src": "12306:120:10",
              "text": " @notice Returns the address of the ERC20 contract from which\n  tokens are accepted for payments"
            },
            "functionSelector": "785e9e86",
            "id": 1711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "erc20",
            "nameLocation": "12440:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12445:2:10"
            },
            "returnParameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1706,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "12471:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12471:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12470:9:10"
            },
            "scope": 2011,
            "src": "12431:79:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              873
            ],
            "body": {
              "id": 1723,
              "nodeType": "Block",
              "src": "12813:40:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1719,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "12830:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1721,
                    "indexExpression": {
                      "id": 1720,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1714,
                      "src": "12841:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12830:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1718,
                  "id": 1722,
                  "nodeType": "Return",
                  "src": "12823:23:10"
                }
              ]
            },
            "documentation": {
              "id": 1712,
              "nodeType": "StructuredDocumentation",
              "src": "12516:227:10",
              "text": " @notice Returns the local ERC20 balance of address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 1724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "12757:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "12775:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1724,
                  "src": "12767:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12767:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12766:14:10"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1724,
                  "src": "12804:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12804:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12803:9:10"
            },
            "scope": 2011,
            "src": "12748:105:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              881
            ],
            "body": {
              "id": 1739,
              "nodeType": "Block",
              "src": "13120:54:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1736,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1727,
                        "src": "13162:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1733,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "13144:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1732,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "13137:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13137:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "13137:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13137:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1731,
                  "id": 1738,
                  "nodeType": "Return",
                  "src": "13130:37:10"
                }
              ]
            },
            "documentation": {
              "id": 1725,
              "nodeType": "StructuredDocumentation",
              "src": "12859:186:10",
              "text": " @notice Returns ERC20 balance of address in the ERC20 contract\n @param addr the address that is queried\n @return the balance in the external ERC20 contract"
            },
            "functionSelector": "02519da3",
            "id": 1740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "erc20BalanceOf",
            "nameLocation": "13059:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1727,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "13082:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "13074:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13074:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13073:14:10"
            },
            "returnParameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "13111:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13111:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13110:9:10"
            },
            "scope": 2011,
            "src": "13050:124:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              889
            ],
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "13480:70:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1752,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1743,
                        "src": "13522:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1755,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "13537:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                              "typeString": "contract PaymentsERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                              "typeString": "contract PaymentsERC20"
                            }
                          ],
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13529:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1753,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13529:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13529:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1749,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "13504:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1748,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "13497:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13497:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 146,
                      "src": "13497:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13497:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1747,
                  "id": 1758,
                  "nodeType": "Return",
                  "src": "13490:53:10"
                }
              ]
            },
            "documentation": {
              "id": 1741,
              "nodeType": "StructuredDocumentation",
              "src": "13180:231:10",
              "text": " @notice Returns the allowance that the buyer has approved\n  directly in the ERC20 contract in favour of this contract.\n @param buyer the address of the buyer\n @return the amount allowed by buyer"
            },
            "functionSelector": "3e5beab9",
            "id": 1760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "13425:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1743,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "13443:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "13435:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13435:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13434:15:10"
            },
            "returnParameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1746,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "13471:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13471:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13470:9:10"
            },
            "scope": 2011,
            "src": "13416:134:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              898
            ],
            "body": {
              "id": 1773,
              "nodeType": "Block",
              "src": "13847:44:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1769,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "13864:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                        "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1771,
                    "indexExpression": {
                      "id": 1770,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "13874:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13864:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "functionReturnParameters": 1768,
                  "id": 1772,
                  "nodeType": "Return",
                  "src": "13857:27:10"
                }
              ]
            },
            "documentation": {
              "id": 1761,
              "nodeType": "StructuredDocumentation",
              "src": "13556:179:10",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 1774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "13749:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "13769:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "13761:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13761:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13760:19:10"
            },
            "returnParameters": {
              "id": 1768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "13827:14:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                    "typeString": "struct IPaymentsERC20.Payment"
                  },
                  "typeName": {
                    "id": 1766,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1765,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 783,
                      "src": "13827:7:10"
                    },
                    "referencedDeclaration": 783,
                    "src": "13827:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                      "typeString": "struct IPaymentsERC20.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13826:16:10"
            },
            "scope": 2011,
            "src": "13740:151:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              907
            ],
            "body": {
              "id": 1809,
              "nodeType": "Block",
              "src": "14325:240:10",
              "statements": [
                {
                  "assignments": [
                    1785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1785,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "14342:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1809,
                      "src": "14335:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      },
                      "typeName": {
                        "id": 1784,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1783,
                          "name": "States",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 765,
                          "src": "14335:6:10"
                        },
                        "referencedDeclaration": 765,
                        "src": "14335:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1790,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1786,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "14350:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                          "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1788,
                      "indexExpression": {
                        "id": 1787,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1777,
                        "src": "14360:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14350:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_storage",
                        "typeString": "struct IPaymentsERC20.Payment storage ref"
                      }
                    },
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 768,
                    "src": "14350:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14335:41:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      },
                      "id": 1794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1791,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1785,
                        "src": "14403:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1792,
                          "name": "States",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "14412:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                            "typeString": "type(enum IPaymentsERC20.States)"
                          }
                        },
                        "id": 1793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetTransferring",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 762,
                        "src": "14412:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        }
                      },
                      "src": "14403:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1795,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "14452:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "14452:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1797,
                            "name": "_payments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "14470:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                              "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                            }
                          },
                          "id": 1799,
                          "indexExpression": {
                            "id": 1798,
                            "name": "paymentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1777,
                            "src": "14480:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14470:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_storage",
                            "typeString": "struct IPaymentsERC20.Payment storage ref"
                          }
                        },
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 778,
                        "src": "14470:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14452:53:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14403:102:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1806,
                  "nodeType": "IfStatement",
                  "src": "14386:150:10",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "id": 1803,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "14523:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                          "typeString": "type(enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "14523:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "functionReturnParameters": 1782,
                    "id": 1805,
                    "nodeType": "Return",
                    "src": "14516:20:10"
                  }
                },
                {
                  "expression": {
                    "id": 1807,
                    "name": "state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1785,
                    "src": "14553:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "functionReturnParameters": 1782,
                  "id": 1808,
                  "nodeType": "Return",
                  "src": "14546:12:10"
                }
              ]
            },
            "documentation": {
              "id": 1775,
              "nodeType": "StructuredDocumentation",
              "src": "13897:353:10",
              "text": " @notice Returns the state of a payment.\n  It maps 1-to-1 with the stored variable, with the exeption of\n  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid"
            },
            "functionSelector": "34b778ed",
            "id": 1810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "14264:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "14285:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "14277:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14277:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14276:19:10"
            },
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "14317:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$765",
                    "typeString": "enum IPaymentsERC20.States"
                  },
                  "typeName": {
                    "id": 1780,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1779,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 765,
                      "src": "14317:6:10"
                    },
                    "referencedDeclaration": 765,
                    "src": "14317:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14316:8:10"
            },
            "scope": 2011,
            "src": "14255:310:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              913
            ],
            "body": {
              "id": 1818,
              "nodeType": "Block",
              "src": "14851:38:10",
              "statements": [
                {
                  "expression": {
                    "id": 1816,
                    "name": "_paymentWindow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1109,
                    "src": "14868:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1815,
                  "id": 1817,
                  "nodeType": "Return",
                  "src": "14861:21:10"
                }
              ]
            },
            "documentation": {
              "id": 1811,
              "nodeType": "StructuredDocumentation",
              "src": "14571:218:10",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window"
            },
            "functionSelector": "cab55d56",
            "id": 1819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "14803:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14816:2:10"
            },
            "returnParameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1819,
                  "src": "14842:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14842:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14841:9:10"
            },
            "scope": 2011,
            "src": "14794:95:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              919
            ],
            "body": {
              "id": 1827,
              "nodeType": "Block",
              "src": "15109:41:10",
              "statements": [
                {
                  "expression": {
                    "id": 1825,
                    "name": "_acceptedCurrency",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1107,
                    "src": "15126:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1824,
                  "id": 1826,
                  "nodeType": "Return",
                  "src": "15119:24:10"
                }
              ]
            },
            "documentation": {
              "id": 1820,
              "nodeType": "StructuredDocumentation",
              "src": "14895:143:10",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 1828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "15052:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15068:2:10"
            },
            "returnParameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1823,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "15094:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1822,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15094:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15093:15:10"
            },
            "scope": 2011,
            "src": "15043:107:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              929
            ],
            "body": {
              "id": 1844,
              "nodeType": "Block",
              "src": "15628:58:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1839,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "15663:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1838,
                        "name": "maxFundsAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1885,
                        "src": "15645:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 1840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15645:24:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1841,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1833,
                      "src": "15673:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15645:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1837,
                  "id": 1843,
                  "nodeType": "Return",
                  "src": "15638:41:10"
                }
              ]
            },
            "documentation": {
              "id": 1829,
              "nodeType": "StructuredDocumentation",
              "src": "15156:351:10",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n  In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n @return a bool, true is enough available"
            },
            "functionSelector": "9cfd495c",
            "id": 1845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "15521:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "15550:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "15542:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15542:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15565:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "15557:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15557:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15541:31:10"
            },
            "returnParameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "15618:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15618:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15617:6:10"
            },
            "scope": 2011,
            "src": "15512:174:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              937
            ],
            "body": {
              "id": 1884,
              "nodeType": "Block",
              "src": "16047:283:10",
              "statements": [
                {
                  "assignments": [
                    1854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1854,
                      "mutability": "mutable",
                      "name": "approved",
                      "nameLocation": "16065:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "16057:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1853,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16057:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1858,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1856,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1848,
                        "src": "16086:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1855,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1760,
                      "src": "16076:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16076:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16057:35:10"
                },
                {
                  "assignments": [
                    1860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1860,
                      "mutability": "mutable",
                      "name": "erc20Balance",
                      "nameLocation": "16110:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "16102:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1859,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16102:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1867,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1865,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1848,
                        "src": "16150:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1862,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "16132:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1861,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "16125:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16125:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "16125:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16125:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16102:54:10"
                },
                {
                  "assignments": [
                    1869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1869,
                      "mutability": "mutable",
                      "name": "externalAvailable",
                      "nameLocation": "16174:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "16166:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16166:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1877,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1870,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "16195:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1871,
                            "name": "erc20Balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1860,
                            "src": "16206:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16195:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1873,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16194:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1875,
                      "name": "erc20Balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1860,
                      "src": "16257:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16194:75:10",
                    "trueExpression": {
                      "id": 1874,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1854,
                      "src": "16234:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16166:103:10"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1878,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "16286:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1880,
                      "indexExpression": {
                        "id": 1879,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1848,
                        "src": "16297:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16286:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1881,
                      "name": "externalAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1869,
                      "src": "16306:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16286:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1852,
                  "id": 1883,
                  "nodeType": "Return",
                  "src": "16279:44:10"
                }
              ]
            },
            "documentation": {
              "id": 1846,
              "nodeType": "StructuredDocumentation",
              "src": "15692:278:10",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n  In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the funds available and approved in the ERC20 contract.\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 1885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "15984:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "16010:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1885,
                  "src": "16002:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16002:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16001:15:10"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1885,
                  "src": "16038:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16038:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16037:9:10"
            },
            "scope": 2011,
            "src": "15975:355:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              949
            ],
            "body": {
              "id": 1925,
              "nodeType": "Block",
              "src": "16951:204:10",
              "statements": [
                {
                  "assignments": [
                    1898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1898,
                      "mutability": "mutable",
                      "name": "localBalance",
                      "nameLocation": "16969:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1925,
                      "src": "16961:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1897,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16961:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1902,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1899,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "16984:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1901,
                    "indexExpression": {
                      "id": 1900,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1888,
                      "src": "16995:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16984:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16961:40:10"
                },
                {
                  "expression": {
                    "id": 1911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1903,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1895,
                      "src": "17011:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1904,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1890,
                              "src": "17025:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1905,
                              "name": "localBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1898,
                              "src": "17034:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17025:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1907,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17024:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 1909,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "17065:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "17024:47:10",
                      "trueExpression": {
                        "id": 1908,
                        "name": "localBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1898,
                        "src": "17050:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17011:60:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1912,
                  "nodeType": "ExpressionStatement",
                  "src": "17011:60:10"
                },
                {
                  "expression": {
                    "id": 1923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1913,
                      "name": "externalFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1893,
                      "src": "17081:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1914,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1890,
                              "src": "17098:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1915,
                              "name": "localBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1898,
                              "src": "17107:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17098:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1917,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17097:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 1921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17147:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 1922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "17097:51:10",
                      "trueExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1918,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1890,
                          "src": "17123:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1919,
                          "name": "localBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1898,
                          "src": "17132:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17123:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17081:67:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1924,
                  "nodeType": "ExpressionStatement",
                  "src": "17081:67:10"
                }
              ]
            },
            "documentation": {
              "id": 1886,
              "nodeType": "StructuredDocumentation",
              "src": "16336:458:10",
              "text": " @notice Splits the funds required to pay 'amount' into two source:\n  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n @return localFunds - the amount of ERC20 local funds required. "
            },
            "functionSelector": "317cb018",
            "id": 1926,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "16808:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "16836:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "16828:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16828:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1890,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16851:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "16843:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16843:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16827:31:10"
            },
            "returnParameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "16912:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "16904:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16904:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "16935:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "16927:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16927:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16903:43:10"
            },
            "scope": 2011,
            "src": "16799:356:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              956
            ],
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "17376:567:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1934,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "17394:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 698,
                          "src": "17394:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17408:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "17394:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6665652063616e6e6f74206265206c6172676572207468616e203130302070657263656e74",
                        "id": 1938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17415:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08",
                          "typeString": "literal_string \"fee cannot be larger than 100 percent\""
                        },
                        "value": "fee cannot be larger than 100 percent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08",
                          "typeString": "literal_string \"fee cannot be larger than 100 percent\""
                        }
                      ],
                      "id": 1933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17386:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17386:69:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "17386:69:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1943,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1930,
                                "src": "17499:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                  "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 694,
                              "src": "17499:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1942,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "17486:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17486:27:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1946,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "17517:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NotStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 761,
                          "src": "17517:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "17486:48:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420696e20696e636f727265637420637572656e74207374617465",
                        "id": 1949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17548:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9",
                          "typeString": "literal_string \"payment in incorrect curent state\""
                        },
                        "value": "payment in incorrect curent state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9",
                          "typeString": "literal_string \"payment in incorrect curent state\""
                        }
                      ],
                      "id": 1941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17465:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17465:128:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "17465:128:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1953,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "17611:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17611:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1955,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "17630:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 702,
                          "src": "17630:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17611:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420646561646c696e652065787069726564",
                        "id": 1958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17646:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9",
                          "typeString": "literal_string \"payment deadline expired\""
                        },
                        "value": "payment deadline expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9",
                          "typeString": "literal_string \"payment deadline expired\""
                        }
                      ],
                      "id": 1952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17603:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17603:70:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1960,
                  "nodeType": "ExpressionStatement",
                  "src": "17603:70:10"
                },
                {
                  "condition": {
                    "id": 1961,
                    "name": "_isSellerRegistrationRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1111,
                    "src": "17687:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1970,
                  "nodeType": "IfStatement",
                  "src": "17683:112:10",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 1963,
                            "name": "_isRegisteredSeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1115,
                            "src": "17738:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1966,
                          "indexExpression": {
                            "expression": {
                              "id": 1964,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "17758:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 706,
                            "src": "17758:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17738:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "73656c6c6572206e6f742072656769737465726564",
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17771:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd",
                            "typeString": "literal_string \"seller not registered\""
                          },
                          "value": "seller not registered"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd",
                            "typeString": "literal_string \"seller not registered\""
                          }
                        ],
                        "id": 1962,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "17730:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17730:65:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1969,
                    "nodeType": "ExpressionStatement",
                    "src": "17730:65:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1973,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "17847:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "17847:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 1975,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "17858:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 696,
                            "src": "17858:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1972,
                          "name": "enoughFundsAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1845,
                          "src": "17826:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17826:43:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682066756e647320617661696c61626c6520666f722074686973206275796572",
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17883:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145",
                          "typeString": "literal_string \"not enough funds available for this buyer\""
                        },
                        "value": "not enough funds available for this buyer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145",
                          "typeString": "literal_string \"not enough funds available for this buyer\""
                        }
                      ],
                      "id": 1971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17805:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17805:131:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "17805:131:10"
                }
              ]
            },
            "documentation": {
              "id": 1927,
              "nodeType": "StructuredDocumentation",
              "src": "17161:143:10",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled."
            },
            "functionSelector": "00f3b6e8",
            "id": 1982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "17318:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "17359:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "17337:25:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1929,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1928,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "17337:12:10"
                    },
                    "referencedDeclaration": 707,
                    "src": "17337:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17336:27:10"
            },
            "returnParameters": {
              "id": 1932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17376:0:10"
            },
            "scope": 2011,
            "src": "17309:634:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              966
            ],
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "18383:121:10",
              "statements": [
                {
                  "assignments": [
                    1993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1993,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "18401:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2009,
                      "src": "18393:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1992,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18393:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2000,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1994,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "18414:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1995,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "18423:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18414:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1997,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18413:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18433:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "18413:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18393:45:10"
                },
                {
                  "expression": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2001,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "18456:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 2002,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "18469:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18456:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2004,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18455:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 2006,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "18491:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "18455:42:10",
                    "trueExpression": {
                      "id": 2005,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "18479:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1991,
                  "id": 2008,
                  "nodeType": "Return",
                  "src": "18448:49:10"
                }
              ]
            },
            "documentation": {
              "id": 1983,
              "nodeType": "StructuredDocumentation",
              "src": "17972:290:10",
              "text": " @notice Safe compute fee amount\n  Returns a values that is guaranteed to be less or equal to total provided amount\n  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n  when receiving a payment.\n @return the fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "18276:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18301:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "18293:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18293:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "18317:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "18309:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18309:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18292:32:10"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "18370:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18370:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18369:9:10"
            },
            "scope": 2011,
            "src": "18267:237:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2012,
        "src": "2091:16415:10",
        "usedErrors": []
      }
    ],
    "src": "32:18475:10"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Payments/PaymentsERC20.sol",
    "exportedSymbols": {
      "Context": [
        210
      ],
      "ECDSA": [
        354
      ],
      "EIP712": [
        492
      ],
      "EIP712Verifier": [
        563
      ],
      "FeesCollectors": [
        687
      ],
      "IEIP712Verifier": [
        720
      ],
      "IERC20": [
        187
      ],
      "IPaymentsERC20": [
        967
      ],
      "Operators": [
        1091
      ],
      "Ownable": [
        109
      ],
      "PaymentsERC20": [
        2011
      ]
    },
    "id": 2012,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1093,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 1094,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2012,
        "sourceUnit": 188,
        "src": "58:64:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/FeesCollectors.sol",
        "file": "./FeesCollectors.sol",
        "id": 1095,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2012,
        "sourceUnit": 688,
        "src": "123:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/EIP712Verifier.sol",
        "file": "./EIP712Verifier.sol",
        "id": 1096,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2012,
        "sourceUnit": 564,
        "src": "154:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Payments/IPaymentsERC20.sol",
        "file": "./IPaymentsERC20.sol",
        "id": 1097,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2012,
        "sourceUnit": 968,
        "src": "2059:30:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1098,
              "name": "IPaymentsERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 967,
              "src": "2117:14:10"
            },
            "id": 1099,
            "nodeType": "InheritanceSpecifier",
            "src": "2117:14:10"
          },
          {
            "baseName": {
              "id": 1100,
              "name": "FeesCollectors",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 687,
              "src": "2133:14:10"
            },
            "id": 1101,
            "nodeType": "InheritanceSpecifier",
            "src": "2133:14:10"
          },
          {
            "baseName": {
              "id": 1102,
              "name": "EIP712Verifier",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 563,
              "src": "2149:14:10"
            },
            "id": 1103,
            "nodeType": "InheritanceSpecifier",
            "src": "2149:14:10"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2011,
        "linearizedBaseContracts": [
          2011,
          563,
          492,
          687,
          1091,
          109,
          210,
          967,
          720
        ],
        "name": "PaymentsERC20",
        "nameLocation": "2100:13:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1105,
            "mutability": "mutable",
            "name": "_erc20",
            "nameLocation": "2187:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2171:22:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1104,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2171:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1107,
            "mutability": "mutable",
            "name": "_acceptedCurrency",
            "nameLocation": "2214:17:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2199:32:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1106,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2199:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1109,
            "mutability": "mutable",
            "name": "_paymentWindow",
            "nameLocation": "2253:14:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2237:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2237:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1111,
            "mutability": "mutable",
            "name": "_isSellerRegistrationRequired",
            "nameLocation": "2286:29:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2273:42:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1110,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2273:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1115,
            "mutability": "mutable",
            "name": "_isRegisteredSeller",
            "nameLocation": "2354:19:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2321:52:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1114,
              "keyType": {
                "id": 1112,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2329:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2321:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1113,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2340:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1120,
            "mutability": "mutable",
            "name": "_payments",
            "nameLocation": "2415:9:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2379:45:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
              "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment)"
            },
            "typeName": {
              "id": 1119,
              "keyType": {
                "id": 1116,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2387:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2379:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment)"
              },
              "valueType": {
                "id": 1118,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1117,
                  "name": "Payment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 783,
                  "src": "2398:7:10"
                },
                "referencedDeclaration": 783,
                "src": "2398:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                  "typeString": "struct IPaymentsERC20.Payment"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1124,
            "mutability": "mutable",
            "name": "_balanceOf",
            "nameLocation": "2466:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 2011,
            "src": "2430:46:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1123,
              "keyType": {
                "id": 1121,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2438:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2430:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1122,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2449:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1147,
              "nodeType": "Block",
              "src": "2551:166:10",
              "statements": [
                {
                  "expression": {
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1131,
                      "name": "_erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "2561:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1132,
                      "name": "erc20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "2570:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2561:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "2561:21:10"
                },
                {
                  "expression": {
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1135,
                      "name": "_acceptedCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1107,
                      "src": "2592:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1136,
                      "name": "currencyDescriptor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "2612:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2592:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "2592:38:10"
                },
                {
                  "expression": {
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1139,
                      "name": "_paymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "2640:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 1140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2657:7:10",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_864000_by_1",
                        "typeString": "int_const 864000"
                      },
                      "value": "10"
                    },
                    "src": "2640:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:24:10"
                },
                {
                  "expression": {
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1143,
                      "name": "_isSellerRegistrationRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "2674:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2706:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2674:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "2674:36:10"
                }
              ]
            },
            "id": 1148,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "2503:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "2495:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "currencyDescriptor",
                  "nameLocation": "2531:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1148,
                  "src": "2517:32:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2517:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2494:56:10"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2551:0:10"
            },
            "scope": 2011,
            "src": "2483:234:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              789
            ],
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "3114:76:10",
              "statements": [
                {
                  "expression": {
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1156,
                      "name": "_paymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "3124:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1157,
                      "name": "window",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1151,
                      "src": "3141:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3124:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1159,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:23:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1161,
                        "name": "window",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1151,
                        "src": "3176:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1160,
                      "name": "PaymentWindow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 732,
                      "src": "3162:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3162:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1163,
                  "nodeType": "EmitStatement",
                  "src": "3157:26:10"
                }
              ]
            },
            "documentation": {
              "id": 1149,
              "nodeType": "StructuredDocumentation",
              "src": "2723:325:10",
              "text": " @notice Sets the amount of time available to the operator, after the payment starts,\n  to confirm either the success of the failure of the asset transfer. \n  After this time, the payment moves to FAILED, allowing buyer to withdraw.\n @param window The amount of time available, in seconds."
            },
            "functionSelector": "982ed326",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1154,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1153,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "3104:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3104:9:10"
              }
            ],
            "name": "setPaymentWindow",
            "nameLocation": "3062:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "window",
                  "nameLocation": "3087:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "3079:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3079:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:16:10"
            },
            "returnParameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3114:0:10"
            },
            "scope": 2011,
            "src": "3053:137:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              795
            ],
            "body": {
              "id": 1177,
              "nodeType": "Block",
              "src": "3502:59:10",
              "statements": [
                {
                  "expression": {
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1173,
                      "name": "_isSellerRegistrationRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1111,
                      "src": "3512:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1174,
                      "name": "isRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1168,
                      "src": "3544:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3512:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1176,
                  "nodeType": "ExpressionStatement",
                  "src": "3512:42:10"
                }
              ]
            },
            "documentation": {
              "id": 1166,
              "nodeType": "StructuredDocumentation",
              "src": "3196:204:10",
              "text": " @notice Sets whether sellers are required to register in this contract before being,\n  able to accept payments. \n @param isRequired (bool) if true, registration is required."
            },
            "functionSelector": "1a29b6ab",
            "id": 1178,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1170,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "3488:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3488:9:10"
              }
            ],
            "name": "setIsSellerRegistrationRequired",
            "nameLocation": "3414:31:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "isRequired",
                  "nameLocation": "3451:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "3446:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3446:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3445:17:10"
            },
            "returnParameters": {
              "id": 1172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3502:0:10"
            },
            "scope": 2011,
            "src": "3405:156:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              799
            ],
            "body": {
              "id": 1194,
              "nodeType": "Block",
              "src": "3701:91:10",
              "statements": [
                {
                  "expression": {
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1182,
                        "name": "_isRegisteredSeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1115,
                        "src": "3711:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1185,
                      "indexExpression": {
                        "expression": {
                          "id": 1183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3731:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3731:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3711:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3745:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3711:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1188,
                  "nodeType": "ExpressionStatement",
                  "src": "3711:38:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3774:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3774:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1189,
                      "name": "NewSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "3764:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3764:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1193,
                  "nodeType": "EmitStatement",
                  "src": "3759:26:10"
                }
              ]
            },
            "documentation": {
              "id": 1179,
              "nodeType": "StructuredDocumentation",
              "src": "3567:92:10",
              "text": " @notice Registers msg.sender a seller so that he/she can accept payments."
            },
            "functionSelector": "128b8532",
            "id": 1195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsSeller",
            "nameLocation": "3673:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3689:2:10"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3701:0:10"
            },
            "scope": 2011,
            "src": "3664:128:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              808
            ],
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "4602:1133:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1206,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "4650:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                  "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 700,
                              "src": "4650:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1205,
                            "name": "universeOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "4633:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4633:32:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1209,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4669:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4669:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4633:46:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f70657261746f72206e6f7420617574686f72697a656420666f72207468697320756e6976657273654964",
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4693:45:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8",
                          "typeString": "literal_string \"operator not authorized for this universeId\""
                        },
                        "value": "operator not authorized for this universeId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45856bb038dfc048ddfe6ef1b1ff9fed79a626a7825a223cb3926602fd1a15d8",
                          "typeString": "literal_string \"operator not authorized for this universeId\""
                        }
                      ],
                      "id": 1204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4612:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4612:136:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1214,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:136:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    },
                    "id": 1221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1216,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "4775:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 694,
                          "src": "4775:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1215,
                        "name": "paymentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "4762:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                          "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4762:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1219,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "4793:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                          "typeString": "type(enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "4793:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "src": "4762:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1227,
                  "nodeType": "IfStatement",
                  "src": "4758:84:10",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1223,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "4828:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 694,
                          "src": "4828:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1222,
                        "name": "_refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "4820:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 1225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4820:22:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1226,
                    "nodeType": "ExpressionStatement",
                    "src": "4820:22:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1229,
                        "name": "inp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "4871:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                          "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                          "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                        }
                      ],
                      "id": 1228,
                      "name": "checkPaymentInputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1982,
                      "src": "4852:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$707_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IEIP712Verifier.PaymentInput calldata) view"
                      }
                    },
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "4852:23:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1234,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "4913:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          {
                            "id": 1235,
                            "name": "buyerSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "4918:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 1236,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "4934:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "4934:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1233,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "4906:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$707_calldata_ptr_$_t_bytes_calldata_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct IEIP712Verifier.PaymentInput calldata,bytes calldata,address) view returns (bool)"
                          }
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4906:38:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206275796572207369676e6174757265",
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4958:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b",
                          "typeString": "literal_string \"incorrect buyer signature\""
                        },
                        "value": "incorrect buyer signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e54e90b105c907dcd7a9e297daf09868b92fc7399806387cf58f84f557d8b11b",
                          "typeString": "literal_string \"incorrect buyer signature\""
                        }
                      ],
                      "id": 1232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4885:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:110:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:110:10"
                },
                {
                  "expression": {
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1242,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "5005:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                          "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1245,
                      "indexExpression": {
                        "expression": {
                          "id": 1243,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5015:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "5015:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5005:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_storage",
                        "typeString": "struct IPaymentsERC20.Payment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1247,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "5053:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 762,
                          "src": "5053:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        {
                          "expression": {
                            "id": 1249,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "5091:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 704,
                          "src": "5091:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1251,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "5114:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 706,
                          "src": "5114:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5138:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5138:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1256,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "5184:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                  "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 700,
                              "src": "5184:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1255,
                            "name": "universeFeesCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "5162:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5162:37:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1259,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "5213:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5213:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1261,
                            "name": "_paymentWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "5231:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5213:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1263,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "5259:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 698,
                          "src": "5259:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 1265,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "5283:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 696,
                          "src": "5283:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1246,
                        "name": "Payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "5032:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Payment_$783_storage_ptr_$",
                          "typeString": "type(struct IPaymentsERC20.Payment storage pointer)"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5032:271:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                        "typeString": "struct IPaymentsERC20.Payment memory"
                      }
                    },
                    "src": "5005:298:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "5005:298:10"
                },
                {
                  "assignments": [
                    1271,
                    1273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1271,
                      "mutability": "mutable",
                      "name": "newFunds",
                      "nameLocation": "5322:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1318,
                      "src": "5314:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5314:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1273,
                      "mutability": "mutable",
                      "name": "localFunds",
                      "nameLocation": "5340:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1318,
                      "src": "5332:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5332:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1280,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1275,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5387:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "5387:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1277,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5410:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 696,
                        "src": "5410:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1274,
                      "name": "splitFundingSources",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1926,
                      "src": "5354:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5354:76:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5313:117:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1281,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1271,
                      "src": "5444:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5455:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5444:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1301,
                  "nodeType": "IfStatement",
                  "src": "5440:186:10",
                  "trueBody": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "5458:168:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1289,
                                    "name": "inp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1199,
                                    "src": "5525:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                      "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                    }
                                  },
                                  "id": 1290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 704,
                                  "src": "5525:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1293,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "5544:4:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    ],
                                    "id": 1292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5536:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1291,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5536:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5536:13:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1295,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1271,
                                  "src": "5551:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1286,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1105,
                                      "src": "5504:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1285,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "5497:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1287,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5497:14:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$187",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 168,
                                "src": "5497:27:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5497:63:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5578:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1284,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5472:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5472:143:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "ExpressionStatement",
                        "src": "5472:143:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1302,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "5635:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1305,
                      "indexExpression": {
                        "expression": {
                          "id": 1303,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5646:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "5646:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5635:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1306,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "5660:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5635:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1308,
                  "nodeType": "ExpressionStatement",
                  "src": "5635:35:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1310,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5691:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "5691:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1312,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5706:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "5706:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1314,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "5717:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 706,
                        "src": "5717:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1309,
                      "name": "Payin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "5685:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5685:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "EmitStatement",
                  "src": "5680:48:10"
                }
              ]
            },
            "documentation": {
              "id": 1196,
              "nodeType": "StructuredDocumentation",
              "src": "3798:690:10",
              "text": " @notice Starts the Payment process via relay-by-operator.\n  Executed by an operator, who relays the MetaTX with the buyer's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param buyerSignature The signature of 'inp' by the buyer"
            },
            "functionSelector": "06a212ae",
            "id": 1319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "relayedPay",
            "nameLocation": "4502:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "4544:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "4522:25:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1198,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1197,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "4522:12:10"
                    },
                    "referencedDeclaration": 707,
                    "src": "4522:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "buyerSignature",
                  "nameLocation": "4572:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "4557:29:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4557:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4512:80:10"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4602:0:10"
            },
            "scope": 2011,
            "src": "4493:1242:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              817
            ],
            "body": {
              "id": 1445,
              "nodeType": "Block",
              "src": "6534:1168:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1329,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6565:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6565:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1331,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "6579:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 704,
                          "src": "6579:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6565:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792062757965722063616e206578656375746520746869732066756e6374696f6e",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6602:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3",
                          "typeString": "literal_string \"only buyer can execute this function\""
                        },
                        "value": "only buyer can execute this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed77b6fab4d1cfff34d1cddcddc58dfaed68e3758a29fa5314546fea958668e3",
                          "typeString": "literal_string \"only buyer can execute this function\""
                        }
                      ],
                      "id": 1328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6544:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6544:106:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "6544:106:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1338,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "6677:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 694,
                          "src": "6677:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1337,
                        "name": "paymentState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1810,
                        "src": "6664:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                          "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6664:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1341,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "6695:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                          "typeString": "type(enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "6695:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "src": "6664:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1349,
                  "nodeType": "IfStatement",
                  "src": "6660:84:10",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1345,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "6730:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "paymentId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 694,
                          "src": "6730:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1344,
                        "name": "_refund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "6722:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                          "typeString": "function (bytes32)"
                        }
                      },
                      "id": 1347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6722:22:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1348,
                    "nodeType": "ExpressionStatement",
                    "src": "6722:22:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1351,
                        "name": "inp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "6773:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                          "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                          "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                        }
                      ],
                      "id": 1350,
                      "name": "checkPaymentInputs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1982,
                      "src": "6754:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$707_calldata_ptr_$returns$__$",
                        "typeString": "function (struct IEIP712Verifier.PaymentInput calldata) view"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6754:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "6754:23:10"
                },
                {
                  "assignments": [
                    1355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1355,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "6795:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1445,
                      "src": "6787:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1354,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6787:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1360,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1357,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "6823:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "universeId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 700,
                        "src": "6823:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1356,
                      "name": "universeOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1090,
                      "src": "6806:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6806:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6787:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1363,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "6876:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          {
                            "id": 1364,
                            "name": "operatorSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1325,
                            "src": "6881:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 1365,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "6900:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1362,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "6869:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_PaymentInput_$707_calldata_ptr_$_t_bytes_calldata_ptr_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (struct IEIP712Verifier.PaymentInput calldata,bytes calldata,address) view returns (bool)"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6869:40:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e636f7272656374206f70657261746f72207369676e6174757265",
                        "id": 1367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6923:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c",
                          "typeString": "literal_string \"incorrect operator signature\""
                        },
                        "value": "incorrect operator signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69b9c38765404b7e565ec6620d782992887c609aefe581d73aa905e059f9ac3c",
                          "typeString": "literal_string \"incorrect operator signature\""
                        }
                      ],
                      "id": 1361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6848:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6848:115:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "6848:115:10"
                },
                {
                  "expression": {
                    "id": 1395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1370,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "6974:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                          "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1373,
                      "indexExpression": {
                        "expression": {
                          "id": 1371,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "6984:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "6984:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6974:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_storage",
                        "typeString": "struct IPaymentsERC20.Payment storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1375,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "7022:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 762,
                          "src": "7022:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        {
                          "expression": {
                            "id": 1377,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "7060:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "buyer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 704,
                          "src": "7060:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 1379,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "7083:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 706,
                          "src": "7083:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1381,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1355,
                          "src": "7107:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1383,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1323,
                                "src": "7151:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                  "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "universeId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 700,
                              "src": "7151:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1382,
                            "name": "universeFeesCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "7129:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7129:37:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1386,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "7180:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7180:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1388,
                            "name": "_paymentWindow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "7198:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7180:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1390,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "7226:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 698,
                          "src": "7226:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "expression": {
                            "id": 1392,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "7250:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 696,
                          "src": "7250:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1374,
                        "name": "Payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "7001:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Payment_$783_storage_ptr_$",
                          "typeString": "type(struct IPaymentsERC20.Payment storage pointer)"
                        }
                      },
                      "id": 1394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7001:269:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                        "typeString": "struct IPaymentsERC20.Payment memory"
                      }
                    },
                    "src": "6974:296:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "id": 1396,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:296:10"
                },
                {
                  "assignments": [
                    1398,
                    1400
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1398,
                      "mutability": "mutable",
                      "name": "newFunds",
                      "nameLocation": "7289:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1445,
                      "src": "7281:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1397,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7281:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1400,
                      "mutability": "mutable",
                      "name": "localFunds",
                      "nameLocation": "7307:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1445,
                      "src": "7299:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1399,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7299:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1407,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1402,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7354:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "7354:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1404,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7377:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 696,
                        "src": "7377:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1401,
                      "name": "splitFundingSources",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1926,
                      "src": "7321:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7321:76:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7280:117:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1408,
                      "name": "newFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1398,
                      "src": "7411:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7422:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7411:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1428,
                  "nodeType": "IfStatement",
                  "src": "7407:186:10",
                  "trueBody": {
                    "id": 1427,
                    "nodeType": "Block",
                    "src": "7425:168:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1416,
                                    "name": "inp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1323,
                                    "src": "7492:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                      "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                    }
                                  },
                                  "id": 1417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 704,
                                  "src": "7492:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1420,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "7511:4:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                                        "typeString": "contract PaymentsERC20"
                                      }
                                    ],
                                    "id": 1419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7503:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1418,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7503:7:10",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7503:13:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1422,
                                  "name": "newFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1398,
                                  "src": "7518:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1413,
                                      "name": "_erc20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1105,
                                      "src": "7471:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1412,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "7464:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 1414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7464:14:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$187",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 168,
                                "src": "7464:27:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7464:63:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433230207472616e73666572206661696c6564",
                              "id": 1424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7545:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              },
                              "value": "ERC20 transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
                                "typeString": "literal_string \"ERC20 transfer failed\""
                              }
                            ],
                            "id": 1411,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7439:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7439:143:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1426,
                        "nodeType": "ExpressionStatement",
                        "src": "7439:143:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1429,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "7602:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1432,
                      "indexExpression": {
                        "expression": {
                          "id": 1430,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7613:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "7613:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7602:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1433,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "7627:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7602:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1435,
                  "nodeType": "ExpressionStatement",
                  "src": "7602:35:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1437,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7658:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "paymentId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 694,
                        "src": "7658:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1439,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7673:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 704,
                        "src": "7673:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1441,
                          "name": "inp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "7684:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                            "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                          }
                        },
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 706,
                        "src": "7684:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1436,
                      "name": "Payin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "7652:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7652:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1444,
                  "nodeType": "EmitStatement",
                  "src": "7647:48:10"
                }
              ]
            },
            "documentation": {
              "id": 1320,
              "nodeType": "StructuredDocumentation",
              "src": "5741:693:10",
              "text": " @notice Starts Payment process directly by the buyer.\n  Executed by the buyer, who relays the MetaTX with the operator's signature.\n  The buyer must have approved the amount to this contract before.\n  If all requirements are fulfilled, it stores the data relevant\n  for the next steps of the payment, and it locks the ERC20\n  in this contract.\n @dev Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks.\n  Moves payment to ASSET_TRANSFERRING state.\n @param inp The struct containing all required payment data\n @param operatorSignature The signature of 'inp' by the operator"
            },
            "functionSelector": "2ab3433c",
            "id": 1446,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "6448:3:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "6474:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "6452:25:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1322,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1321,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "6452:12:10"
                    },
                    "referencedDeclaration": 707,
                    "src": "6452:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "operatorSignature",
                  "nameLocation": "6494:17:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "6479:32:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1324,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6479:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6451:61:10"
            },
            "returnParameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6534:0:10"
            },
            "scope": 2011,
            "src": "6439:1263:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              823
            ],
            "body": {
              "id": 1520,
              "nodeType": "Block",
              "src": "8034:590:10",
              "statements": [
                {
                  "assignments": [
                    1454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1454,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "8059:1:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1520,
                      "src": "8044:16:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                        "typeString": "struct IPaymentsERC20.Payment"
                      },
                      "typeName": {
                        "id": 1453,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1452,
                          "name": "Payment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 783,
                          "src": "8044:7:10"
                        },
                        "referencedDeclaration": 783,
                        "src": "8044:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                          "typeString": "struct IPaymentsERC20.Payment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1458,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1455,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "8063:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                        "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1457,
                    "indexExpression": {
                      "id": 1456,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1449,
                      "src": "8073:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8063:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8044:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1460,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8114:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8114:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1462,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "8128:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                              "typeString": "struct IPaymentsERC20.Payment memory"
                            }
                          },
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 774,
                          "src": "8128:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8114:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72697a6564",
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8152:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        },
                        "value": "only payment operator is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        }
                      ],
                      "id": 1459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8093:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8093:106:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "8093:106:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1469,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "8230:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 762,
                          "src": "8230:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1472,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1449,
                              "src": "8271:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1471,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "8258:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8258:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "8230:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207472616e7366657272696e67207374617465",
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8295:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        },
                        "value": "payment not initially in asset transferring state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        }
                      ],
                      "id": 1468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8209:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8209:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1477,
                  "nodeType": "ExpressionStatement",
                  "src": "8209:147:10"
                },
                {
                  "expression": {
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1478,
                          "name": "_payments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1120,
                          "src": "8366:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                            "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                          }
                        },
                        "id": 1480,
                        "indexExpression": {
                          "id": 1479,
                          "name": "paymentId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1449,
                          "src": "8376:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8366:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$783_storage",
                          "typeString": "struct IPaymentsERC20.Payment storage ref"
                        }
                      },
                      "id": 1481,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 768,
                      "src": "8366:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1482,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "8395:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                          "typeString": "type(enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Paid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 764,
                      "src": "8395:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "src": "8366:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "id": 1485,
                  "nodeType": "ExpressionStatement",
                  "src": "8366:40:10"
                },
                {
                  "assignments": [
                    1487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1487,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "8424:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1520,
                      "src": "8416:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1486,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8416:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1497,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1489,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "8453:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "8453:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1493,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1454,
                              "src": "8471:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                                "typeString": "struct IPaymentsERC20.Payment memory"
                              }
                            },
                            "id": 1494,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "feeBPS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 780,
                            "src": "8471:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "id": 1492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8463:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1491,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8463:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8463:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1488,
                      "name": "computeFeeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2010,
                      "src": "8436:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8436:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8416:65:10"
                },
                {
                  "expression": {
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1498,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "8491:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1501,
                      "indexExpression": {
                        "expression": {
                          "id": 1499,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "8502:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 772,
                        "src": "8502:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8491:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1502,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1454,
                              "src": "8516:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                                "typeString": "struct IPaymentsERC20.Payment memory"
                              }
                            },
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 782,
                            "src": "8516:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1504,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "8527:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8516:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1506,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8515:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8491:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "8491:46:10"
                },
                {
                  "expression": {
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1509,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "8547:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1512,
                      "indexExpression": {
                        "expression": {
                          "id": 1510,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "8558:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "feesCollector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 776,
                        "src": "8558:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8547:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1513,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1487,
                      "src": "8578:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8547:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "8547:40:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1517,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "8607:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1516,
                      "name": "Paid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "8602:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8602:15:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1519,
                  "nodeType": "EmitStatement",
                  "src": "8597:20:10"
                }
              ]
            },
            "documentation": {
              "id": 1447,
              "nodeType": "StructuredDocumentation",
              "src": "7708:263:10",
              "text": " @notice Confirms the asset transfer.\n  Needs to be executed by the operator.\n  Updates balances of seller and feesCollector.\n @dev Moves payment to PAID state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "b3080298",
            "id": 1521,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferSuccess",
            "nameLocation": "7985:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1449,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "8014:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1521,
                  "src": "8006:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1448,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8006:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8005:19:10"
            },
            "returnParameters": {
              "id": 1451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8034:0:10"
            },
            "scope": 2011,
            "src": "7976:648:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              829
            ],
            "body": {
              "id": 1552,
              "nodeType": "Block",
              "src": "9055:327:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1528,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9086:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9086:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1530,
                              "name": "_payments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "9100:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                                "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                              }
                            },
                            "id": 1532,
                            "indexExpression": {
                              "id": 1531,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "9110:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9100:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Payment_$783_storage",
                              "typeString": "struct IPaymentsERC20.Payment storage ref"
                            }
                          },
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "operator",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 774,
                          "src": "9100:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9086:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207061796d656e74206f70657261746f7220697320617574686f72697a6564",
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9143:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        },
                        "value": "only payment operator is authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d731f21c2461260bc621c68b885a49978c149a5ced4ba67c7977e9c0e4f678c",
                          "typeString": "literal_string \"only payment operator is authorized\""
                        }
                      ],
                      "id": 1527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9065:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9065:125:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "9065:125:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1539,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "9221:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "AssetTransferring",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 762,
                          "src": "9221:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1542,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1524,
                              "src": "9262:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1541,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "9249:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9249:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "9221:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e74206e6f7420696e697469616c6c7920696e206173736574207472616e7366657272696e67207374617465",
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9286:51:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        },
                        "value": "payment not initially in asset transferring state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3844380549160a2ba9463c0f369942ef0314a22f87184d2ec1f22346af7f258",
                          "typeString": "literal_string \"payment not initially in asset transferring state\""
                        }
                      ],
                      "id": 1538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9200:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9200:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1547,
                  "nodeType": "ExpressionStatement",
                  "src": "9200:147:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1549,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1524,
                        "src": "9365:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1548,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "9357:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9357:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "9357:18:10"
                }
              ]
            },
            "documentation": {
              "id": 1522,
              "nodeType": "StructuredDocumentation",
              "src": "8630:363:10",
              "text": " @notice Confirms the failure of asset transfer and refunds buyer.\n  Needs to be executed by the operator.\n  Buyer's balance is updated, allowing explicit withdrawal.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2ce10fcf",
            "id": 1553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assetTransferFailed",
            "nameLocation": "9007:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1524,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9035:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1553,
                  "src": "9027:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1523,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9027:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9026:19:10"
            },
            "returnParameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9055:0:10"
            },
            "scope": 2011,
            "src": "8998:384:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              835
            ],
            "body": {
              "id": 1573,
              "nodeType": "Block",
              "src": "9839:171:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1561,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1556,
                              "src": "9883:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1560,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "9870:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9870:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1563,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "9897:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Failed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 763,
                          "src": "9897:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "9870:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c6564207374617465",
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9924:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        },
                        "value": "refund requires payment in failed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        }
                      ],
                      "id": 1559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9849:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9849:126:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1568,
                  "nodeType": "ExpressionStatement",
                  "src": "9849:126:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1570,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "9993:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1569,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "9985:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9985:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "9985:18:10"
                }
              ]
            },
            "documentation": {
              "id": 1554,
              "nodeType": "StructuredDocumentation",
              "src": "9388:402:10",
              "text": " @notice Moves buyer's provided funds to buyer's balance.\n  Anybody can call this function.\n  Requires current state == FAILED to proceed.\n  After updating buyer's balance, he/she can later withdraw.\n  It resets all data related to this payment.\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "7249fbb6",
            "id": 1574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "9804:6:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "9819:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "9811:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9811:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9810:19:10"
            },
            "returnParameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9839:0:10"
            },
            "scope": 2011,
            "src": "9795:215:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              841
            ],
            "body": {
              "id": 1597,
              "nodeType": "Block",
              "src": "10436:192:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1582,
                              "name": "paymentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1577,
                              "src": "10480:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1581,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "10467:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10467:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1584,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "10494:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Failed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 763,
                          "src": "10494:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "10467:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726566756e64207265717569726573207061796d656e7420696e206661696c6564207374617465",
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10521:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        },
                        "value": "refund requires payment in failed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe3899b89b2e9b6ed4a012e84cc7ab44bff4d70abb74b00e4d32969482dbd1c5",
                          "typeString": "literal_string \"refund requires payment in failed state\""
                        }
                      ],
                      "id": 1580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10446:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10446:126:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "10446:126:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1591,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1577,
                        "src": "10590:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1590,
                      "name": "_refund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "10582:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10582:18:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1593,
                  "nodeType": "ExpressionStatement",
                  "src": "10582:18:10"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1594,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1680,
                      "src": "10610:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10610:11:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1596,
                  "nodeType": "ExpressionStatement",
                  "src": "10610:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1575,
              "nodeType": "StructuredDocumentation",
              "src": "10016:360:10",
              "text": " @notice Exectutes refund and withdraw in one transaction.\n  Needs to be called by buyer.\n  All of buyer's balance in the contract is withdrawn,\n  not only the part that was locked in this particular paymentId\n @dev Moves payment to NOT_STARTED state.\n @param paymentId The unique ID that identifies the payment."
            },
            "functionSelector": "2593308b",
            "id": 1598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refundAndWithdraw",
            "nameLocation": "10390:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1577,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "10416:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1598,
                  "src": "10408:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1576,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10408:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10407:19:10"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10436:0:10"
            },
            "scope": 2011,
            "src": "10381:247:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              845
            ],
            "body": {
              "id": 1605,
              "nodeType": "Block",
              "src": "10783:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1602,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1680,
                      "src": "10793:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10793:11:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1604,
                  "nodeType": "ExpressionStatement",
                  "src": "10793:11:10"
                }
              ]
            },
            "documentation": {
              "id": 1599,
              "nodeType": "StructuredDocumentation",
              "src": "10634:115:10",
              "text": " @notice Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender"
            },
            "functionSelector": "3ccfd60b",
            "id": 1606,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "10763:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10771:2:10"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10783:0:10"
            },
            "scope": 2011,
            "src": "10754:57:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1638,
              "nodeType": "Block",
              "src": "11026:182:10",
              "statements": [
                {
                  "assignments": [
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1614,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "11051:1:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1638,
                      "src": "11036:16:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                        "typeString": "struct IPaymentsERC20.Payment"
                      },
                      "typeName": {
                        "id": 1613,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1612,
                          "name": "Payment",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 783,
                          "src": "11036:7:10"
                        },
                        "referencedDeclaration": 783,
                        "src": "11036:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                          "typeString": "struct IPaymentsERC20.Payment"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1618,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1615,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "11055:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                        "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1617,
                    "indexExpression": {
                      "id": 1616,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1609,
                      "src": "11065:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11055:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11036:39:10"
                },
                {
                  "expression": {
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1619,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "11085:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1622,
                      "indexExpression": {
                        "expression": {
                          "id": 1620,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "11096:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1621,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 770,
                        "src": "11096:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11085:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1623,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "11108:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                          "typeString": "struct IPaymentsERC20.Payment memory"
                        }
                      },
                      "id": 1624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 782,
                      "src": "11108:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11085:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1626,
                  "nodeType": "ExpressionStatement",
                  "src": "11085:31:10"
                },
                {
                  "expression": {
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11126:27:10",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1627,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "11133:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                          "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1629,
                      "indexExpression": {
                        "id": 1628,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1609,
                        "src": "11143:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11133:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_storage",
                        "typeString": "struct IPaymentsERC20.Payment storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1631,
                  "nodeType": "ExpressionStatement",
                  "src": "11126:27:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1633,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1609,
                        "src": "11182:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1634,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1614,
                          "src": "11193:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                            "typeString": "struct IPaymentsERC20.Payment memory"
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buyer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 770,
                        "src": "11193:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1632,
                      "name": "BuyerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 742,
                      "src": "11168:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11168:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1637,
                  "nodeType": "EmitStatement",
                  "src": "11163:38:10"
                }
              ]
            },
            "documentation": {
              "id": 1607,
              "nodeType": "StructuredDocumentation",
              "src": "10843:134:10",
              "text": " @dev Executes refund, moves to NOT_STARTED state\n @param paymentId The unique ID that identifies the payment."
            },
            "id": 1639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refund",
            "nameLocation": "10991:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1609,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "11007:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1639,
                  "src": "10999:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10999:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10998:19:10"
            },
            "returnParameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11026:0:10"
            },
            "scope": 2011,
            "src": "10982:226:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1679,
              "nodeType": "Block",
              "src": "11479:253:10",
              "statements": [
                {
                  "assignments": [
                    1644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1644,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "11497:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1679,
                      "src": "11489:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11489:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1649,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1645,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "11506:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1648,
                    "indexExpression": {
                      "expression": {
                        "id": 1646,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "11517:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11517:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11506:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11489:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1651,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1644,
                          "src": "11546:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11555:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11546:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742077697468647261773a2062616c616e6365206973207a65726f",
                        "id": 1654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11558:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84",
                          "typeString": "literal_string \"cannot withdraw: balance is zero\""
                        },
                        "value": "cannot withdraw: balance is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b21d0c33d5523981c9af122f57985912be0d2e4fec9c185f41e57ef4c3a1d84",
                          "typeString": "literal_string \"cannot withdraw: balance is zero\""
                        }
                      ],
                      "id": 1650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11538:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11538:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1656,
                  "nodeType": "ExpressionStatement",
                  "src": "11538:55:10"
                },
                {
                  "expression": {
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1657,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "11603:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1660,
                      "indexExpression": {
                        "expression": {
                          "id": 1658,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11614:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11614:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11603:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11628:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11603:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1663,
                  "nodeType": "ExpressionStatement",
                  "src": "11603:26:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1668,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11663:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11663:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1670,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "11675:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1665,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "11646:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1664,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "11639:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11639:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 136,
                      "src": "11639:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11639:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1672,
                  "nodeType": "ExpressionStatement",
                  "src": "11639:43:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1674,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11706:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11706:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1676,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "11718:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1673,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "11697:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11697:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1678,
                  "nodeType": "EmitStatement",
                  "src": "11692:33:10"
                }
              ]
            },
            "documentation": {
              "id": 1640,
              "nodeType": "StructuredDocumentation",
              "src": "11214:231:10",
              "text": " @dev (private) Transfers ERC20 avaliable in this\n  contract's balanceOf[msg.sender] to msg.sender\n  Follows standard Checks-Effects-Interactions pattern\n  to protect against re-entrancy attacks."
            },
            "id": 1680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "11459:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11468:2:10"
            },
            "returnParameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11479:0:10"
            },
            "scope": 2011,
            "src": "11450:282:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              851
            ],
            "body": {
              "id": 1688,
              "nodeType": "Block",
              "src": "11941:53:10",
              "statements": [
                {
                  "expression": {
                    "id": 1686,
                    "name": "_isSellerRegistrationRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1111,
                    "src": "11958:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1685,
                  "id": 1687,
                  "nodeType": "Return",
                  "src": "11951:36:10"
                }
              ]
            },
            "documentation": {
              "id": 1681,
              "nodeType": "StructuredDocumentation",
              "src": "11761:102:10",
              "text": " @notice Returns true if sellers need to be registered to be able to accept payments"
            },
            "functionSelector": "221a832e",
            "id": 1689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSellerRegistrationRequired",
            "nameLocation": "11881:28:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11909:2:10"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1684,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1689,
                  "src": "11935:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1683,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11935:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11934:6:10"
            },
            "scope": 2011,
            "src": "11872:122:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              859
            ],
            "body": {
              "id": 1701,
              "nodeType": "Block",
              "src": "12251:49:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1697,
                      "name": "_isRegisteredSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1115,
                      "src": "12268:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1699,
                    "indexExpression": {
                      "id": 1698,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "12288:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12268:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1696,
                  "id": 1700,
                  "nodeType": "Return",
                  "src": "12261:32:10"
                }
              ]
            },
            "documentation": {
              "id": 1690,
              "nodeType": "StructuredDocumentation",
              "src": "12000:171:10",
              "text": " @notice Returns true if the address provided is a registered seller\n @param addr the address that is queried\n @return isRegistered as seller"
            },
            "functionSelector": "78e96fb5",
            "id": 1702,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isRegisteredSeller",
            "nameLocation": "12189:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1692,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "12216:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "12208:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12208:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12207:14:10"
            },
            "returnParameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1695,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1702,
                  "src": "12245:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12245:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12244:6:10"
            },
            "scope": 2011,
            "src": "12180:120:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              865
            ],
            "body": {
              "id": 1710,
              "nodeType": "Block",
              "src": "12480:30:10",
              "statements": [
                {
                  "expression": {
                    "id": 1708,
                    "name": "_erc20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1105,
                    "src": "12497:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1707,
                  "id": 1709,
                  "nodeType": "Return",
                  "src": "12490:13:10"
                }
              ]
            },
            "documentation": {
              "id": 1703,
              "nodeType": "StructuredDocumentation",
              "src": "12306:120:10",
              "text": " @notice Returns the address of the ERC20 contract from which\n  tokens are accepted for payments"
            },
            "functionSelector": "785e9e86",
            "id": 1711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "erc20",
            "nameLocation": "12440:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12445:2:10"
            },
            "returnParameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1706,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "12471:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12471:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12470:9:10"
            },
            "scope": 2011,
            "src": "12431:79:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              873
            ],
            "body": {
              "id": 1723,
              "nodeType": "Block",
              "src": "12813:40:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1719,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "12830:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1721,
                    "indexExpression": {
                      "id": 1720,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1714,
                      "src": "12841:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12830:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1718,
                  "id": 1722,
                  "nodeType": "Return",
                  "src": "12823:23:10"
                }
              ]
            },
            "documentation": {
              "id": 1712,
              "nodeType": "StructuredDocumentation",
              "src": "12516:227:10",
              "text": " @notice Returns the local ERC20 balance of address that is stored in this\n  contract, and hence, available for withdrawal.\n @param addr the address that is queried\n @return the local balance"
            },
            "functionSelector": "70a08231",
            "id": 1724,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "12757:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "12775:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1724,
                  "src": "12767:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12767:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12766:14:10"
            },
            "returnParameters": {
              "id": 1718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1724,
                  "src": "12804:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12804:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12803:9:10"
            },
            "scope": 2011,
            "src": "12748:105:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              881
            ],
            "body": {
              "id": 1739,
              "nodeType": "Block",
              "src": "13120:54:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1736,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1727,
                        "src": "13162:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1733,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "13144:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1732,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "13137:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13137:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "13137:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13137:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1731,
                  "id": 1738,
                  "nodeType": "Return",
                  "src": "13130:37:10"
                }
              ]
            },
            "documentation": {
              "id": 1725,
              "nodeType": "StructuredDocumentation",
              "src": "12859:186:10",
              "text": " @notice Returns ERC20 balance of address in the ERC20 contract\n @param addr the address that is queried\n @return the balance in the external ERC20 contract"
            },
            "functionSelector": "02519da3",
            "id": 1740,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "erc20BalanceOf",
            "nameLocation": "13059:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1727,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "13082:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "13074:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13074:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13073:14:10"
            },
            "returnParameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "13111:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13111:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13110:9:10"
            },
            "scope": 2011,
            "src": "13050:124:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              889
            ],
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "13480:70:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1752,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1743,
                        "src": "13522:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1755,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "13537:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                              "typeString": "contract PaymentsERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PaymentsERC20_$2011",
                              "typeString": "contract PaymentsERC20"
                            }
                          ],
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13529:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1753,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13529:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13529:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1749,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "13504:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1748,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "13497:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13497:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 146,
                      "src": "13497:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13497:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1747,
                  "id": 1758,
                  "nodeType": "Return",
                  "src": "13490:53:10"
                }
              ]
            },
            "documentation": {
              "id": 1741,
              "nodeType": "StructuredDocumentation",
              "src": "13180:231:10",
              "text": " @notice Returns the allowance that the buyer has approved\n  directly in the ERC20 contract in favour of this contract.\n @param buyer the address of the buyer\n @return the amount allowed by buyer"
            },
            "functionSelector": "3e5beab9",
            "id": 1760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "13425:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1743,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "13443:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "13435:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13435:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13434:15:10"
            },
            "returnParameters": {
              "id": 1747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1746,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "13471:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13471:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13470:9:10"
            },
            "scope": 2011,
            "src": "13416:134:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              898
            ],
            "body": {
              "id": 1773,
              "nodeType": "Block",
              "src": "13847:44:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1769,
                      "name": "_payments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "13864:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                        "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                      }
                    },
                    "id": 1771,
                    "indexExpression": {
                      "id": 1770,
                      "name": "paymentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "13874:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13864:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage",
                      "typeString": "struct IPaymentsERC20.Payment storage ref"
                    }
                  },
                  "functionReturnParameters": 1768,
                  "id": 1772,
                  "nodeType": "Return",
                  "src": "13857:27:10"
                }
              ]
            },
            "documentation": {
              "id": 1761,
              "nodeType": "StructuredDocumentation",
              "src": "13556:179:10",
              "text": " @notice Returns all data stored in a payment\n @param paymentId The unique ID that identifies the payment.\n @return the struct stored for the payment"
            },
            "functionSelector": "dd115ab2",
            "id": 1774,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentInfo",
            "nameLocation": "13749:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "13769:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "13761:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13761:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13760:19:10"
            },
            "returnParameters": {
              "id": 1768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "13827:14:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Payment_$783_memory_ptr",
                    "typeString": "struct IPaymentsERC20.Payment"
                  },
                  "typeName": {
                    "id": 1766,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1765,
                      "name": "Payment",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 783,
                      "src": "13827:7:10"
                    },
                    "referencedDeclaration": 783,
                    "src": "13827:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Payment_$783_storage_ptr",
                      "typeString": "struct IPaymentsERC20.Payment"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13826:16:10"
            },
            "scope": 2011,
            "src": "13740:151:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              907
            ],
            "body": {
              "id": 1809,
              "nodeType": "Block",
              "src": "14325:240:10",
              "statements": [
                {
                  "assignments": [
                    1785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1785,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "14342:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1809,
                      "src": "14335:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      },
                      "typeName": {
                        "id": 1784,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1783,
                          "name": "States",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 765,
                          "src": "14335:6:10"
                        },
                        "referencedDeclaration": 765,
                        "src": "14335:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1790,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1786,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "14350:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                          "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                        }
                      },
                      "id": 1788,
                      "indexExpression": {
                        "id": 1787,
                        "name": "paymentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1777,
                        "src": "14360:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14350:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Payment_$783_storage",
                        "typeString": "struct IPaymentsERC20.Payment storage ref"
                      }
                    },
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "state",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 768,
                    "src": "14350:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14335:41:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      },
                      "id": 1794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1791,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1785,
                        "src": "14403:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 1792,
                          "name": "States",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "14412:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                            "typeString": "type(enum IPaymentsERC20.States)"
                          }
                        },
                        "id": 1793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "AssetTransferring",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 762,
                        "src": "14412:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        }
                      },
                      "src": "14403:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1795,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "14452:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "14452:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1797,
                            "name": "_payments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "14470:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Payment_$783_storage_$",
                              "typeString": "mapping(bytes32 => struct IPaymentsERC20.Payment storage ref)"
                            }
                          },
                          "id": 1799,
                          "indexExpression": {
                            "id": 1798,
                            "name": "paymentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1777,
                            "src": "14480:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14470:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Payment_$783_storage",
                            "typeString": "struct IPaymentsERC20.Payment storage ref"
                          }
                        },
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 778,
                        "src": "14470:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14452:53:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "14403:102:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1806,
                  "nodeType": "IfStatement",
                  "src": "14386:150:10",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "id": 1803,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "14523:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                          "typeString": "type(enum IPaymentsERC20.States)"
                        }
                      },
                      "id": 1804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Failed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 763,
                      "src": "14523:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$765",
                        "typeString": "enum IPaymentsERC20.States"
                      }
                    },
                    "functionReturnParameters": 1782,
                    "id": 1805,
                    "nodeType": "Return",
                    "src": "14516:20:10"
                  }
                },
                {
                  "expression": {
                    "id": 1807,
                    "name": "state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1785,
                    "src": "14553:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "functionReturnParameters": 1782,
                  "id": 1808,
                  "nodeType": "Return",
                  "src": "14546:12:10"
                }
              ]
            },
            "documentation": {
              "id": 1775,
              "nodeType": "StructuredDocumentation",
              "src": "13897:353:10",
              "text": " @notice Returns the state of a payment.\n  It maps 1-to-1 with the stored variable, with the exeption of\n  an ASSET_TRANSFERRING that has gone beyond expirationTime.\n @param paymentId The unique ID that identifies the payment.\n @return the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid"
            },
            "functionSelector": "34b778ed",
            "id": 1810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentState",
            "nameLocation": "14264:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "paymentId",
                  "nameLocation": "14285:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "14277:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14277:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14276:19:10"
            },
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1781,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1810,
                  "src": "14317:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_States_$765",
                    "typeString": "enum IPaymentsERC20.States"
                  },
                  "typeName": {
                    "id": 1780,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1779,
                      "name": "States",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 765,
                      "src": "14317:6:10"
                    },
                    "referencedDeclaration": 765,
                    "src": "14317:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$765",
                      "typeString": "enum IPaymentsERC20.States"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14316:8:10"
            },
            "scope": 2011,
            "src": "14255:310:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              913
            ],
            "body": {
              "id": 1818,
              "nodeType": "Block",
              "src": "14851:38:10",
              "statements": [
                {
                  "expression": {
                    "id": 1816,
                    "name": "_paymentWindow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1109,
                    "src": "14868:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1815,
                  "id": 1817,
                  "nodeType": "Return",
                  "src": "14861:21:10"
                }
              ]
            },
            "documentation": {
              "id": 1811,
              "nodeType": "StructuredDocumentation",
              "src": "14571:218:10",
              "text": " @notice Returns the amount of seconds that a payment\n  can remain in ASSET_TRANSFERRING state without positive\n  or negative confirmation by the operator\n @return the payment window"
            },
            "functionSelector": "cab55d56",
            "id": 1819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentWindow",
            "nameLocation": "14803:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14816:2:10"
            },
            "returnParameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1819,
                  "src": "14842:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14842:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14841:9:10"
            },
            "scope": 2011,
            "src": "14794:95:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              919
            ],
            "body": {
              "id": 1827,
              "nodeType": "Block",
              "src": "15109:41:10",
              "statements": [
                {
                  "expression": {
                    "id": 1825,
                    "name": "_acceptedCurrency",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1107,
                    "src": "15126:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1824,
                  "id": 1826,
                  "nodeType": "Return",
                  "src": "15119:24:10"
                }
              ]
            },
            "documentation": {
              "id": 1820,
              "nodeType": "StructuredDocumentation",
              "src": "14895:143:10",
              "text": " @notice Returns a descriptor about the currency that this contract accepts\n @return the string describing the currency"
            },
            "functionSelector": "1c6d7675",
            "id": 1828,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptedCurrency",
            "nameLocation": "15052:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15068:2:10"
            },
            "returnParameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1823,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1828,
                  "src": "15094:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1822,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15094:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15093:15:10"
            },
            "scope": 2011,
            "src": "15043:107:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              929
            ],
            "body": {
              "id": 1844,
              "nodeType": "Block",
              "src": "15628:58:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1839,
                          "name": "buyer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1831,
                          "src": "15663:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1838,
                        "name": "maxFundsAvailable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1885,
                        "src": "15645:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 1840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15645:24:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 1841,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1833,
                      "src": "15673:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15645:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1837,
                  "id": 1843,
                  "nodeType": "Return",
                  "src": "15638:41:10"
                }
              ]
            },
            "documentation": {
              "id": 1829,
              "nodeType": "StructuredDocumentation",
              "src": "15156:351:10",
              "text": " @notice Returns true if the 'amount' required for a payment is available to this contract.\n  In more detail: returns true if the sum of the buyer's local balance in this contract,\n  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'\n @return a bool, true is enough available"
            },
            "functionSelector": "9cfd495c",
            "id": 1845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enoughFundsAvailable",
            "nameLocation": "15521:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1831,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "15550:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "15542:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15542:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15565:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "15557:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15557:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15541:31:10"
            },
            "returnParameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1845,
                  "src": "15618:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15618:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15617:6:10"
            },
            "scope": 2011,
            "src": "15512:174:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              937
            ],
            "body": {
              "id": 1884,
              "nodeType": "Block",
              "src": "16047:283:10",
              "statements": [
                {
                  "assignments": [
                    1854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1854,
                      "mutability": "mutable",
                      "name": "approved",
                      "nameLocation": "16065:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "16057:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1853,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16057:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1858,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1856,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1848,
                        "src": "16086:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1855,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1760,
                      "src": "16076:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16076:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16057:35:10"
                },
                {
                  "assignments": [
                    1860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1860,
                      "mutability": "mutable",
                      "name": "erc20Balance",
                      "nameLocation": "16110:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "16102:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1859,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16102:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1867,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1865,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1848,
                        "src": "16150:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1862,
                            "name": "_erc20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "16132:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1861,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "16125:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16125:14:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$187",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126,
                      "src": "16125:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16125:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16102:54:10"
                },
                {
                  "assignments": [
                    1869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1869,
                      "mutability": "mutable",
                      "name": "externalAvailable",
                      "nameLocation": "16174:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1884,
                      "src": "16166:25:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16166:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1877,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1870,
                            "name": "approved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "16195:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1871,
                            "name": "erc20Balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1860,
                            "src": "16206:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16195:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1873,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "16194:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 1875,
                      "name": "erc20Balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1860,
                      "src": "16257:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16194:75:10",
                    "trueExpression": {
                      "id": 1874,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1854,
                      "src": "16234:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16166:103:10"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1878,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "16286:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1880,
                      "indexExpression": {
                        "id": 1879,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1848,
                        "src": "16297:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16286:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1881,
                      "name": "externalAvailable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1869,
                      "src": "16306:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16286:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1852,
                  "id": 1883,
                  "nodeType": "Return",
                  "src": "16279:44:10"
                }
              ]
            },
            "documentation": {
              "id": 1846,
              "nodeType": "StructuredDocumentation",
              "src": "15692:278:10",
              "text": " @notice Returns the maximum amount of funds available to a buyer\n  In more detail: returns the sum of the buyer's local balance in this contract,\n  plus the funds available and approved in the ERC20 contract.\n @return the max funds available"
            },
            "functionSelector": "c67eb9e5",
            "id": 1885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxFundsAvailable",
            "nameLocation": "15984:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "16010:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1885,
                  "src": "16002:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16002:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16001:15:10"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1885,
                  "src": "16038:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16038:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16037:9:10"
            },
            "scope": 2011,
            "src": "15975:355:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              949
            ],
            "body": {
              "id": 1925,
              "nodeType": "Block",
              "src": "16951:204:10",
              "statements": [
                {
                  "assignments": [
                    1898
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1898,
                      "mutability": "mutable",
                      "name": "localBalance",
                      "nameLocation": "16969:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1925,
                      "src": "16961:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1897,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16961:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1902,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1899,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1124,
                      "src": "16984:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1901,
                    "indexExpression": {
                      "id": 1900,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1888,
                      "src": "16995:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16984:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16961:40:10"
                },
                {
                  "expression": {
                    "id": 1911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1903,
                      "name": "localFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1895,
                      "src": "17011:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1904,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1890,
                              "src": "17025:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1905,
                              "name": "localBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1898,
                              "src": "17034:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17025:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1907,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17024:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 1909,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1890,
                        "src": "17065:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "17024:47:10",
                      "trueExpression": {
                        "id": 1908,
                        "name": "localBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1898,
                        "src": "17050:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17011:60:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1912,
                  "nodeType": "ExpressionStatement",
                  "src": "17011:60:10"
                },
                {
                  "expression": {
                    "id": 1923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1913,
                      "name": "externalFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1893,
                      "src": "17081:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1914,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1890,
                              "src": "17098:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 1915,
                              "name": "localBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1898,
                              "src": "17107:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17098:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 1917,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17097:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "hexValue": "30",
                        "id": 1921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17147:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "id": 1922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "17097:51:10",
                      "trueExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1918,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1890,
                          "src": "17123:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 1919,
                          "name": "localBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1898,
                          "src": "17132:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17123:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17081:67:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1924,
                  "nodeType": "ExpressionStatement",
                  "src": "17081:67:10"
                }
              ]
            },
            "documentation": {
              "id": 1886,
              "nodeType": "StructuredDocumentation",
              "src": "16336:458:10",
              "text": " @notice Splits the funds required to pay 'amount' into two source:\n  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract\n  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract.\n @return externalFunds - the amount of ERC20 required from the external ERC20 contract.\n @return localFunds - the amount of ERC20 local funds required. "
            },
            "functionSelector": "317cb018",
            "id": 1926,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "splitFundingSources",
            "nameLocation": "16808:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1888,
                  "mutability": "mutable",
                  "name": "buyer",
                  "nameLocation": "16836:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "16828:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16828:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1890,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16851:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "16843:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16843:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16827:31:10"
            },
            "returnParameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "externalFunds",
                  "nameLocation": "16912:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "16904:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16904:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "localFunds",
                  "nameLocation": "16935:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1926,
                  "src": "16927:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16927:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16903:43:10"
            },
            "scope": 2011,
            "src": "16799:356:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              956
            ],
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "17376:567:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1934,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "17394:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "feeBPS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 698,
                          "src": "17394:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 1936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17408:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "17394:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6665652063616e6e6f74206265206c6172676572207468616e203130302070657263656e74",
                        "id": 1938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17415:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08",
                          "typeString": "literal_string \"fee cannot be larger than 100 percent\""
                        },
                        "value": "fee cannot be larger than 100 percent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f786ec62d59e2de5863806d8400b2347dd3b96cc31846fd88a861d655df41b08",
                          "typeString": "literal_string \"fee cannot be larger than 100 percent\""
                        }
                      ],
                      "id": 1933,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17386:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17386:69:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "17386:69:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$765",
                          "typeString": "enum IPaymentsERC20.States"
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1943,
                                "name": "inp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1930,
                                "src": "17499:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                  "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                                }
                              },
                              "id": 1944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "paymentId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 694,
                              "src": "17499:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1942,
                            "name": "paymentState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1810,
                            "src": "17486:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_enum$_States_$765_$",
                              "typeString": "function (bytes32) view returns (enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17486:27:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1946,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "17517:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$765_$",
                              "typeString": "type(enum IPaymentsERC20.States)"
                            }
                          },
                          "id": 1947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NotStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 761,
                          "src": "17517:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$765",
                            "typeString": "enum IPaymentsERC20.States"
                          }
                        },
                        "src": "17486:48:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420696e20696e636f727265637420637572656e74207374617465",
                        "id": 1949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17548:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9",
                          "typeString": "literal_string \"payment in incorrect curent state\""
                        },
                        "value": "payment in incorrect curent state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e189711200229316532137c765c20c15f26e0ebfbc47a116d04037bb98f79f9",
                          "typeString": "literal_string \"payment in incorrect curent state\""
                        }
                      ],
                      "id": 1941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17465:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17465:128:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "17465:128:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1953,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "17611:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17611:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1955,
                            "name": "inp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1930,
                            "src": "17630:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                              "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                            }
                          },
                          "id": 1956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 702,
                          "src": "17630:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17611:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7061796d656e7420646561646c696e652065787069726564",
                        "id": 1958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17646:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9",
                          "typeString": "literal_string \"payment deadline expired\""
                        },
                        "value": "payment deadline expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0077b31c61bfb1b6dcee5f2e8e5eb0c7e526516789ca7e4698e8d6028c48fad9",
                          "typeString": "literal_string \"payment deadline expired\""
                        }
                      ],
                      "id": 1952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17603:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17603:70:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1960,
                  "nodeType": "ExpressionStatement",
                  "src": "17603:70:10"
                },
                {
                  "condition": {
                    "id": 1961,
                    "name": "_isSellerRegistrationRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1111,
                    "src": "17687:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1970,
                  "nodeType": "IfStatement",
                  "src": "17683:112:10",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 1963,
                            "name": "_isRegisteredSeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1115,
                            "src": "17738:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1966,
                          "indexExpression": {
                            "expression": {
                              "id": 1964,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "17758:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seller",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 706,
                            "src": "17758:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17738:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "73656c6c6572206e6f742072656769737465726564",
                          "id": 1967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17771:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd",
                            "typeString": "literal_string \"seller not registered\""
                          },
                          "value": "seller not registered"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_7d975c0cc14ac6fc3f4b2147363b7ea9abb807bb8780cb5775e3f4547e3a03cd",
                            "typeString": "literal_string \"seller not registered\""
                          }
                        ],
                        "id": 1962,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "17730:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17730:65:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1969,
                    "nodeType": "ExpressionStatement",
                    "src": "17730:65:10"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1973,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "17847:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 704,
                            "src": "17847:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 1975,
                              "name": "inp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1930,
                              "src": "17858:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                                "typeString": "struct IEIP712Verifier.PaymentInput calldata"
                              }
                            },
                            "id": 1976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 696,
                            "src": "17858:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1972,
                          "name": "enoughFundsAvailable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1845,
                          "src": "17826:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17826:43:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682066756e647320617661696c61626c6520666f722074686973206275796572",
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17883:43:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145",
                          "typeString": "literal_string \"not enough funds available for this buyer\""
                        },
                        "value": "not enough funds available for this buyer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d077e5d249c30b129c22206d273661f8ac1ae6fd2eab7cae12f86af3359c6145",
                          "typeString": "literal_string \"not enough funds available for this buyer\""
                        }
                      ],
                      "id": 1971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17805:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17805:131:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "17805:131:10"
                }
              ]
            },
            "documentation": {
              "id": 1927,
              "nodeType": "StructuredDocumentation",
              "src": "17161:143:10",
              "text": " @notice Reverts unless the requirements for a PaymentInput that\n  are common to both pay and relayedPay are fulfilled."
            },
            "functionSelector": "00f3b6e8",
            "id": 1982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkPaymentInputs",
            "nameLocation": "17318:18:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "inp",
                  "nameLocation": "17359:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1982,
                  "src": "17337:25:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PaymentInput_$707_calldata_ptr",
                    "typeString": "struct IEIP712Verifier.PaymentInput"
                  },
                  "typeName": {
                    "id": 1929,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1928,
                      "name": "PaymentInput",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 707,
                      "src": "17337:12:10"
                    },
                    "referencedDeclaration": 707,
                    "src": "17337:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PaymentInput_$707_storage_ptr",
                      "typeString": "struct IEIP712Verifier.PaymentInput"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17336:27:10"
            },
            "returnParameters": {
              "id": 1932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17376:0:10"
            },
            "scope": 2011,
            "src": "17309:634:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              966
            ],
            "body": {
              "id": 2009,
              "nodeType": "Block",
              "src": "18383:121:10",
              "statements": [
                {
                  "assignments": [
                    1993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1993,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "18401:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2009,
                      "src": "18393:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1992,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18393:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2000,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1994,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "18414:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1995,
                            "name": "feeBPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1987,
                            "src": "18423:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18414:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1997,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18413:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 1998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18433:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "18413:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18393:45:10"
                },
                {
                  "expression": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2001,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "18456:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 2002,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1985,
                            "src": "18469:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18456:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2004,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18455:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 2006,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "18491:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "18455:42:10",
                    "trueExpression": {
                      "id": 2005,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1993,
                      "src": "18479:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1991,
                  "id": 2008,
                  "nodeType": "Return",
                  "src": "18448:49:10"
                }
              ]
            },
            "documentation": {
              "id": 1983,
              "nodeType": "StructuredDocumentation",
              "src": "17972:290:10",
              "text": " @notice Safe compute fee amount\n  Returns a values that is guaranteed to be less or equal to total provided amount\n  The safety check should be unnecessary, since only feeBPS < 10000 are accepted\n  when receiving a payment.\n @return the fee amount"
            },
            "functionSelector": "2af41be4",
            "id": 2010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeFeeAmount",
            "nameLocation": "18276:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1985,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18301:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "18293:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18293:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1987,
                  "mutability": "mutable",
                  "name": "feeBPS",
                  "nameLocation": "18317:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "18309:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18309:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18292:32:10"
            },
            "returnParameters": {
              "id": 1991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1990,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2010,
                  "src": "18370:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18370:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18369:9:10"
            },
            "scope": 2011,
            "src": "18267:237:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2012,
        "src": "2091:16415:10",
        "usedErrors": []
      }
    ],
    "src": "32:18475:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.8+commit.dddeac2f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-20T16:32:56.414Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptedCurrency()": {
        "returns": {
          "_0": "the string describing the currency"
        }
      },
      "allowance(address)": {
        "params": {
          "buyer": "the address of the buyer"
        },
        "returns": {
          "_0": "the amount allowed by buyer"
        }
      },
      "assetTransferFailed(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "assetTransferSuccess(bytes32)": {
        "details": "Moves payment to PAID state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "balanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the local balance"
        }
      },
      "computeFeeAmount(uint256,uint256)": {
        "returns": {
          "_0": "the fee amount"
        }
      },
      "enoughFundsAvailable(address,uint256)": {
        "returns": {
          "_0": "a bool, true is enough available"
        }
      },
      "erc20BalanceOf(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "the balance in the external ERC20 contract"
        }
      },
      "isRegisteredSeller(address)": {
        "params": {
          "addr": "the address that is queried"
        },
        "returns": {
          "_0": "isRegistered as seller"
        }
      },
      "maxFundsAvailable(address)": {
        "returns": {
          "_0": "the max funds available"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "inp": "The struct containing all required payment data",
          "operatorSignature": "The signature of 'inp' by the operator"
        }
      },
      "paymentInfo(bytes32)": {
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the struct stored for the payment"
        }
      },
      "paymentState(bytes32)": {
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        },
        "returns": {
          "_0": "the state of the payment. Enum: NotStarted, AssetTransferring, Failed, Paid"
        }
      },
      "paymentWindow()": {
        "returns": {
          "_0": "the payment window"
        }
      },
      "refund(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "refundAndWithdraw(bytes32)": {
        "details": "Moves payment to NOT_STARTED state.",
        "params": {
          "paymentId": "The unique ID that identifies the payment."
        }
      },
      "relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "details": "Follows standard Checks-Effects-Interactions pattern  to protect against re-entrancy attacks.  Moves payment to ASSET_TRANSFERRING state.",
        "params": {
          "buyerSignature": "The signature of 'inp' by the buyer",
          "inp": "The struct containing all required payment data"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setIsSellerRegistrationRequired(bool)": {
        "params": {
          "isRequired": "(bool) if true, registration is required."
        }
      },
      "setPaymentWindow(uint256)": {
        "params": {
          "window": "The amount of time available, in seconds."
        }
      },
      "splitFundingSources(address,uint256)": {
        "returns": {
          "externalFunds": "- the amount of ERC20 required from the external ERC20 contract.",
          "localFunds": "- the amount of ERC20 local funds required. "
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptedCurrency()": {
        "notice": "Returns a descriptor about the currency that this contract accepts"
      },
      "allowance(address)": {
        "notice": "Returns the allowance that the buyer has approved  directly in the ERC20 contract in favour of this contract."
      },
      "assetTransferFailed(bytes32)": {
        "notice": "Confirms the failure of asset transfer and refunds buyer.  Needs to be executed by the operator.  Buyer's balance is updated, allowing explicit withdrawal.  It resets all data related to this payment."
      },
      "assetTransferSuccess(bytes32)": {
        "notice": "Confirms the asset transfer.  Needs to be executed by the operator.  Updates balances of seller and feesCollector."
      },
      "balanceOf(address)": {
        "notice": "Returns the local ERC20 balance of address that is stored in this  contract, and hence, available for withdrawal."
      },
      "checkPaymentInputs((bytes32,uint256,uint16,uint256,uint256,address,address))": {
        "notice": "Reverts unless the requirements for a PaymentInput that  are common to both pay and relayedPay are fulfilled."
      },
      "computeFeeAmount(uint256,uint256)": {
        "notice": "Safe compute fee amount  Returns a values that is guaranteed to be less or equal to total provided amount  The safety check should be unnecessary, since only feeBPS < 10000 are accepted  when receiving a payment."
      },
      "enoughFundsAvailable(address,uint256)": {
        "notice": "Returns true if the 'amount' required for a payment is available to this contract.  In more detail: returns true if the sum of the buyer's local balance in this contract,  plus funds available and approved in the ERC20 contract, are larger or equal than 'amount'"
      },
      "erc20()": {
        "notice": "Returns the address of the ERC20 contract from which  tokens are accepted for payments"
      },
      "erc20BalanceOf(address)": {
        "notice": "Returns ERC20 balance of address in the ERC20 contract"
      },
      "isRegisteredSeller(address)": {
        "notice": "Returns true if the address provided is a registered seller"
      },
      "isSellerRegistrationRequired()": {
        "notice": "Returns true if sellers need to be registered to be able to accept payments"
      },
      "maxFundsAvailable(address)": {
        "notice": "Returns the maximum amount of funds available to a buyer  In more detail: returns the sum of the buyer's local balance in this contract,  plus the funds available and approved in the ERC20 contract."
      },
      "pay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts Payment process directly by the buyer.  Executed by the buyer, who relays the MetaTX with the operator's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract."
      },
      "paymentInfo(bytes32)": {
        "notice": "Returns all data stored in a payment"
      },
      "paymentState(bytes32)": {
        "notice": "Returns the state of a payment.  It maps 1-to-1 with the stored variable, with the exeption of  an ASSET_TRANSFERRING that has gone beyond expirationTime."
      },
      "paymentWindow()": {
        "notice": "Returns the amount of seconds that a payment  can remain in ASSET_TRANSFERRING state without positive  or negative confirmation by the operator"
      },
      "refund(bytes32)": {
        "notice": "Moves buyer's provided funds to buyer's balance.  Anybody can call this function.  Requires current state == FAILED to proceed.  After updating buyer's balance, he/she can later withdraw.  It resets all data related to this payment."
      },
      "refundAndWithdraw(bytes32)": {
        "notice": "Exectutes refund and withdraw in one transaction.  Needs to be called by buyer.  All of buyer's balance in the contract is withdrawn,  not only the part that was locked in this particular paymentId"
      },
      "registerAsSeller()": {
        "notice": "Registers msg.sender a seller so that he/she can accept payments."
      },
      "relayedPay((bytes32,uint256,uint16,uint256,uint256,address,address),bytes)": {
        "notice": "Starts the Payment process via relay-by-operator.  Executed by an operator, who relays the MetaTX with the buyer's signature.  The buyer must have approved the amount to this contract before.  If all requirements are fulfilled, it stores the data relevant  for the next steps of the payment, and it locks the ERC20  in this contract."
      },
      "setIsSellerRegistrationRequired(bool)": {
        "notice": "Sets whether sellers are required to register in this contract before being,  able to accept payments. "
      },
      "setPaymentWindow(uint256)": {
        "notice": "Sets the amount of time available to the operator, after the payment starts,  to confirm either the success of the failure of the asset transfer.   After this time, the payment moves to FAILED, allowing buyer to withdraw."
      },
      "splitFundingSources(address,uint256)": {
        "notice": "Splits the funds required to pay 'amount' into two source:  - externalFunds: the amount of ERC20 required to be transferred from the external ERC20 contract  - localFunds: the amount of ERC20 from the buyer's already available balance in this contract."
      },
      "withdraw()": {
        "notice": "Transfers ERC20 avaliable in this  contract's balanceOf[msg.sender] to msg.sender"
      }
    },
    "version": 1
  }
}